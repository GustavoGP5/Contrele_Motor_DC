

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Jun 01 07:55:23 2022

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1180                           INDF equ 00h ;# 
  1181  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1182                           TMR0 equ 01h ;# 
  1183  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1184                           PCL equ 02h ;# 
  1185  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1186                           STATUS equ 03h ;# 
  1187  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1188                           FSR equ 04h ;# 
  1189  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1190                           PORTA equ 05h ;# 
  1191  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1192                           PORTB equ 06h ;# 
  1193  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1194                           PORTC equ 07h ;# 
  1195  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1196                           PORTD equ 08h ;# 
  1197  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1198                           PORTE equ 09h ;# 
  1199  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1200                           PCLATH equ 0Ah ;# 
  1201  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1202                           INTCON equ 0Bh ;# 
  1203  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1204                           PIR1 equ 0Ch ;# 
  1205  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1206                           PIR2 equ 0Dh ;# 
  1207  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1208                           TMR1 equ 0Eh ;# 
  1209  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1210                           TMR1L equ 0Eh ;# 
  1211  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1212                           TMR1H equ 0Fh ;# 
  1213  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1214                           T1CON equ 010h ;# 
  1215  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1216                           TMR2 equ 011h ;# 
  1217  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1218                           T2CON equ 012h ;# 
  1219  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1220                           SSPBUF equ 013h ;# 
  1221  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1222                           SSPCON equ 014h ;# 
  1223  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1224                           CCPR1 equ 015h ;# 
  1225  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1226                           CCPR1L equ 015h ;# 
  1227  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1228                           CCPR1H equ 016h ;# 
  1229  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1230                           CCP1CON equ 017h ;# 
  1231  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1232                           RCSTA equ 018h ;# 
  1233  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1234                           TXREG equ 019h ;# 
  1235  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1236                           RCREG equ 01Ah ;# 
  1237  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1238                           CCPR2 equ 01Bh ;# 
  1239  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1240                           CCPR2L equ 01Bh ;# 
  1241  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1242                           CCPR2H equ 01Ch ;# 
  1243  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1244                           CCP2CON equ 01Dh ;# 
  1245  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1246                           ADRESH equ 01Eh ;# 
  1247  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1248                           ADCON0 equ 01Fh ;# 
  1249  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1250                           OPTION_REG equ 081h ;# 
  1251  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1252                           TRISA equ 085h ;# 
  1253  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1254                           TRISB equ 086h ;# 
  1255  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1256                           TRISC equ 087h ;# 
  1257  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1258                           TRISD equ 088h ;# 
  1259  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1260                           TRISE equ 089h ;# 
  1261  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1262                           PIE1 equ 08Ch ;# 
  1263  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1264                           PIE2 equ 08Dh ;# 
  1265  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1266                           PCON equ 08Eh ;# 
  1267  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1268                           OSCCON equ 08Fh ;# 
  1269  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1270                           OSCTUNE equ 090h ;# 
  1271  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1272                           SSPCON2 equ 091h ;# 
  1273  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1274                           PR2 equ 092h ;# 
  1275  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1276                           SSPADD equ 093h ;# 
  1277  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1278                           SSPMSK equ 093h ;# 
  1279  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1280                           MSK equ 093h ;# 
  1281  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1282                           SSPSTAT equ 094h ;# 
  1283  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1284                           WPUB equ 095h ;# 
  1285  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1286                           IOCB equ 096h ;# 
  1287  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1288                           VRCON equ 097h ;# 
  1289  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1290                           TXSTA equ 098h ;# 
  1291  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1292                           SPBRG equ 099h ;# 
  1293  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1294                           SPBRGH equ 09Ah ;# 
  1295  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1296                           PWM1CON equ 09Bh ;# 
  1297  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1298                           ECCPAS equ 09Ch ;# 
  1299  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1300                           PSTRCON equ 09Dh ;# 
  1301  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1302                           ADRESL equ 09Eh ;# 
  1303  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1304                           ADCON1 equ 09Fh ;# 
  1305  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1306                           WDTCON equ 0105h ;# 
  1307  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1308                           CM1CON0 equ 0107h ;# 
  1309  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1310                           CM2CON0 equ 0108h ;# 
  1311  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1312                           CM2CON1 equ 0109h ;# 
  1313  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1314                           EEDATA equ 010Ch ;# 
  1315  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1316                           EEDAT equ 010Ch ;# 
  1317  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1318                           EEADR equ 010Dh ;# 
  1319  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1320                           EEDATH equ 010Eh ;# 
  1321  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1322                           EEADRH equ 010Fh ;# 
  1323  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1324                           SRCON equ 0185h ;# 
  1325  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1326                           BAUDCTL equ 0187h ;# 
  1327  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1328                           ANSEL equ 0188h ;# 
  1329  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1330                           ANSELH equ 0189h ;# 
  1331  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1332                           EECON1 equ 018Ch ;# 
  1333  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1334                           EECON2 equ 018Dh ;# 
  1335  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1336                           INDF equ 00h ;# 
  1337  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1338                           TMR0 equ 01h ;# 
  1339  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1340                           PCL equ 02h ;# 
  1341  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1342                           STATUS equ 03h ;# 
  1343  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1344                           FSR equ 04h ;# 
  1345  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1346                           PORTA equ 05h ;# 
  1347  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1348                           PORTB equ 06h ;# 
  1349  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1350                           PORTC equ 07h ;# 
  1351  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1352                           PORTD equ 08h ;# 
  1353  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1354                           PORTE equ 09h ;# 
  1355  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1356                           PCLATH equ 0Ah ;# 
  1357  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1358                           INTCON equ 0Bh ;# 
  1359  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1360                           PIR1 equ 0Ch ;# 
  1361  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1362                           PIR2 equ 0Dh ;# 
  1363  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1364                           TMR1 equ 0Eh ;# 
  1365  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1366                           TMR1L equ 0Eh ;# 
  1367  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1368                           TMR1H equ 0Fh ;# 
  1369  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1370                           T1CON equ 010h ;# 
  1371  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1372                           TMR2 equ 011h ;# 
  1373  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1374                           T2CON equ 012h ;# 
  1375  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1376                           SSPBUF equ 013h ;# 
  1377  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1378                           SSPCON equ 014h ;# 
  1379  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1380                           CCPR1 equ 015h ;# 
  1381  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1382                           CCPR1L equ 015h ;# 
  1383  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1384                           CCPR1H equ 016h ;# 
  1385  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1386                           CCP1CON equ 017h ;# 
  1387  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1388                           RCSTA equ 018h ;# 
  1389  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1390                           TXREG equ 019h ;# 
  1391  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1392                           RCREG equ 01Ah ;# 
  1393  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1394                           CCPR2 equ 01Bh ;# 
  1395  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1396                           CCPR2L equ 01Bh ;# 
  1397  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1398                           CCPR2H equ 01Ch ;# 
  1399  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1400                           CCP2CON equ 01Dh ;# 
  1401  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1402                           ADRESH equ 01Eh ;# 
  1403  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1404                           ADCON0 equ 01Fh ;# 
  1405  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1406                           OPTION_REG equ 081h ;# 
  1407  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1408                           TRISA equ 085h ;# 
  1409  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1410                           TRISB equ 086h ;# 
  1411  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1412                           TRISC equ 087h ;# 
  1413  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1414                           TRISD equ 088h ;# 
  1415  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1416                           TRISE equ 089h ;# 
  1417  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1418                           PIE1 equ 08Ch ;# 
  1419  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1420                           PIE2 equ 08Dh ;# 
  1421  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1422                           PCON equ 08Eh ;# 
  1423  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1424                           OSCCON equ 08Fh ;# 
  1425  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1426                           OSCTUNE equ 090h ;# 
  1427  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1428                           SSPCON2 equ 091h ;# 
  1429  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1430                           PR2 equ 092h ;# 
  1431  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1432                           SSPADD equ 093h ;# 
  1433  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1434                           SSPMSK equ 093h ;# 
  1435  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1436                           MSK equ 093h ;# 
  1437  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1438                           SSPSTAT equ 094h ;# 
  1439  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1440                           WPUB equ 095h ;# 
  1441  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1442                           IOCB equ 096h ;# 
  1443  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1444                           VRCON equ 097h ;# 
  1445  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1446                           TXSTA equ 098h ;# 
  1447  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1448                           SPBRG equ 099h ;# 
  1449  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1450                           SPBRGH equ 09Ah ;# 
  1451  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1452                           PWM1CON equ 09Bh ;# 
  1453  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1454                           ECCPAS equ 09Ch ;# 
  1455  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1456                           PSTRCON equ 09Dh ;# 
  1457  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1458                           ADRESL equ 09Eh ;# 
  1459  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1460                           ADCON1 equ 09Fh ;# 
  1461  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1462                           WDTCON equ 0105h ;# 
  1463  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1464                           CM1CON0 equ 0107h ;# 
  1465  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1466                           CM2CON0 equ 0108h ;# 
  1467  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1468                           CM2CON1 equ 0109h ;# 
  1469  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1470                           EEDATA equ 010Ch ;# 
  1471  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1472                           EEDAT equ 010Ch ;# 
  1473  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1474                           EEADR equ 010Dh ;# 
  1475  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1476                           EEDATH equ 010Eh ;# 
  1477  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1478                           EEADRH equ 010Fh ;# 
  1479  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1480                           SRCON equ 0185h ;# 
  1481  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1482                           BAUDCTL equ 0187h ;# 
  1483  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1484                           ANSEL equ 0188h ;# 
  1485  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1486                           ANSELH equ 0189h ;# 
  1487  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1488                           EECON1 equ 018Ch ;# 
  1489  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1490                           EECON2 equ 018Dh ;# 
  1491  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1492                           INDF equ 00h ;# 
  1493  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1494                           TMR0 equ 01h ;# 
  1495  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1496                           PCL equ 02h ;# 
  1497  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1498                           STATUS equ 03h ;# 
  1499  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1500                           FSR equ 04h ;# 
  1501  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1502                           PORTA equ 05h ;# 
  1503  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1504                           PORTB equ 06h ;# 
  1505  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1506                           PORTC equ 07h ;# 
  1507  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1508                           PORTD equ 08h ;# 
  1509  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1510                           PORTE equ 09h ;# 
  1511  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1512                           PCLATH equ 0Ah ;# 
  1513  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1514                           INTCON equ 0Bh ;# 
  1515  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1516                           PIR1 equ 0Ch ;# 
  1517  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1518                           PIR2 equ 0Dh ;# 
  1519  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1520                           TMR1 equ 0Eh ;# 
  1521  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1522                           TMR1L equ 0Eh ;# 
  1523  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1524                           TMR1H equ 0Fh ;# 
  1525  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1526                           T1CON equ 010h ;# 
  1527  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1528                           TMR2 equ 011h ;# 
  1529  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1530                           T2CON equ 012h ;# 
  1531  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1532                           SSPBUF equ 013h ;# 
  1533  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1534                           SSPCON equ 014h ;# 
  1535  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1536                           CCPR1 equ 015h ;# 
  1537  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1538                           CCPR1L equ 015h ;# 
  1539  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1540                           CCPR1H equ 016h ;# 
  1541  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1542                           CCP1CON equ 017h ;# 
  1543  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1544                           RCSTA equ 018h ;# 
  1545  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1546                           TXREG equ 019h ;# 
  1547  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1548                           RCREG equ 01Ah ;# 
  1549  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1550                           CCPR2 equ 01Bh ;# 
  1551  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1552                           CCPR2L equ 01Bh ;# 
  1553  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1554                           CCPR2H equ 01Ch ;# 
  1555  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1556                           CCP2CON equ 01Dh ;# 
  1557  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1558                           ADRESH equ 01Eh ;# 
  1559  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1560                           ADCON0 equ 01Fh ;# 
  1561  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1562                           OPTION_REG equ 081h ;# 
  1563  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1564                           TRISA equ 085h ;# 
  1565  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1566                           TRISB equ 086h ;# 
  1567  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1568                           TRISC equ 087h ;# 
  1569  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1570                           TRISD equ 088h ;# 
  1571  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1572                           TRISE equ 089h ;# 
  1573  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1574                           PIE1 equ 08Ch ;# 
  1575  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1576                           PIE2 equ 08Dh ;# 
  1577  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1578                           PCON equ 08Eh ;# 
  1579  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1580                           OSCCON equ 08Fh ;# 
  1581  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1582                           OSCTUNE equ 090h ;# 
  1583  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1584                           SSPCON2 equ 091h ;# 
  1585  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1586                           PR2 equ 092h ;# 
  1587  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1588                           SSPADD equ 093h ;# 
  1589  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1590                           SSPMSK equ 093h ;# 
  1591  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1592                           MSK equ 093h ;# 
  1593  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1594                           SSPSTAT equ 094h ;# 
  1595  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1596                           WPUB equ 095h ;# 
  1597  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1598                           IOCB equ 096h ;# 
  1599  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1600                           VRCON equ 097h ;# 
  1601  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1602                           TXSTA equ 098h ;# 
  1603  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1604                           SPBRG equ 099h ;# 
  1605  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1606                           SPBRGH equ 09Ah ;# 
  1607  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1608                           PWM1CON equ 09Bh ;# 
  1609  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1610                           ECCPAS equ 09Ch ;# 
  1611  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1612                           PSTRCON equ 09Dh ;# 
  1613  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1614                           ADRESL equ 09Eh ;# 
  1615  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1616                           ADCON1 equ 09Fh ;# 
  1617  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1618                           WDTCON equ 0105h ;# 
  1619  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1620                           CM1CON0 equ 0107h ;# 
  1621  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1622                           CM2CON0 equ 0108h ;# 
  1623  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1624                           CM2CON1 equ 0109h ;# 
  1625  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1626                           EEDATA equ 010Ch ;# 
  1627  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1628                           EEDAT equ 010Ch ;# 
  1629  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1630                           EEADR equ 010Dh ;# 
  1631  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1632                           EEDATH equ 010Eh ;# 
  1633  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1634                           EEADRH equ 010Fh ;# 
  1635  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1636                           SRCON equ 0185h ;# 
  1637  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1638                           BAUDCTL equ 0187h ;# 
  1639  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1640                           ANSEL equ 0188h ;# 
  1641  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1642                           ANSELH equ 0189h ;# 
  1643  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1644                           EECON1 equ 018Ch ;# 
  1645  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1646                           EECON2 equ 018Dh ;# 
  1647  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1648                           INDF equ 00h ;# 
  1649  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1650                           TMR0 equ 01h ;# 
  1651  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1652                           PCL equ 02h ;# 
  1653  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1654                           STATUS equ 03h ;# 
  1655  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1656                           FSR equ 04h ;# 
  1657  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1658                           PORTA equ 05h ;# 
  1659  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1660                           PORTB equ 06h ;# 
  1661  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1662                           PORTC equ 07h ;# 
  1663  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1664                           PORTD equ 08h ;# 
  1665  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1666                           PORTE equ 09h ;# 
  1667  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1668                           PCLATH equ 0Ah ;# 
  1669  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1670                           INTCON equ 0Bh ;# 
  1671  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1672                           PIR1 equ 0Ch ;# 
  1673  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1674                           PIR2 equ 0Dh ;# 
  1675  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1676                           TMR1 equ 0Eh ;# 
  1677  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1678                           TMR1L equ 0Eh ;# 
  1679  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1680                           TMR1H equ 0Fh ;# 
  1681  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1682                           T1CON equ 010h ;# 
  1683  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1684                           TMR2 equ 011h ;# 
  1685  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1686                           T2CON equ 012h ;# 
  1687  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1688                           SSPBUF equ 013h ;# 
  1689  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1690                           SSPCON equ 014h ;# 
  1691  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1692                           CCPR1 equ 015h ;# 
  1693  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1694                           CCPR1L equ 015h ;# 
  1695  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1696                           CCPR1H equ 016h ;# 
  1697  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1698                           CCP1CON equ 017h ;# 
  1699  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1700                           RCSTA equ 018h ;# 
  1701  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1702                           TXREG equ 019h ;# 
  1703  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1704                           RCREG equ 01Ah ;# 
  1705  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1706                           CCPR2 equ 01Bh ;# 
  1707  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1708                           CCPR2L equ 01Bh ;# 
  1709  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1710                           CCPR2H equ 01Ch ;# 
  1711  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1712                           CCP2CON equ 01Dh ;# 
  1713  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1714                           ADRESH equ 01Eh ;# 
  1715  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1716                           ADCON0 equ 01Fh ;# 
  1717  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1718                           OPTION_REG equ 081h ;# 
  1719  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1720                           TRISA equ 085h ;# 
  1721  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1722                           TRISB equ 086h ;# 
  1723  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1724                           TRISC equ 087h ;# 
  1725  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1726                           TRISD equ 088h ;# 
  1727  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1728                           TRISE equ 089h ;# 
  1729  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1730                           PIE1 equ 08Ch ;# 
  1731  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1732                           PIE2 equ 08Dh ;# 
  1733  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1734                           PCON equ 08Eh ;# 
  1735  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1736                           OSCCON equ 08Fh ;# 
  1737  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1738                           OSCTUNE equ 090h ;# 
  1739  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1740                           SSPCON2 equ 091h ;# 
  1741  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1742                           PR2 equ 092h ;# 
  1743  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1744                           SSPADD equ 093h ;# 
  1745  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1746                           SSPMSK equ 093h ;# 
  1747  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1748                           MSK equ 093h ;# 
  1749  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1750                           SSPSTAT equ 094h ;# 
  1751  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1752                           WPUB equ 095h ;# 
  1753  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1754                           IOCB equ 096h ;# 
  1755  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1756                           VRCON equ 097h ;# 
  1757  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1758                           TXSTA equ 098h ;# 
  1759  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1760                           SPBRG equ 099h ;# 
  1761  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1762                           SPBRGH equ 09Ah ;# 
  1763  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1764                           PWM1CON equ 09Bh ;# 
  1765  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1766                           ECCPAS equ 09Ch ;# 
  1767  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1768                           PSTRCON equ 09Dh ;# 
  1769  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1770                           ADRESL equ 09Eh ;# 
  1771  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1772                           ADCON1 equ 09Fh ;# 
  1773  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1774                           WDTCON equ 0105h ;# 
  1775  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1776                           CM1CON0 equ 0107h ;# 
  1777  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1778                           CM2CON0 equ 0108h ;# 
  1779  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1780                           CM2CON1 equ 0109h ;# 
  1781  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1782                           EEDATA equ 010Ch ;# 
  1783  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1784                           EEDAT equ 010Ch ;# 
  1785  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1786                           EEADR equ 010Dh ;# 
  1787  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1788                           EEDATH equ 010Eh ;# 
  1789  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1790                           EEADRH equ 010Fh ;# 
  1791  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1792                           SRCON equ 0185h ;# 
  1793  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1794                           BAUDCTL equ 0187h ;# 
  1795  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1796                           ANSEL equ 0188h ;# 
  1797  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1798                           ANSELH equ 0189h ;# 
  1799  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1800                           EECON1 equ 018Ch ;# 
  1801  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1802                           EECON2 equ 018Dh ;# 
  1803  018D                     	FNCALL	_main,_delay
  1804                           	FNCALL	_main,_lcd_init
  1805                           	FNCALL	_main,_lcd_num
  1806                           	FNCALL	_main,_lcd_print
  1807                           	FNCALL	_main,_motorDC
  1808                           	FNCALL	_main,_motorDC_dec
  1809                           	FNCALL	_main,_motorDC_dutycycle
  1810                           	FNCALL	_main,_motorDC_inc
  1811                           	FNCALL	_main,_motorDC_init
  1812                           	FNCALL	_main,_teclado
  1813                           	FNCALL	_main,_teclado_init
  1814                           	FNCALL	_teclado,_b0_bordaSubida
  1815                           	FNCALL	_teclado,_b1_bordaSubida
  1816                           	FNCALL	_motorDC_init,_T2_init
  1817                           	FNCALL	_motorDC_init,_T2_start
  1818                           	FNCALL	_motorDC_inc,_delay
  1819                           	FNCALL	_motorDC_dec,_delay
  1820                           	FNCALL	_lcd_print,_lcd_dataReg
  1821                           	FNCALL	_lcd_print,_lcd_lincol
  1822                           	FNCALL	_lcd_num,___awdiv
  1823                           	FNCALL	_lcd_num,___awmod
  1824                           	FNCALL	_lcd_num,_lcd_dataReg
  1825                           	FNCALL	_lcd_num,_lcd_lincol
  1826                           	FNCALL	_lcd_lincol,_lcd_instReg
  1827                           	FNCALL	_lcd_init,_delay
  1828                           	FNCALL	_lcd_init,_lcd_instReg
  1829                           	FNROOT	_main
  1830                           	FNCALL	_isr,_T2_int
  1831                           	FNCALL	_T2_int,___lwmod
  1832                           	FNCALL	_T2_int,i1_motorDC_dutycycle
  1833                           	FNCALL	intlevel1,_isr
  1834                           	global	intlevel1
  1835                           	FNROOT	intlevel1
  1836                           psect	idataCOMMON,class=CODE,space=0,delta=2,noexec
  1837                           global __pidataCOMMON
  1838                           __pidataCOMMON:
  1839  06F4                     	file	"PWM.c"
  1840                           	line	3
  1841                           
  1842                           ;initializer for _Valor
  1843                           	retlw	07Fh
  1844  06F4  347F               	global	_tecladoMatriz
  1845                           psect	strings,class=STRING,delta=2,noexec
  1846                           global __pstrings
  1847                           __pstrings:
  1848  0460                     stringtab:
  1849  0460                     	global    __stringtab
  1850                           __stringtab:
  1851  0460                     ;	String table - string pointers are 1 byte each
  1852                           stringcode:stringdir:
  1853  0460                     movlw high(stringdir)
      + 0460                     stringdir:	
  1854  0460  3004               movwf pclath
  1855  0461  008A               movf fsr,w
  1856  0462  0804               incf fsr
  1857  0463  0A84               	addwf pc
  1858  0464  0782               	global __stringbase
  1859                           __stringbase:
  1860  0465                     	retlw	0
  1861  0465  3400               psect	strings
  1862                           	global    __end_of__stringtab
  1863                           __end_of__stringtab:
  1864  0466                     	file	"teclado.c"
  1865                           	line	17
  1866                           _tecladoMatriz:
  1867  0466                     	retlw	031h
  1868  0466  3431               	retlw	032h
  1869  0467  3432               	retlw	033h
  1870  0468  3433               	retlw	041h
  1871  0469  3441               	retlw	034h
  1872  046A  3434               	retlw	035h
  1873  046B  3435               	retlw	036h
  1874  046C  3436               	retlw	042h
  1875  046D  3442               	retlw	037h
  1876  046E  3437               	retlw	038h
  1877  046F  3438               	retlw	039h
  1878  0470  3439               	retlw	043h
  1879  0471  3443               	retlw	02Ah
  1880  0472  342A               	retlw	030h
  1881  0473  3430               	retlw	023h
  1882  0474  3423               	retlw	044h
  1883  0475  3444               	global __end_of_tecladoMatriz
  1884                           __end_of_tecladoMatriz:
  1885  0476                     	global	_tecladoMatriz
  1886                           	global	_T2count
  1887                           	global	_T1count
  1888                           	global	_T0count
  1889                           	global	_motorDC_dc
  1890                           	global	_min
  1891                           	global	_seg
  1892                           	global	_b1Anterior
  1893                           	global	_b0Anterior
  1894                           	global	_PIR1bits
  1895                           _PIR1bits	set	0xC
  1896  000C                     	global	_T2CONbits
  1897                           _T2CONbits	set	0x12
  1898  0012                     	global	_TMR2
  1899                           _TMR2	set	0x11
  1900  0011                     	global	_TMR1L
  1901                           _TMR1L	set	0xE
  1902  000E                     	global	_TMR1H
  1903                           _TMR1H	set	0xF
  1904  000F                     	global	_T1CONbits
  1905                           _T1CONbits	set	0x10
  1906  0010                     	global	_TMR0
  1907                           _TMR0	set	0x1
  1908  0001                     	global	_INTCONbits
  1909                           _INTCONbits	set	0xB
  1910  000B                     	global	_PORTB
  1911                           _PORTB	set	0x6
  1912  0006                     	global	_CCP1CONbits
  1913                           _CCP1CONbits	set	0x17
  1914  0017                     	global	_CCPR1L
  1915                           _CCPR1L	set	0x15
  1916  0015                     	global	_CCP1CON
  1917                           _CCP1CON	set	0x17
  1918  0017                     	global	_T2CON
  1919                           _T2CON	set	0x12
  1920  0012                     	global	_PORTCbits
  1921                           _PORTCbits	set	0x7
  1922  0007                     	global	_PORTD
  1923                           _PORTD	set	0x8
  1924  0008                     	global	_PORTDbits
  1925                           _PORTDbits	set	0x8
  1926  0008                     	global	_PIE1bits
  1927                           _PIE1bits	set	0x8C
  1928  008C                     	global	_WPUB
  1929                           _WPUB	set	0x95
  1930  0095                     	global	_OPTION_REGbits
  1931                           _OPTION_REGbits	set	0x81
  1932  0081                     	global	_TRISB
  1933                           _TRISB	set	0x86
  1934  0086                     	global	_PR2
  1935                           _PR2	set	0x92
  1936  0092                     	global	_TRISCbits
  1937                           _TRISCbits	set	0x87
  1938  0087                     	global	_TRISDbits
  1939                           _TRISDbits	set	0x88
  1940  0088                     	global	_ANSELH
  1941                           _ANSELH	set	0x189
  1942  0189                     	
  1943                           STR_3:	
  1944  0476                     	retlw	32	;' '
  1945  0476  3420               	retlw	32	;' '
  1946  0477  3420               	retlw	32	;' '
  1947  0478  3420               	retlw	32	;' '
  1948  0479  3420               	retlw	32	;' '
  1949  047A  3420               	retlw	76	;'L'
  1950  047B  344C               	retlw	73	;'I'
  1951  047C  3449               	retlw	71	;'G'
  1952  047D  3447               	retlw	65	;'A'
  1953  047E  3441               	retlw	68	;'D'
  1954  047F  3444               	retlw	79	;'O'
  1955  0480  344F               	retlw	32	;' '
  1956  0481  3420               	retlw	32	;' '
  1957  0482  3420               	retlw	32	;' '
  1958  0483  3420               	retlw	32	;' '
  1959  0484  3420               	retlw	32	;' '
  1960  0485  3420               	retlw	0
  1961  0486  3400               psect	strings
  1962                           	
  1963                           STR_2:	
  1964  0487                     	retlw	32	;' '
  1965  0487  3420               	retlw	32	;' '
  1966  0488  3420               	retlw	32	;' '
  1967  0489  3420               	retlw	68	;'D'
  1968  048A  3444               	retlw	69	;'E'
  1969  048B  3445               	retlw	83	;'S'
  1970  048C  3453               	retlw	76	;'L'
  1971  048D  344C               	retlw	73	;'I'
  1972  048E  3449               	retlw	71	;'G'
  1973  048F  3447               	retlw	65	;'A'
  1974  0490  3441               	retlw	68	;'D'
  1975  0491  3444               	retlw	79	;'O'
  1976  0492  344F               	retlw	32	;' '
  1977  0493  3420               	retlw	32	;' '
  1978  0494  3420               	retlw	32	;' '
  1979  0495  3420               	retlw	32	;' '
  1980  0496  3420               	retlw	0
  1981  0497  3400               psect	strings
  1982                           	
  1983                           STR_1:	
  1984  0498                     	retlw	67	;'C'
  1985  0498  3443               	retlw	111	;'o'
  1986  0499  346F               	retlw	110	;'n'
  1987  049A  346E               	retlw	116	;'t'
  1988  049B  3474               	retlw	114	;'r'
  1989  049C  3472               	retlw	111	;'o'
  1990  049D  346F               	retlw	108	;'l'
  1991  049E  346C               	retlw	101	;'e'
  1992  049F  3465               	retlw	32	;' '
  1993  04A0  3420               	retlw	77	;'M'
  1994  04A1  344D               	retlw	111	;'o'
  1995  04A2  346F               	retlw	116	;'t'
  1996  04A3  3474               	retlw	111	;'o'
  1997  04A4  346F               	retlw	114	;'r'
  1998  04A5  3472               	retlw	32	;' '
  1999  04A6  3420               	retlw	32	;' '
  2000  04A7  3420               	retlw	0
  2001  04A8  3400               psect	strings
  2002                           	
  2003                           STR_4:	
  2004  04A9                     	retlw	32	;' '
  2005  04A9  3420               	retlw	86	;'V'
  2006  04AA  3456               	retlw	69	;'E'
  2007  04AB  3445               	retlw	76	;'L'
  2008  04AC  344C               	retlw	79	;'O'
  2009  04AD  344F               	retlw	67	;'C'
  2010  04AE  3443               	retlw	73	;'I'
  2011  04AF  3449               	retlw	68	;'D'
  2012  04B0  3444               	retlw	65	;'A'
  2013  04B1  3441               	retlw	68	;'D'
  2014  04B2  3444               	retlw	69	;'E'
  2015  04B3  3445               	retlw	32	;' '
  2016  04B4  3420               	retlw	32	;' '
  2017  04B5  3420               	retlw	32	;' '
  2018  04B6  3420               	retlw	32	;' '
  2019  04B7  3420               	retlw	37	;'%'
  2020  04B8  3425               	retlw	0
  2021  04B9  3400               psect	strings
  2022                           	
  2023                           STR_6:	
  2024  04BA                     	retlw	60	;'<'
  2025  04BA  343C               	retlw	32	;' '
  2026  04BB  3420               	retlw	0
  2027  04BC  3400               psect	strings
  2028                           	
  2029                           STR_5:	
  2030  04BD                     	retlw	32	;' '
  2031  04BD  3420               	retlw	62	;'>'
  2032  04BE  343E               	retlw	0
  2033  04BF  3400               psect	strings
  2034                           ; #config settings
  2035                           global __CFG_FOSC$INTRC_NOCLKOUT
  2036                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  2037  0000                     global __CFG_WDTE$OFF
  2038                           __CFG_WDTE$OFF equ 0x0
  2039  0000                     global __CFG_PWRTE$OFF
  2040                           __CFG_PWRTE$OFF equ 0x0
  2041  0000                     global __CFG_MCLRE$OFF
  2042                           __CFG_MCLRE$OFF equ 0x0
  2043  0000                     global __CFG_CP$OFF
  2044                           __CFG_CP$OFF equ 0x0
  2045  0000                     global __CFG_CPD$OFF
  2046                           __CFG_CPD$OFF equ 0x0
  2047  0000                     global __CFG_BOREN$OFF
  2048                           __CFG_BOREN$OFF equ 0x0
  2049  0000                     global __CFG_IESO$OFF
  2050                           __CFG_IESO$OFF equ 0x0
  2051  0000                     global __CFG_FCMEN$OFF
  2052                           __CFG_FCMEN$OFF equ 0x0
  2053  0000                     global __CFG_LVP$OFF
  2054                           __CFG_LVP$OFF equ 0x0
  2055  0000                     global __CFG_BOR4V$BOR40V
  2056                           __CFG_BOR4V$BOR40V equ 0x0
  2057  0000                     global __CFG_WRT$OFF
  2058                           __CFG_WRT$OFF equ 0x0
  2059  0000                     	file	"C:\Users\21193451\AppData\Local\Temp\sheg."
  2060                           	line	#
  2061                           psect cinit,class=CODE,delta=2
  2062                           global start_initialization
  2063                           start_initialization:
  2064  000F                     
  2065                           global __initialization
  2066                           __initialization:
  2067  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
  2068                           global __pbssCOMMON
  2069                           __pbssCOMMON:
  2070  007A                     _hor:
  2071  007A                            ds      1
  2072  007A                     
  2073                           _T:
  2074  007B                            ds      1
  2075  007B                     
  2076                           psect	dataCOMMON,class=COMMON,space=1,noexec
  2077                           global __pdataCOMMON
  2078                           __pdataCOMMON:
  2079  007C                     	file	"PWM.c"
  2080                           	line	3
  2081                           _Valor:
  2082  007C                            ds      1
  2083  007C                     
  2084                           psect	bssBANK0,class=BANK0,space=1,noexec
  2085                           global __pbssBANK0
  2086                           __pbssBANK0:
  2087  003B                     _T2count:
  2088  003B                            ds      2
  2089  003B                     
  2090                           _T1count:
  2091  003D                            ds      2
  2092  003D                     
  2093                           _T0count:
  2094  003F                            ds      2
  2095  003F                     
  2096                           _dia:
  2097  0041                            ds      2
  2098  0041                     
  2099                           _motorDC_dc:
  2100  0043                            ds      1
  2101  0043                     
  2102                           _min:
  2103  0044                            ds      1
  2104  0044                     
  2105                           _seg:
  2106  0045                            ds      1
  2107  0045                     
  2108                           _b1Anterior:
  2109  0046                            ds      1
  2110  0046                     
  2111                           _b0Anterior:
  2112  0047                            ds      1
  2113  0047                     
  2114                           	file	"C:\Users\21193451\AppData\Local\Temp\sheg."
  2115                           	line	#
  2116                           ; Initialize objects allocated to COMMON
  2117                           	global __pidataCOMMON
  2118                           psect cinit,class=CODE,delta=2,merge=1
  2119                           	fcall	__pidataCOMMON+0		;fetch initializer
  2120  000F  120A  118A  26F4  120A  118A  	movwf	__pdataCOMMON+0&07fh		
  2121  0014  00FC               	line	#
  2122                           ; Clear objects allocated to BANK0
  2123                           psect cinit,class=CODE,delta=2,merge=1
  2124                           	clrf	((__pbssBANK0)+0)&07Fh
  2125  0015  01BB               	clrf	((__pbssBANK0)+1)&07Fh
  2126  0016  01BC               	clrf	((__pbssBANK0)+2)&07Fh
  2127  0017  01BD               	clrf	((__pbssBANK0)+3)&07Fh
  2128  0018  01BE               	clrf	((__pbssBANK0)+4)&07Fh
  2129  0019  01BF               	clrf	((__pbssBANK0)+5)&07Fh
  2130  001A  01C0               	clrf	((__pbssBANK0)+6)&07Fh
  2131  001B  01C1               	clrf	((__pbssBANK0)+7)&07Fh
  2132  001C  01C2               	clrf	((__pbssBANK0)+8)&07Fh
  2133  001D  01C3               	clrf	((__pbssBANK0)+9)&07Fh
  2134  001E  01C4               	clrf	((__pbssBANK0)+10)&07Fh
  2135  001F  01C5               	clrf	((__pbssBANK0)+11)&07Fh
  2136  0020  01C6               	clrf	((__pbssBANK0)+12)&07Fh
  2137  0021  01C7               ; Clear objects allocated to COMMON
  2138                           psect cinit,class=CODE,delta=2,merge=1
  2139                           	clrf	((__pbssCOMMON)+0)&07Fh
  2140  0022  01FA               	clrf	((__pbssCOMMON)+1)&07Fh
  2141  0023  01FB               psect cinit,class=CODE,delta=2,merge=1
  2142                           global end_of_initialization,__end_of__initialization
  2143                           
  2144                           ;End of C runtime variable initialization code
  2145                           
  2146                           end_of_initialization:
  2147  0024                     __end_of__initialization:
  2148  0024                     clrf status
  2149  0024  0183               ljmp _main	;jump to C main() function
  2150  0025  120A  118A  2828   psect	cstackCOMMON,class=COMMON,space=1,noexec
  2151                           global __pcstackCOMMON
  2152                           __pcstackCOMMON:
  2153  0070                     ?_teclado_init:	; 1 bytes @ 0x0
  2154  0070                     ?_motorDC_init:	; 1 bytes @ 0x0
  2155  0070                     ?_motorDC:	; 1 bytes @ 0x0
  2156  0070                     ?_teclado:	; 1 bytes @ 0x0
  2157  0070                     ?_motorDC_inc:	; 1 bytes @ 0x0
  2158  0070                     ?_motorDC_dec:	; 1 bytes @ 0x0
  2159  0070                     ?_motorDC_dutycycle:	; 1 bytes @ 0x0
  2160  0070                     ?_T2_init:	; 1 bytes @ 0x0
  2161  0070                     ?_b0_bordaSubida:	; 1 bytes @ 0x0
  2162  0070                     ?_b1_bordaSubida:	; 1 bytes @ 0x0
  2163  0070                     ?_lcd_instReg:	; 1 bytes @ 0x0
  2164  0070                     ?_lcd_dataReg:	; 1 bytes @ 0x0
  2165  0070                     ?_lcd_init:	; 1 bytes @ 0x0
  2166  0070                     ?_main:	; 1 bytes @ 0x0
  2167  0070                     ?_T2_int:	; 1 bytes @ 0x0
  2168  0070                     ?_isr:	; 1 bytes @ 0x0
  2169  0070                     ?i1_motorDC_dutycycle:	; 1 bytes @ 0x0
  2170  0070                     ??i1_motorDC_dutycycle:	; 1 bytes @ 0x0
  2171  0070                     	global	?___lwmod
  2172                           ?___lwmod:	; 2 bytes @ 0x0
  2173  0070                     	global	___lwmod@divisor
  2174                           ___lwmod@divisor:	; 2 bytes @ 0x0
  2175  0070                     	ds	2
  2176  0070                     	global	___lwmod@dividend
  2177                           ___lwmod@dividend:	; 2 bytes @ 0x2
  2178  0072                     	ds	2
  2179  0072                     ??___lwmod:	; 1 bytes @ 0x4
  2180  0074                     	ds	1
  2181  0074                     	global	___lwmod@counter
  2182                           ___lwmod@counter:	; 1 bytes @ 0x5
  2183  0075                     	ds	1
  2184  0075                     ??_T2_int:	; 1 bytes @ 0x6
  2185  0076                     	ds	2
  2186  0076                     ??_isr:	; 1 bytes @ 0x8
  2187  0078                     	ds	2
  2188  0078                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2189                           global __pcstackBANK0
  2190                           __pcstackBANK0:
  2191  0020                     ??_teclado_init:	; 1 bytes @ 0x0
  2192  0020                     ??_motorDC:	; 1 bytes @ 0x0
  2193  0020                     ??_motorDC_dutycycle:	; 1 bytes @ 0x0
  2194  0020                     ??_T2_init:	; 1 bytes @ 0x0
  2195  0020                     ?_T2_start:	; 1 bytes @ 0x0
  2196  0020                     ??_b0_bordaSubida:	; 1 bytes @ 0x0
  2197  0020                     ??_b1_bordaSubida:	; 1 bytes @ 0x0
  2198  0020                     ?_delay:	; 1 bytes @ 0x0
  2199  0020                     ??_lcd_instReg:	; 1 bytes @ 0x0
  2200  0020                     ??_lcd_dataReg:	; 1 bytes @ 0x0
  2201  0020                     	global	?___awdiv
  2202                           ?___awdiv:	; 2 bytes @ 0x0
  2203  0020                     	global	?___awmod
  2204                           ?___awmod:	; 2 bytes @ 0x0
  2205  0020                     	global	delay@t
  2206                           delay@t:	; 2 bytes @ 0x0
  2207  0020                     	global	T2_start@c
  2208                           T2_start@c:	; 2 bytes @ 0x0
  2209  0020                     	global	___awdiv@divisor
  2210                           ___awdiv@divisor:	; 2 bytes @ 0x0
  2211  0020                     	global	___awmod@divisor
  2212                           ___awmod@divisor:	; 2 bytes @ 0x0
  2213  0020                     	ds	1
  2214  0020                     	global	b0_bordaSubida@aux
  2215                           b0_bordaSubida@aux:	; 1 bytes @ 0x1
  2216  0021                     	global	b1_bordaSubida@aux
  2217                           b1_bordaSubida@aux:	; 1 bytes @ 0x1
  2218  0021                     	global	motorDC@c
  2219                           motorDC@c:	; 1 bytes @ 0x1
  2220  0021                     	ds	1
  2221  0021                     ??_motorDC_init:	; 1 bytes @ 0x2
  2222  0022                     ??_T2_start:	; 1 bytes @ 0x2
  2223  0022                     ??_delay:	; 1 bytes @ 0x2
  2224  0022                     	global	_b0_bordaSubida$84
  2225                           _b0_bordaSubida$84:	; 1 bytes @ 0x2
  2226  0022                     	global	_b1_bordaSubida$95
  2227                           _b1_bordaSubida$95:	; 1 bytes @ 0x2
  2228  0022                     	global	lcd_instReg@i
  2229                           lcd_instReg@i:	; 1 bytes @ 0x2
  2230  0022                     	global	lcd_dataReg@d
  2231                           lcd_dataReg@d:	; 1 bytes @ 0x2
  2232  0022                     	global	___awdiv@dividend
  2233                           ___awdiv@dividend:	; 2 bytes @ 0x2
  2234  0022                     	global	___awmod@dividend
  2235                           ___awmod@dividend:	; 2 bytes @ 0x2
  2236  0022                     	ds	1
  2237  0022                     ??_teclado:	; 1 bytes @ 0x3
  2238  0023                     ??_motorDC_inc:	; 1 bytes @ 0x3
  2239  0023                     ??_motorDC_dec:	; 1 bytes @ 0x3
  2240  0023                     ?_lcd_lincol:	; 1 bytes @ 0x3
  2241  0023                     ??_lcd_init:	; 1 bytes @ 0x3
  2242  0023                     	global	lcd_lincol@col
  2243                           lcd_lincol@col:	; 1 bytes @ 0x3
  2244  0023                     	global	_motorDC_dec$311
  2245                           _motorDC_dec$311:	; 2 bytes @ 0x3
  2246  0023                     	ds	1
  2247  0023                     ??_lcd_lincol:	; 1 bytes @ 0x4
  2248  0024                     ??___awdiv:	; 1 bytes @ 0x4
  2249  0024                     ??___awmod:	; 1 bytes @ 0x4
  2250  0024                     	global	_motorDC_inc$309
  2251                           _motorDC_inc$309:	; 2 bytes @ 0x4
  2252  0024                     	ds	1
  2253  0024                     	global	lcd_lincol@lin
  2254                           lcd_lincol@lin:	; 1 bytes @ 0x5
  2255  0025                     	global	___awdiv@counter
  2256                           ___awdiv@counter:	; 1 bytes @ 0x5
  2257  0025                     	global	___awmod@counter
  2258                           ___awmod@counter:	; 1 bytes @ 0x5
  2259  0025                     	ds	1
  2260  0025                     ?_lcd_print:	; 1 bytes @ 0x6
  2261  0026                     	global	lcd_print@col
  2262                           lcd_print@col:	; 1 bytes @ 0x6
  2263  0026                     	global	___awdiv@sign
  2264                           ___awdiv@sign:	; 1 bytes @ 0x6
  2265  0026                     	global	___awmod@sign
  2266                           ___awmod@sign:	; 1 bytes @ 0x6
  2267  0026                     	ds	1
  2268  0026                     	global	lcd_print@str
  2269                           lcd_print@str:	; 1 bytes @ 0x7
  2270  0027                     	global	___awdiv@quotient
  2271                           ___awdiv@quotient:	; 2 bytes @ 0x7
  2272  0027                     	ds	1
  2273  0027                     ??_lcd_print:	; 1 bytes @ 0x8
  2274  0028                     	ds	1
  2275  0028                     ?_lcd_num:	; 1 bytes @ 0x9
  2276  0029                     	global	lcd_print@pos
  2277                           lcd_print@pos:	; 1 bytes @ 0x9
  2278  0029                     	global	lcd_num@col
  2279                           lcd_num@col:	; 1 bytes @ 0x9
  2280  0029                     	ds	1
  2281  0029                     	global	lcd_print@lin
  2282                           lcd_print@lin:	; 1 bytes @ 0xA
  2283  002A                     	global	teclado@aux
  2284                           teclado@aux:	; 1 bytes @ 0xA
  2285  002A                     	global	lcd_num@num
  2286                           lcd_num@num:	; 2 bytes @ 0xA
  2287  002A                     	ds	1
  2288  002A                     	global	teclado@l
  2289                           teclado@l:	; 1 bytes @ 0xB
  2290  002B                     	ds	1
  2291  002B                     	global	lcd_num@tam
  2292                           lcd_num@tam:	; 1 bytes @ 0xC
  2293  002C                     	global	teclado@c
  2294                           teclado@c:	; 1 bytes @ 0xC
  2295  002C                     	ds	1
  2296  002C                     ??_lcd_num:	; 1 bytes @ 0xD
  2297  002D                     	ds	3
  2298  002D                     	global	lcd_num@lin
  2299                           lcd_num@lin:	; 1 bytes @ 0x10
  2300  0030                     	ds	1
  2301  0030                     	global	lcd_num@size
  2302                           lcd_num@size:	; 1 bytes @ 0x11
  2303  0031                     	ds	1
  2304  0031                     	global	lcd_num@sinal
  2305                           lcd_num@sinal:	; 1 bytes @ 0x12
  2306  0032                     	ds	1
  2307  0032                     	global	lcd_num@div
  2308                           lcd_num@div:	; 2 bytes @ 0x13
  2309  0033                     	ds	2
  2310  0033                     ??_main:	; 1 bytes @ 0x15
  2311  0035                     	ds	4
  2312  0035                     	global	main@dutycycle
  2313                           main@dutycycle:	; 1 bytes @ 0x19
  2314  0039                     	ds	1
  2315  0039                     	global	main@tecla
  2316                           main@tecla:	; 1 bytes @ 0x1A
  2317  003A                     	ds	1
  2318  003A                     ;!
  2319                           ;!Data Sizes:
  2320                           ;!    Strings     74
  2321                           ;!    Constant    16
  2322                           ;!    Data        1
  2323                           ;!    BSS         15
  2324                           ;!    Persistent  0
  2325                           ;!    Stack       0
  2326                           ;!
  2327                           ;!Auto Spaces:
  2328                           ;!    Space          Size  Autos    Used
  2329                           ;!    COMMON           14     10      13
  2330                           ;!    BANK0            80     27      40
  2331                           ;!    BANK1            80      0       0
  2332                           ;!    BANK3            96      0       0
  2333                           ;!    BANK2            96      0       0
  2334                           
  2335                           ;!
  2336                           ;!Pointer List with Targets:
  2337                           ;!
  2338                           ;!    lcd_print@str	PTR const unsigned char  size(1) Largest target is 17
  2339                           ;!		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[17]), STR_3(CODE[17]), 
  2340                           ;!		 -> STR_2(CODE[17]), STR_1(CODE[17]), 
  2341                           ;!
  2342                           
  2343                           
  2344                           ;!
  2345                           ;!Critical Paths under _main in COMMON
  2346                           ;!
  2347                           ;!    None.
  2348                           ;!
  2349                           ;!Critical Paths under _isr in COMMON
  2350                           ;!
  2351                           ;!    _isr->_T2_int
  2352                           ;!    _T2_int->___lwmod
  2353                           ;!
  2354                           ;!Critical Paths under _main in BANK0
  2355                           ;!
  2356                           ;!    _main->_lcd_num
  2357                           ;!    _teclado->_b0_bordaSubida
  2358                           ;!    _teclado->_b1_bordaSubida
  2359                           ;!    _motorDC_init->_T2_start
  2360                           ;!    _motorDC_inc->_delay
  2361                           ;!    _motorDC_dec->_delay
  2362                           ;!    _lcd_print->_lcd_lincol
  2363                           ;!    _lcd_num->___awdiv
  2364                           ;!    _lcd_lincol->_lcd_instReg
  2365                           ;!    _lcd_init->_delay
  2366                           ;!    _lcd_init->_lcd_instReg
  2367                           ;!
  2368                           ;!Critical Paths under _isr in BANK0
  2369                           ;!
  2370                           ;!    None.
  2371                           ;!
  2372                           ;!Critical Paths under _main in BANK1
  2373                           ;!
  2374                           ;!    None.
  2375                           ;!
  2376                           ;!Critical Paths under _isr in BANK1
  2377                           ;!
  2378                           ;!    None.
  2379                           ;!
  2380                           ;!Critical Paths under _main in BANK3
  2381                           ;!
  2382                           ;!    None.
  2383                           ;!
  2384                           ;!Critical Paths under _isr in BANK3
  2385                           ;!
  2386                           ;!    None.
  2387                           ;!
  2388                           ;!Critical Paths under _main in BANK2
  2389                           ;!
  2390                           ;!    None.
  2391                           ;!
  2392                           ;!Critical Paths under _isr in BANK2
  2393                           ;!
  2394                           ;!    None.
  2395                           
  2396 ;;
  2397 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2398 ;;
  2399                           
  2400                           ;!
  2401                           ;!Call Graph Tables:
  2402                           ;!
  2403                           ;! ---------------------------------------------------------------------------------
  2404                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2405                           ;! ---------------------------------------------------------------------------------
  2406                           ;! (0) _main                                                 6     6      0    6974
  2407                           ;!                                             21 BANK0      6     6      0
  2408                           ;!                              _delay
  2409                           ;!                           _lcd_init
  2410                           ;!                            _lcd_num
  2411                           ;!                          _lcd_print
  2412                           ;!                            _motorDC
  2413                           ;!                        _motorDC_dec
  2414                           ;!                  _motorDC_dutycycle
  2415                           ;!                        _motorDC_inc
  2416                           ;!                       _motorDC_init
  2417                           ;!                            _teclado
  2418                           ;!                       _teclado_init
  2419                           ;! ---------------------------------------------------------------------------------
  2420                           ;! (1) _teclado_init                                         0     0      0       0
  2421                           ;! ---------------------------------------------------------------------------------
  2422                           ;! (1) _teclado                                             10    10      0     322
  2423                           ;!                                              3 BANK0     10    10      0
  2424                           ;!                     _b0_bordaSubida
  2425                           ;!                     _b1_bordaSubida
  2426                           ;! ---------------------------------------------------------------------------------
  2427                           ;! (2) _b1_bordaSubida                                       3     3      0      47
  2428                           ;!                                              0 BANK0      3     3      0
  2429                           ;! ---------------------------------------------------------------------------------
  2430                           ;! (2) _b0_bordaSubida                                       3     3      0      47
  2431                           ;!                                              0 BANK0      3     3      0
  2432                           ;! ---------------------------------------------------------------------------------
  2433                           ;! (1) _motorDC_init                                         0     0      0      98
  2434                           ;!                            _T2_init
  2435                           ;!                           _T2_start
  2436                           ;! ---------------------------------------------------------------------------------
  2437                           ;! (2) _T2_start                                             2     0      2      98
  2438                           ;!                                              0 BANK0      2     0      2
  2439                           ;! ---------------------------------------------------------------------------------
  2440                           ;! (2) _T2_init                                              0     0      0       0
  2441                           ;! ---------------------------------------------------------------------------------
  2442                           ;! (1) _motorDC_inc                                          3     3      0     503
  2443                           ;!                                              3 BANK0      3     3      0
  2444                           ;!                              _delay
  2445                           ;! ---------------------------------------------------------------------------------
  2446                           ;! (1) _motorDC_dutycycle                                    0     0      0       0
  2447                           ;! ---------------------------------------------------------------------------------
  2448                           ;! (1) _motorDC_dec                                          2     2      0     503
  2449                           ;!                                              3 BANK0      2     2      0
  2450                           ;!                              _delay
  2451                           ;! ---------------------------------------------------------------------------------
  2452                           ;! (1) _motorDC                                              2     2      0      22
  2453                           ;!                                              0 BANK0      2     2      0
  2454                           ;! ---------------------------------------------------------------------------------
  2455                           ;! (1) _lcd_print                                            5     3      2    1441
  2456                           ;!                                              6 BANK0      5     3      2
  2457                           ;!                        _lcd_dataReg
  2458                           ;!                         _lcd_lincol
  2459                           ;! ---------------------------------------------------------------------------------
  2460                           ;! (1) _lcd_num                                             12     8      4    2905
  2461                           ;!                                              9 BANK0     12     8      4
  2462                           ;!                            ___awdiv
  2463                           ;!                            ___awmod
  2464                           ;!                        _lcd_dataReg
  2465                           ;!                         _lcd_lincol
  2466                           ;!                  _motorDC_dutycycle (ARG)
  2467                           ;! ---------------------------------------------------------------------------------
  2468                           ;! (2) _lcd_lincol                                           3     2      1     372
  2469                           ;!                                              3 BANK0      3     2      1
  2470                           ;!                        _lcd_instReg
  2471                           ;! ---------------------------------------------------------------------------------
  2472                           ;! (2) _lcd_dataReg                                          3     3      0      44
  2473                           ;!                                              0 BANK0      3     3      0
  2474                           ;! ---------------------------------------------------------------------------------
  2475                           ;! (2) ___awmod                                              7     3      4     448
  2476                           ;!                                              0 BANK0      7     3      4
  2477                           ;! ---------------------------------------------------------------------------------
  2478                           ;! (2) ___awdiv                                              9     5      4     908
  2479                           ;!                                              0 BANK0      9     5      4
  2480                           ;! ---------------------------------------------------------------------------------
  2481                           ;! (1) _lcd_init                                             0     0      0     655
  2482                           ;!                              _delay
  2483                           ;!                        _lcd_instReg
  2484                           ;! ---------------------------------------------------------------------------------
  2485                           ;! (3) _lcd_instReg                                          3     3      0     176
  2486                           ;!                                              0 BANK0      3     3      0
  2487                           ;! ---------------------------------------------------------------------------------
  2488                           ;! (2) _delay                                                3     1      2     479
  2489                           ;!                                              0 BANK0      3     1      2
  2490                           ;! ---------------------------------------------------------------------------------
  2491                           ;! Estimated maximum stack depth 3
  2492                           ;! ---------------------------------------------------------------------------------
  2493                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2494                           ;! ---------------------------------------------------------------------------------
  2495                           ;! (4) _isr                                                  2     2      0     311
  2496                           ;!                                              8 COMMON     2     2      0
  2497                           ;!                             _T2_int
  2498                           ;! ---------------------------------------------------------------------------------
  2499                           ;! (5) _T2_int                                               2     2      0     311
  2500                           ;!                                              6 COMMON     2     2      0
  2501                           ;!                            ___lwmod
  2502                           ;!                i1_motorDC_dutycycle
  2503                           ;! ---------------------------------------------------------------------------------
  2504                           ;! (6) i1_motorDC_dutycycle                                  0     0      0       0
  2505                           ;! ---------------------------------------------------------------------------------
  2506                           ;! (6) ___lwmod                                              6     2      4     311
  2507                           ;!                                              0 COMMON     6     2      4
  2508                           ;! ---------------------------------------------------------------------------------
  2509                           ;! Estimated maximum stack depth 6
  2510                           ;! ---------------------------------------------------------------------------------
  2511                           ;!
  2512                           ;! Call Graph Graphs:
  2513                           ;!
  2514                           ;! _main (ROOT)
  2515                           ;!   _delay
  2516                           ;!   _lcd_init
  2517                           ;!     _delay
  2518                           ;!     _lcd_instReg
  2519                           ;!   _lcd_num
  2520                           ;!     ___awdiv
  2521                           ;!     ___awmod
  2522                           ;!     _lcd_dataReg
  2523                           ;!     _lcd_lincol
  2524                           ;!       _lcd_instReg
  2525                           ;!     _motorDC_dutycycle (ARG)
  2526                           ;!   _lcd_print
  2527                           ;!     _lcd_dataReg
  2528                           ;!     _lcd_lincol
  2529                           ;!       _lcd_instReg
  2530                           ;!   _motorDC
  2531                           ;!   _motorDC_dec
  2532                           ;!     _delay
  2533                           ;!   _motorDC_dutycycle
  2534                           ;!   _motorDC_inc
  2535                           ;!     _delay
  2536                           ;!   _motorDC_init
  2537                           ;!     _T2_init
  2538                           ;!     _T2_start
  2539                           ;!   _teclado
  2540                           ;!     _b0_bordaSubida
  2541                           ;!     _b1_bordaSubida
  2542                           ;!   _teclado_init
  2543                           ;!
  2544                           ;! _isr (ROOT)
  2545                           ;!   _T2_int
  2546                           ;!     ___lwmod
  2547                           ;!     i1_motorDC_dutycycle
  2548                           ;!
  2549                           
  2550                           ;! Address spaces:
  2551                           
  2552                           ;!Name               Size   Autos  Total    Cost      Usage
  2553                           ;!BANK3               60      0       0       9        0.0%
  2554                           ;!BITBANK3            60      0       0       8        0.0%
  2555                           ;!SFR3                 0      0       0       4        0.0%
  2556                           ;!BITSFR3              0      0       0       4        0.0%
  2557                           ;!BANK2               60      0       0      11        0.0%
  2558                           ;!BITBANK2            60      0       0      10        0.0%
  2559                           ;!SFR2                 0      0       0       5        0.0%
  2560                           ;!BITSFR2              0      0       0       5        0.0%
  2561                           ;!BANK1               50      0       0       7        0.0%
  2562                           ;!BITBANK1            50      0       0       6        0.0%
  2563                           ;!SFR1                 0      0       0       2        0.0%
  2564                           ;!BITSFR1              0      0       0       2        0.0%
  2565                           ;!BANK0               50     1B      28       5       50.0%
  2566                           ;!BITBANK0            50      0       0       4        0.0%
  2567                           ;!SFR0                 0      0       0       1        0.0%
  2568                           ;!BITSFR0              0      0       0       1        0.0%
  2569                           ;!COMMON               E      A       D       1       92.9%
  2570                           ;!BITCOMMON            E      0       0       0        0.0%
  2571                           ;!CODE                 0      0       0       0        0.0%
  2572                           ;!DATA                 0      0      35      12        0.0%
  2573                           ;!ABS                  0      0      35       3        0.0%
  2574                           ;!NULL                 0      0       0       0        0.0%
  2575                           ;!STACK                0      0       0       2        0.0%
  2576                           ;!EEDATA             100      0       0       0        0.0%
  2577                           
  2578                           	global	_main
  2579                           
  2580 ;; *************** function _main *****************
  2581 ;; Defined at:
  2582 ;;		line 10 in file "main.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;  tecla           1   26[BANK0 ] unsigned char 
  2587 ;;  dutycycle       1   25[BANK0 ] unsigned char 
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  1    wreg      void 
  2590 ;; Registers used:
  2591 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2592 ;; Tracked objects:
  2593 ;;		On entry : B00/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2597 ;;      Params:         0       0       0       0       0
  2598 ;;      Locals:         0       2       0       0       0
  2599 ;;      Temps:          0       4       0       0       0
  2600 ;;      Totals:         0       6       0       0       0
  2601 ;;Total ram usage:        6 bytes
  2602 ;; Hardware stack levels required when called:    6
  2603 ;; This function calls:
  2604 ;;		_delay
  2605 ;;		_lcd_init
  2606 ;;		_lcd_num
  2607 ;;		_lcd_print
  2608 ;;		_motorDC
  2609 ;;		_motorDC_dec
  2610 ;;		_motorDC_dutycycle
  2611 ;;		_motorDC_inc
  2612 ;;		_motorDC_init
  2613 ;;		_teclado
  2614 ;;		_teclado_init
  2615 ;; This function is called by:
  2616 ;;		Startup code after reset
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2620                           	file	"main.c"
  2621                           	line	10
  2622                           global __pmaintext
  2623                           __pmaintext:	;psect for function _main
  2624  0028                     psect	maintext
  2625                           	file	"main.c"
  2626                           	line	10
  2627                           	global	__size_of_main
  2628                           	__size_of_main	equ	__end_of_main-_main
  2629  0152                     	
  2630                           _main:	
  2631  0028                     ;incstack = 0
  2632                           	opt	stack 2
  2633                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2634                           	line	13
  2635                           	
  2636                           l2102:	
  2637  0028                     ;main.c: 12:     char tecla;;main.c: 13:     char dutycycle = 0;
  2638                           	bcf	status, 5	;RP0=0, select bank0
  2639  0028  1283               	bcf	status, 6	;RP1=0, select bank0
  2640  0029  1303               	clrf	(main@dutycycle)
  2641  002A  01B9               	line	15
  2642                           	
  2643                           l2104:	
  2644  002B                     ;main.c: 15:     lcd_init();
  2645                           	fcall	_lcd_init
  2646  002B  120A  118A  24C0  120A  118A  	line	16
  2647                           	
  2648                           l2106:	
  2649  0030                     ;main.c: 16:     teclado_init();
  2650                           	fcall	_teclado_init
  2651  0030  120A  118A  26C9  120A  118A  	line	17
  2652                           	
  2653                           l2108:	
  2654  0035                     ;main.c: 17:     motorDC_init();
  2655                           	fcall	_motorDC_init
  2656  0035  120A  118A  268B  120A  118A  	line	19
  2657                           	
  2658                           l2110:	
  2659  003A                     ;main.c: 19:     lcd_print(0,0, "Controle Motor  " );
  2660                           	bcf	status, 5	;RP0=0, select bank0
  2661  003A  1283               	bcf	status, 6	;RP1=0, select bank0
  2662  003B  1303               	clrf	(lcd_print@col)
  2663  003C  01A6               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  2664  003D  3033               	movwf	(??_main+0)+0
  2665  003E  00B5               	movf	(??_main+0)+0,w
  2666  003F  0835               	movwf	(lcd_print@str)
  2667  0040  00A7               	movlw	low(0)
  2668  0041  3000               	fcall	_lcd_print
  2669  0042  120A  118A  2546  120A  118A  	line	20
  2670                           	
  2671                           l2112:	
  2672  0047                     ;main.c: 20:     delay(1000);
  2673                           	movlw	0E8h
  2674  0047  30E8               	bcf	status, 5	;RP0=0, select bank0
  2675  0048  1283               	bcf	status, 6	;RP1=0, select bank0
  2676  0049  1303               	movwf	(delay@t)
  2677  004A  00A0               	movlw	03h
  2678  004B  3003               	movwf	((delay@t))+1
  2679  004C  00A1               	fcall	_delay
  2680  004D  120A  118A  2625  120A  118A  	line	21
  2681                           	
  2682                           l2114:	
  2683  0052                     ;main.c: 21:     motorDC(0);
  2684                           	movlw	low(0)
  2685  0052  3000               	fcall	_motorDC
  2686  0053  120A  118A  26E2  120A  118A  	goto	l2116
  2687  0058  2859               	line	23
  2688                           ;main.c: 23:     while( 1 )
  2689                           	
  2690                           l159:	
  2691  0059                     	line	25
  2692                           	
  2693                           l2116:	
  2694  0059                     ;main.c: 24:     {;main.c: 25:         tecla = teclado();
  2695                           	fcall	_teclado
  2696  0059  120A  118A  226A  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2697  005E  1283               	bcf	status, 6	;RP1=0, select bank0
  2698  005F  1303               	movwf	(??_main+0)+0
  2699  0060  00B5               	movf	(??_main+0)+0,w
  2700  0061  0835               	movwf	(main@tecla)
  2701  0062  00BA               	line	27
  2702                           ;main.c: 27:         switch( tecla )
  2703                           	goto	l2134
  2704  0063  289C               	line	29
  2705                           ;main.c: 28:         {;main.c: 29:             case '0':
  2706                           	
  2707                           l161:	
  2708  0064                     	line	30
  2709                           	
  2710                           l2118:	
  2711  0064                     ;main.c: 30:                         motorDC(0);
  2712                           	movlw	low(0)
  2713  0064  3000               	fcall	_motorDC
  2714  0065  120A  118A  26E2  120A  118A  	line	31
  2715                           ;main.c: 31:                         break;
  2716                           	goto	l2136
  2717  006A  28CD               	line	32
  2718                           ;main.c: 32:             case '1':
  2719                           	
  2720                           l163:	
  2721  006B                     	line	33
  2722                           	
  2723                           l2120:	
  2724  006B                     ;main.c: 33:                         motorDC(25);
  2725                           	movlw	low(019h)
  2726  006B  3019               	fcall	_motorDC
  2727  006C  120A  118A  26E2  120A  118A  	line	34
  2728                           ;main.c: 34:                         break;
  2729                           	goto	l2136
  2730  0071  28CD               	line	35
  2731                           ;main.c: 35:             case '2':
  2732                           	
  2733                           l164:	
  2734  0072                     	line	36
  2735                           	
  2736                           l2122:	
  2737  0072                     ;main.c: 36:                         motorDC(50);
  2738                           	movlw	low(032h)
  2739  0072  3032               	fcall	_motorDC
  2740  0073  120A  118A  26E2  120A  118A  	line	37
  2741                           ;main.c: 37:                         break;
  2742                           	goto	l2136
  2743  0078  28CD               	line	38
  2744                           ;main.c: 38:             case '3':
  2745                           	
  2746                           l165:	
  2747  0079                     	line	39
  2748                           	
  2749                           l2124:	
  2750  0079                     ;main.c: 39:                         motorDC(75);
  2751                           	movlw	low(04Bh)
  2752  0079  304B               	fcall	_motorDC
  2753  007A  120A  118A  26E2  120A  118A  	line	40
  2754                           ;main.c: 40:                         break;
  2755                           	goto	l2136
  2756  007F  28CD               	line	41
  2757                           ;main.c: 41:             case 'A':
  2758                           	
  2759                           l166:	
  2760  0080                     	line	42
  2761                           	
  2762                           l2126:	
  2763  0080                     ;main.c: 42:                         motorDC(100);
  2764                           	movlw	low(064h)
  2765  0080  3064               	fcall	_motorDC
  2766  0081  120A  118A  26E2  120A  118A  	line	43
  2767                           ;main.c: 43:                         break;
  2768                           	goto	l2136
  2769  0086  28CD               	line	44
  2770                           ;main.c: 44:             case 'C':
  2771                           	
  2772                           l167:	
  2773  0087                     	line	45
  2774                           	
  2775                           l2128:	
  2776  0087                     ;main.c: 45:                         motorDC_inc();
  2777                           	fcall	_motorDC_inc
  2778  0087  120A  118A  25E8  120A  118A  	line	46
  2779                           ;main.c: 46:                         break;
  2780                           	goto	l2136
  2781  008C  28CD               	line	47
  2782                           ;main.c: 47:             case 'D':
  2783                           	
  2784                           l168:	
  2785  008D                     	line	48
  2786                           	
  2787                           l2130:	
  2788  008D                     ;main.c: 48:                         motorDC_dec();
  2789                           	fcall	_motorDC_dec
  2790  008D  120A  118A  2608  120A  118A  	line	49
  2791                           ;main.c: 49:                         break;
  2792                           	goto	l2136
  2793  0092  28CD               	line	50
  2794                           ;main.c: 50:             case '*':
  2795                           	
  2796                           l169:	
  2797  0093                     	line	51
  2798                           ;main.c: 51:                         PORTCbits.RC0 = 0;
  2799                           	bcf	(7),0	;volatile
  2800  0093  1007               	line	52
  2801                           ;main.c: 52:                         break;
  2802                           	goto	l2136
  2803  0094  28CD               	line	53
  2804                           ;main.c: 53:             case '#':
  2805                           	
  2806                           l170:	
  2807  0095                     	line	54
  2808                           ;main.c: 54:                         PORTCbits.RC0 = 1;
  2809                           	bsf	(7),0	;volatile
  2810  0095  1407               	line	55
  2811                           ;main.c: 55:                         break;
  2812                           	goto	l2136
  2813  0096  28CD               	line	56
  2814                           ;main.c: 56:             case '4':
  2815                           	
  2816                           l171:	
  2817  0097                     	line	58
  2818                           ;main.c: 58:                         break;
  2819                           	goto	l2136
  2820  0097  28CD               	line	59
  2821                           ;main.c: 59:             case '7':
  2822                           	
  2823                           l172:	
  2824  0098                     	line	61
  2825                           ;main.c: 61:                         break;
  2826                           	goto	l2136
  2827  0098  28CD               	line	62
  2828                           ;main.c: 62:             case '5':
  2829                           	
  2830                           l173:	
  2831  0099                     	line	64
  2832                           ;main.c: 64:                         break;
  2833                           	goto	l2136
  2834  0099  28CD               	line	65
  2835                           ;main.c: 65:             case '8':
  2836                           	
  2837                           l174:	
  2838  009A                     	line	67
  2839                           ;main.c: 67:                         break;
  2840                           	goto	l2136
  2841  009A  28CD               	line	68
  2842                           	
  2843                           l2132:	
  2844  009B                     ;main.c: 68:         }
  2845                           	goto	l2136
  2846  009B  28CD               	
  2847                           l160:	
  2848  009C                     	
  2849                           l2134:	
  2850  009C                     	movf	(main@tecla),w
  2851  009C  083A               	movwf	(??_main+0)+0
  2852  009D  00B5               	clrf	(??_main+0)+0+1
  2853  009E  01B6               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2854                           ; Switch size 1, requested type "space"
  2855                           ; Number of cases is 1, Range of values is 0 to 0
  2856                           ; switch strategies available:
  2857                           ; Name         Instructions Cycles
  2858                           ; simple_byte            4     3 (average)
  2859                           ; direct_byte           11     8 (fixed)
  2860                           ; jumptable            260     6 (fixed)
  2861                           ;	Chosen strategy is simple_byte
  2862                           
  2863                           	movf 1+(??_main+0)+0,w
  2864  009F  0836               	opt asmopt_push
  2865                           	opt asmopt_off
  2866                           	xorlw	0^0	; case 0
  2867  00A0  3A00               	skipnz
  2868  00A1  1903               	goto	l2232
  2869  00A2  28A4               	goto	l2136
  2870  00A3  28CD               	opt asmopt_pop
  2871                           	
  2872                           l2232:	
  2873  00A4                     ; Switch size 1, requested type "space"
  2874                           ; Number of cases is 13, Range of values is 35 to 68
  2875                           ; switch strategies available:
  2876                           ; Name         Instructions Cycles
  2877                           ; simple_byte           40    21 (average)
  2878                           ; direct_byte          113    11 (fixed)
  2879                           ; jumptable            263     9 (fixed)
  2880                           ;	Chosen strategy is simple_byte
  2881                           
  2882                           	movf 0+(??_main+0)+0,w
  2883  00A4  0835               	opt asmopt_push
  2884                           	opt asmopt_off
  2885                           	xorlw	35^0	; case 35
  2886  00A5  3A23               	skipnz
  2887  00A6  1903               	goto	l170
  2888  00A7  2895               	xorlw	42^35	; case 42
  2889  00A8  3A09               	skipnz
  2890  00A9  1903               	goto	l169
  2891  00AA  2893               	xorlw	48^42	; case 48
  2892  00AB  3A1A               	skipnz
  2893  00AC  1903               	goto	l2118
  2894  00AD  2864               	xorlw	49^48	; case 49
  2895  00AE  3A01               	skipnz
  2896  00AF  1903               	goto	l2120
  2897  00B0  286B               	xorlw	50^49	; case 50
  2898  00B1  3A03               	skipnz
  2899  00B2  1903               	goto	l2122
  2900  00B3  2872               	xorlw	51^50	; case 51
  2901  00B4  3A01               	skipnz
  2902  00B5  1903               	goto	l2124
  2903  00B6  2879               	xorlw	52^51	; case 52
  2904  00B7  3A07               	skipnz
  2905  00B8  1903               	goto	l2136
  2906  00B9  28CD               	xorlw	53^52	; case 53
  2907  00BA  3A01               	skipnz
  2908  00BB  1903               	goto	l2136
  2909  00BC  28CD               	xorlw	55^53	; case 55
  2910  00BD  3A02               	skipnz
  2911  00BE  1903               	goto	l2136
  2912  00BF  28CD               	xorlw	56^55	; case 56
  2913  00C0  3A0F               	skipnz
  2914  00C1  1903               	goto	l2136
  2915  00C2  28CD               	xorlw	65^56	; case 65
  2916  00C3  3A79               	skipnz
  2917  00C4  1903               	goto	l2126
  2918  00C5  2880               	xorlw	67^65	; case 67
  2919  00C6  3A02               	skipnz
  2920  00C7  1903               	goto	l2128
  2921  00C8  2887               	xorlw	68^67	; case 68
  2922  00C9  3A07               	skipnz
  2923  00CA  1903               	goto	l2130
  2924  00CB  288D               	goto	l2136
  2925  00CC  28CD               	opt asmopt_pop
  2926                           
  2927                           	
  2928                           l162:	
  2929  00CD                     	line	70
  2930                           	
  2931                           l2136:	
  2932  00CD                     ;main.c: 70:         if( tecla )
  2933                           	bcf	status, 5	;RP0=0, select bank0
  2934  00CD  1283               	bcf	status, 6	;RP1=0, select bank0
  2935  00CE  1303               	movf	((main@tecla)),w
  2936  00CF  083A               	btfsc	status,2
  2937  00D0  1903               	goto	u1611
  2938  00D1  28D3               	goto	u1610
  2939  00D2  28D4               u1611:
  2940  00D3                     	goto	l2116
  2941  00D3  2859               u1610:
  2942  00D4                     	line	72
  2943                           	
  2944                           l2138:	
  2945  00D4                     ;main.c: 71:         {;main.c: 72:             if ( motorDC_dutycycle() == 0)
  2946                           	fcall	_motorDC_dutycycle
  2947  00D4  120A  118A  26EA  120A  118A  	xorlw	0
  2948  00D9  3A00               	skipz
  2949  00DA  1D03               	goto	u1621
  2950  00DB  28DD               	goto	u1620
  2951  00DC  28DE               u1621:
  2952  00DD                     	goto	l2142
  2953  00DD  28EC               u1620:
  2954  00DE                     	line	73
  2955                           	
  2956                           l2140:	
  2957  00DE                     ;main.c: 73:                 lcd_print(0,0, "   DESLIGADO    " );
  2958                           	bcf	status, 5	;RP0=0, select bank0
  2959  00DE  1283               	bcf	status, 6	;RP1=0, select bank0
  2960  00DF  1303               	clrf	(lcd_print@col)
  2961  00E0  01A6               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  2962  00E1  3022               	movwf	(??_main+0)+0
  2963  00E2  00B5               	movf	(??_main+0)+0,w
  2964  00E3  0835               	movwf	(lcd_print@str)
  2965  00E4  00A7               	movlw	low(0)
  2966  00E5  3000               	fcall	_lcd_print
  2967  00E6  120A  118A  2546  120A  118A  	goto	l177
  2968  00EB  28F9               	line	74
  2969                           ;main.c: 74:             else
  2970                           	
  2971                           l176:	
  2972  00EC                     	line	75
  2973                           	
  2974                           l2142:	
  2975  00EC                     ;main.c: 75:                 lcd_print(0,0, "     LIGADO     " );
  2976                           	bcf	status, 5	;RP0=0, select bank0
  2977  00EC  1283               	bcf	status, 6	;RP1=0, select bank0
  2978  00ED  1303               	clrf	(lcd_print@col)
  2979  00EE  01A6               	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  2980  00EF  3011               	movwf	(??_main+0)+0
  2981  00F0  00B5               	movf	(??_main+0)+0,w
  2982  00F1  0835               	movwf	(lcd_print@str)
  2983  00F2  00A7               	movlw	low(0)
  2984  00F3  3000               	fcall	_lcd_print
  2985  00F4  120A  118A  2546  120A  118A  	
  2986                           l177:	
  2987  00F9                     	line	76
  2988                           ;main.c: 76:             lcd_print(1,0, " VELOCIDADE    %" );
  2989                           	bcf	status, 5	;RP0=0, select bank0
  2990  00F9  1283               	bcf	status, 6	;RP1=0, select bank0
  2991  00FA  1303               	clrf	(lcd_print@col)
  2992  00FB  01A6               	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  2993  00FC  3044               	movwf	(??_main+0)+0
  2994  00FD  00B5               	movf	(??_main+0)+0,w
  2995  00FE  0835               	movwf	(lcd_print@str)
  2996  00FF  00A7               	movlw	low(01h)
  2997  0100  3001               	fcall	_lcd_print
  2998  0101  120A  118A  2546  120A  118A  	line	77
  2999                           	
  3000                           l2144:	
  3001  0106                     ;main.c: 77:             lcd_num (1,12,(int)motorDC_dutycycle(),3 );
  3002                           	movlw	low(0Ch)
  3003  0106  300C               	bcf	status, 5	;RP0=0, select bank0
  3004  0107  1283               	bcf	status, 6	;RP1=0, select bank0
  3005  0108  1303               	movwf	(??_main+0)+0
  3006  0109  00B5               	movf	(??_main+0)+0,w
  3007  010A  0835               	movwf	(lcd_num@col)
  3008  010B  00A9               	fcall	_motorDC_dutycycle
  3009  010C  120A  118A  26EA  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3010  0111  1283               	bcf	status, 6	;RP1=0, select bank0
  3011  0112  1303               	movwf	(??_main+1)+0
  3012  0113  00B6               	clrf	(??_main+1)+0+1
  3013  0114  01B7               	movf	0+(??_main+1)+0,w
  3014  0115  0836               	movwf	(lcd_num@num)
  3015  0116  00AA               	movf	1+(??_main+1)+0,w
  3016  0117  0837               	movwf	(lcd_num@num+1)
  3017  0118  00AB               	movlw	low(03h)
  3018  0119  3003               	movwf	(??_main+3)+0
  3019  011A  00B8               	movf	(??_main+3)+0,w
  3020  011B  0838               	movwf	(lcd_num@tam)
  3021  011C  00AC               	movlw	low(01h)
  3022  011D  3001               	fcall	_lcd_num
  3023  011E  120A  118A  217A  120A  118A  	line	79
  3024                           	
  3025                           l2146:	
  3026  0123                     ;main.c: 79:             if( PORTCbits.RC0 )
  3027                           	bcf	status, 5	;RP0=0, select bank0
  3028  0123  1283               	bcf	status, 6	;RP1=0, select bank0
  3029  0124  1303               	btfss	(7),0	;volatile
  3030  0125  1C07               	goto	u1631
  3031  0126  2928               	goto	u1630
  3032  0127  2929               u1631:
  3033  0128                     	goto	l2150
  3034  0128  2938               u1630:
  3035  0129                     	line	80
  3036                           	
  3037                           l2148:	
  3038  0129                     ;main.c: 80:                 lcd_print(0,14, " >" );
  3039                           	movlw	low(0Eh)
  3040  0129  300E               	movwf	(??_main+0)+0
  3041  012A  00B5               	movf	(??_main+0)+0,w
  3042  012B  0835               	movwf	(lcd_print@col)
  3043  012C  00A6               	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  3044  012D  3058               	movwf	(??_main+1)+0
  3045  012E  00B6               	movf	(??_main+1)+0,w
  3046  012F  0836               	movwf	(lcd_print@str)
  3047  0130  00A7               	movlw	low(0)
  3048  0131  3000               	fcall	_lcd_print
  3049  0132  120A  118A  2546  120A  118A  	goto	l2152
  3050  0137  2949               	line	81
  3051                           ;main.c: 81:             else
  3052                           	
  3053                           l178:	
  3054  0138                     	line	82
  3055                           	
  3056                           l2150:	
  3057  0138                     ;main.c: 82:                 lcd_print(0,14, "< " );
  3058                           	movlw	low(0Eh)
  3059  0138  300E               	bcf	status, 5	;RP0=0, select bank0
  3060  0139  1283               	bcf	status, 6	;RP1=0, select bank0
  3061  013A  1303               	movwf	(??_main+0)+0
  3062  013B  00B5               	movf	(??_main+0)+0,w
  3063  013C  0835               	movwf	(lcd_print@col)
  3064  013D  00A6               	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
  3065  013E  3055               	movwf	(??_main+1)+0
  3066  013F  00B6               	movf	(??_main+1)+0,w
  3067  0140  0836               	movwf	(lcd_print@str)
  3068  0141  00A7               	movlw	low(0)
  3069  0142  3000               	fcall	_lcd_print
  3070  0143  120A  118A  2546  120A  118A  	goto	l2152
  3071  0148  2949               	
  3072                           l179:	
  3073  0149                     	line	84
  3074                           	
  3075                           l2152:	
  3076  0149                     ;main.c: 84:             lcd_num (0,0,min,2 );
  3077                           	bcf	status, 5	;RP0=0, select bank0
  3078  0149  1283               	bcf	status, 6	;RP1=0, select bank0
  3079  014A  1303               	clrf	(lcd_num@col)
  3080  014B  01A9               	movf	(_min),w
  3081  014C  0844               	movwf	(??_main+0)+0
  3082  014D  00B5               	clrf	(??_main+0)+0+1
  3083  014E  01B6               	movf	0+(??_main+0)+0,w
  3084  014F  0835               	movwf	(lcd_num@num)
  3085  0150  00AA               	movf	1+(??_main+0)+0,w
  3086  0151  0836               	movwf	(lcd_num@num+1)
  3087  0152  00AB               	movlw	low(02h)
  3088  0153  3002               	movwf	(??_main+2)+0
  3089  0154  00B7               	movf	(??_main+2)+0,w
  3090  0155  0837               	movwf	(lcd_num@tam)
  3091  0156  00AC               	movlw	low(0)
  3092  0157  3000               	fcall	_lcd_num
  3093  0158  120A  118A  217A  120A  118A  	line	85
  3094                           	
  3095                           l2154:	
  3096  015D                     ;main.c: 85:             lcd_num (0,2,seg,2 );
  3097                           	movlw	low(02h)
  3098  015D  3002               	bcf	status, 5	;RP0=0, select bank0
  3099  015E  1283               	bcf	status, 6	;RP1=0, select bank0
  3100  015F  1303               	movwf	(??_main+0)+0
  3101  0160  00B5               	movf	(??_main+0)+0,w
  3102  0161  0835               	movwf	(lcd_num@col)
  3103  0162  00A9               	movf	(_seg),w
  3104  0163  0845               	movwf	(??_main+1)+0
  3105  0164  00B6               	clrf	(??_main+1)+0+1
  3106  0165  01B7               	movf	0+(??_main+1)+0,w
  3107  0166  0836               	movwf	(lcd_num@num)
  3108  0167  00AA               	movf	1+(??_main+1)+0,w
  3109  0168  0837               	movwf	(lcd_num@num+1)
  3110  0169  00AB               	movlw	low(02h)
  3111  016A  3002               	movwf	(??_main+3)+0
  3112  016B  00B8               	movf	(??_main+3)+0,w
  3113  016C  0838               	movwf	(lcd_num@tam)
  3114  016D  00AC               	movlw	low(0)
  3115  016E  3000               	fcall	_lcd_num
  3116  016F  120A  118A  217A  120A  118A  	goto	l2116
  3117  0174  2859               	line	87
  3118                           ;main.c: 87:         }
  3119                           	
  3120                           l175:	
  3121  0175                     	goto	l2116
  3122  0175  2859               	line	88
  3123                           ;main.c: 88:     }
  3124                           	
  3125                           l180:	
  3126  0176                     	goto	l2116
  3127  0176  2859               	
  3128                           l181:	
  3129  0177                     	line	89
  3130                           	
  3131                           l182:	
  3132  0177                     	global	start
  3133                           	ljmp	start
  3134  0177  120A  118A  280C   	opt stack 0
  3135                           GLOBAL	__end_of_main
  3136                           	__end_of_main:
  3137  017A                     	signat	_main,89
  3138                           	global	_teclado_init
  3139                           
  3140 ;; *************** function _teclado_init *****************
  3141 ;; Defined at:
  3142 ;;		line 8 in file "teclado.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;		None
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3156 ;;      Params:         0       0       0       0       0
  3157 ;;      Locals:         0       0       0       0       0
  3158 ;;      Temps:          0       0       0       0       0
  3159 ;;      Totals:         0       0       0       0       0
  3160 ;;Total ram usage:        0 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; Hardware stack levels required when called:    3
  3163 ;; This function calls:
  3164 ;;		Nothing
  3165 ;; This function is called by:
  3166 ;;		_main
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  3170                           	file	"teclado.c"
  3171                           	line	8
  3172                           global __ptext1
  3173                           __ptext1:	;psect for function _teclado_init
  3174  06C9                     psect	text1
  3175                           	file	"teclado.c"
  3176                           	line	8
  3177                           	global	__size_of_teclado_init
  3178                           	__size_of_teclado_init	equ	__end_of_teclado_init-_teclado_init
  3179  0011                     	
  3180                           _teclado_init:	
  3181  06C9                     ;incstack = 0
  3182                           	opt	stack 4
  3183                           ; Regs used in _teclado_init: [wreg+status,2]
  3184                           	line	10
  3185                           	
  3186                           l1964:	
  3187  06C9                     ;teclado.c: 10:     TRISB = 0xF0;
  3188                           	movlw	low(0F0h)
  3189  06C9  30F0               	bsf	status, 5	;RP0=1, select bank1
  3190  06CA  1683               	bcf	status, 6	;RP1=0, select bank1
  3191  06CB  1303               	movwf	(134)^080h	;volatile
  3192  06CC  0086               	line	11
  3193                           	
  3194                           l1966:	
  3195  06CD                     ;teclado.c: 11:     ANSELH = 0x00;
  3196                           	bsf	status, 5	;RP0=1, select bank3
  3197  06CD  1683               	bsf	status, 6	;RP1=1, select bank3
  3198  06CE  1703               	clrf	(393)^0180h	;volatile
  3199  06CF  0189               	line	12
  3200                           	
  3201                           l1968:	
  3202  06D0                     ;teclado.c: 12:     OPTION_REGbits.nRBPU = 0;
  3203                           	bsf	status, 5	;RP0=1, select bank1
  3204  06D0  1683               	bcf	status, 6	;RP1=0, select bank1
  3205  06D1  1303               	bcf	(129)^080h,7	;volatile
  3206  06D2  1381               	line	13
  3207                           	
  3208                           l1970:	
  3209  06D3                     ;teclado.c: 13:     WPUB = 0xFF;
  3210                           	movlw	low(0FFh)
  3211  06D3  30FF               	movwf	(149)^080h	;volatile
  3212  06D4  0095               	line	14
  3213                           	
  3214                           l1972:	
  3215  06D5                     ;teclado.c: 14:     PORTB = 0xFF;
  3216                           	movlw	low(0FFh)
  3217  06D5  30FF               	bcf	status, 5	;RP0=0, select bank0
  3218  06D6  1283               	bcf	status, 6	;RP1=0, select bank0
  3219  06D7  1303               	movwf	(6)	;volatile
  3220  06D8  0086               	line	15
  3221                           	
  3222                           l255:	
  3223  06D9                     	return
  3224  06D9  0008               	opt stack 0
  3225                           GLOBAL	__end_of_teclado_init
  3226                           	__end_of_teclado_init:
  3227  06DA                     	signat	_teclado_init,89
  3228                           	global	_teclado
  3229                           
  3230 ;; *************** function _teclado *****************
  3231 ;; Defined at:
  3232 ;;		line 22 in file "teclado.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;		None
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;  c               1   12[BANK0 ] unsigned char 
  3237 ;;  l               1   11[BANK0 ] unsigned char 
  3238 ;;  aux             1   10[BANK0 ] unsigned char 
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  1    wreg      unsigned char 
  3241 ;; Registers used:
  3242 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3248 ;;      Params:         0       0       0       0       0
  3249 ;;      Locals:         0       3       0       0       0
  3250 ;;      Temps:          0       7       0       0       0
  3251 ;;      Totals:         0      10       0       0       0
  3252 ;;Total ram usage:       10 bytes
  3253 ;; Hardware stack levels used:    1
  3254 ;; Hardware stack levels required when called:    4
  3255 ;; This function calls:
  3256 ;;		_b0_bordaSubida
  3257 ;;		_b1_bordaSubida
  3258 ;; This function is called by:
  3259 ;;		_main
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  3263                           	line	22
  3264                           global __ptext2
  3265                           __ptext2:	;psect for function _teclado
  3266  026A                     psect	text2
  3267                           	file	"teclado.c"
  3268                           	line	22
  3269                           	global	__size_of_teclado
  3270                           	__size_of_teclado	equ	__end_of_teclado-_teclado
  3271  0097                     	
  3272                           _teclado:	
  3273  026A                     ;incstack = 0
  3274                           	opt	stack 3
  3275                           ; Regs used in _teclado: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3276                           	line	24
  3277                           	
  3278                           l1980:	
  3279  026A                     ;teclado.c: 24: char aux = 0;
  3280                           	bcf	status, 5	;RP0=0, select bank0
  3281  026A  1283               	bcf	status, 6	;RP1=0, select bank0
  3282  026B  1303               	clrf	(teclado@aux)
  3283  026C  01AA               	line	27
  3284                           ;teclado.c: 25: char l,c;;teclado.c: 27:     for( l=0; l<4; l++ )
  3285                           	clrf	(teclado@l)
  3286  026D  01AB               	
  3287                           l1982:	
  3288  026E                     	movlw	low(04h)
  3289  026E  3004               	subwf	(teclado@l),w
  3290  026F  022B               	skipc
  3291  0270  1C03               	goto	u1341
  3292  0271  2A73               	goto	u1340
  3293  0272  2A74               u1341:
  3294  0273                     	goto	l1986
  3295  0273  2A76               u1340:
  3296  0274                     	goto	l2006
  3297  0274  2AD4               	
  3298                           l1984:	
  3299  0275                     	goto	l2006
  3300  0275  2AD4               	
  3301                           l260:	
  3302  0276                     	line	29
  3303                           	
  3304                           l1986:	
  3305  0276                     ;teclado.c: 28:     {;teclado.c: 29:         PORTB = (char)~(0x01 << l);
  3306                           	movlw	low(01h)
  3307  0276  3001               	movwf	(??_teclado+0)+0
  3308  0277  00A3               	incf	(teclado@l),w
  3309  0278  0A2B               	goto	u1354
  3310  0279  2A7C               u1355:
  3311  027A                     	clrc
  3312  027A  1003               	rlf	(??_teclado+0)+0,f
  3313  027B  0DA3               u1354:
  3314  027C                     	addlw	-1
  3315  027C  3EFF               	skipz
  3316  027D  1D03               	goto	u1355
  3317  027E  2A7A               	movf	0+(??_teclado+0)+0,w
  3318  027F  0823               	xorlw	0ffh
  3319  0280  3AFF               	movwf	(6)	;volatile
  3320  0281  0086               	line	30
  3321                           	
  3322                           l1988:	
  3323  0282                     ;teclado.c: 30:         for( c=0; c<4; c++ )
  3324                           	clrf	(teclado@c)
  3325  0282  01AC               	
  3326                           l1990:	
  3327  0283                     	movlw	low(04h)
  3328  0283  3004               	subwf	(teclado@c),w
  3329  0284  022C               	skipc
  3330  0285  1C03               	goto	u1361
  3331  0286  2A88               	goto	u1360
  3332  0287  2A89               u1361:
  3333  0288                     	goto	l1994
  3334  0288  2A8B               u1360:
  3335  0289                     	goto	l2002
  3336  0289  2AC9               	
  3337                           l1992:	
  3338  028A                     	goto	l2002
  3339  028A  2AC9               	
  3340                           l262:	
  3341  028B                     	line	32
  3342                           	
  3343                           l1994:	
  3344  028B                     ;teclado.c: 31:         {;teclado.c: 32:             if( ~PORTB & (0x10<<c) )
  3345                           	comf	(6),w	;volatile
  3346  028B  0906               	movwf	(??_teclado+0)+0
  3347  028C  00A3               	clrf	(??_teclado+0)+0+1
  3348  028D  01A4               	comf	(??_teclado+0)+0+1
  3349  028E  09A4               	incf	(teclado@c),w
  3350  028F  0A2C               	movwf	(??_teclado+2)+0
  3351  0290  00A5               	movlw	010h
  3352  0291  3010               	movwf	(??_teclado+3)+0
  3353  0292  00A6               	movlw	0
  3354  0293  3000               	movwf	(??_teclado+3)+0+1
  3355  0294  00A7               	goto	u1374
  3356  0295  2A99               u1375:
  3357  0296                     	clrc
  3358  0296  1003               	rlf	(??_teclado+3)+0,f
  3359  0297  0DA6               	rlf	(??_teclado+3)+1,f
  3360  0298  0DA7               u1374:
  3361  0299                     	decfsz	(??_teclado+2)+0,f
  3362  0299  0BA5               	goto	u1375
  3363  029A  2A96               	
  3364                           	movf	0+(??_teclado+0)+0,w
  3365  029B  0823               	andwf	0+(??_teclado+3)+0,w
  3366  029C  0526               	movwf	(??_teclado+5)+0
  3367  029D  00A8               	movf	1+(??_teclado+0)+0,w
  3368  029E  0824               	andwf	1+(??_teclado+3)+0,w
  3369  029F  0527               	movwf	1+(??_teclado+5)+0
  3370  02A0  00A9               	movf	((??_teclado+5)+0),w
  3371  02A1  0828               iorwf	((??_teclado+5)+1),w
  3372  02A2  0429               	btfsc	status,2
  3373  02A3  1903               	goto	u1381
  3374  02A4  2AA6               	goto	u1380
  3375  02A5  2AA7               u1381:
  3376  02A6                     	goto	l1998
  3377  02A6  2ABE               u1380:
  3378  02A7                     	line	33
  3379                           	
  3380                           l1996:	
  3381  02A7                     ;teclado.c: 33:                 aux = tecladoMatriz[l][c];
  3382                           	movf	(teclado@l),w
  3383  02A7  082B               	movwf	(??_teclado+0)+0
  3384  02A8  00A3               	movlw	02h
  3385  02A9  3002               u1395:
  3386  02AA                     	clrc
  3387  02AA  1003               	rlf	(??_teclado+0)+0,f
  3388  02AB  0DA3               	addlw	-1
  3389  02AC  3EFF               	skipz
  3390  02AD  1D03               	goto	u1395
  3391  02AE  2AAA               	movlw	(low((((_tecladoMatriz)-__stringbase)|8000h)))&0ffh
  3392  02AF  3001               	addwf	0+(??_teclado+0)+0,w
  3393  02B0  0723               	movwf	(??_teclado+1)+0
  3394  02B1  00A4               	movf	(teclado@c),w
  3395  02B2  082C               	addwf	0+(??_teclado+1)+0,w
  3396  02B3  0724               	movwf	fsr0
  3397  02B4  0084               	fcall	stringdir
  3398  02B5  120A  118A  2460  120A  118A  	movwf	(??_teclado+2)+0
  3399  02BA  00A5               	movf	(??_teclado+2)+0,w
  3400  02BB  0825               	movwf	(teclado@aux)
  3401  02BC  00AA               	goto	l1998
  3402  02BD  2ABE               	
  3403                           l264:	
  3404  02BE                     	line	34
  3405                           	
  3406                           l1998:	
  3407  02BE                     ;teclado.c: 34:         }
  3408                           	movlw	low(01h)
  3409  02BE  3001               	movwf	(??_teclado+0)+0
  3410  02BF  00A3               	movf	(??_teclado+0)+0,w
  3411  02C0  0823               	addwf	(teclado@c),f
  3412  02C1  07AC               	
  3413                           l2000:	
  3414  02C2                     	movlw	low(04h)
  3415  02C2  3004               	subwf	(teclado@c),w
  3416  02C3  022C               	skipc
  3417  02C4  1C03               	goto	u1401
  3418  02C5  2AC7               	goto	u1400
  3419  02C6  2AC8               u1401:
  3420  02C7                     	goto	l1994
  3421  02C7  2A8B               u1400:
  3422  02C8                     	goto	l2002
  3423  02C8  2AC9               	
  3424                           l263:	
  3425  02C9                     	line	35
  3426                           	
  3427                           l2002:	
  3428  02C9                     ;teclado.c: 35:     }
  3429                           	movlw	low(01h)
  3430  02C9  3001               	movwf	(??_teclado+0)+0
  3431  02CA  00A3               	movf	(??_teclado+0)+0,w
  3432  02CB  0823               	addwf	(teclado@l),f
  3433  02CC  07AB               	
  3434                           l2004:	
  3435  02CD                     	movlw	low(04h)
  3436  02CD  3004               	subwf	(teclado@l),w
  3437  02CE  022B               	skipc
  3438  02CF  1C03               	goto	u1411
  3439  02D0  2AD2               	goto	u1410
  3440  02D1  2AD3               u1411:
  3441  02D2                     	goto	l1986
  3442  02D2  2A76               u1410:
  3443  02D3                     	goto	l2006
  3444  02D3  2AD4               	
  3445                           l261:	
  3446  02D4                     	line	36
  3447                           	
  3448                           l2006:	
  3449  02D4                     ;teclado.c: 36:     if ( aux == 0 )
  3450                           	movf	((teclado@aux)),w
  3451  02D4  082A               	btfss	status,2
  3452  02D5  1D03               	goto	u1421
  3453  02D6  2AD8               	goto	u1420
  3454  02D7  2AD9               u1421:
  3455  02D8                     	goto	l265
  3456  02D8  2AFC               u1420:
  3457  02D9                     	line	38
  3458                           	
  3459                           l2008:	
  3460  02D9                     ;teclado.c: 37:     {;teclado.c: 38:         if ( b0_bordaSubida() )
  3461                           	fcall	_b0_bordaSubida
  3462  02D9  120A  118A  265B  120A  118A  	xorlw	0
  3463  02DE  3A00               	skipnz
  3464  02DF  1903               	goto	u1431
  3465  02E0  2AE2               	goto	u1430
  3466  02E1  2AE3               u1431:
  3467  02E2                     	goto	l2012
  3468  02E2  2AEA               u1430:
  3469  02E3                     	line	40
  3470                           	
  3471                           l2010:	
  3472  02E3                     ;teclado.c: 39:         {;teclado.c: 40:             aux = 'C';
  3473                           	movlw	low(043h)
  3474  02E3  3043               	bcf	status, 5	;RP0=0, select bank0
  3475  02E4  1283               	bcf	status, 6	;RP1=0, select bank0
  3476  02E5  1303               	movwf	(??_teclado+0)+0
  3477  02E6  00A3               	movf	(??_teclado+0)+0,w
  3478  02E7  0823               	movwf	(teclado@aux)
  3479  02E8  00AA               	line	41
  3480                           ;teclado.c: 41:         }
  3481                           	goto	l265
  3482  02E9  2AFC               	line	42
  3483                           ;teclado.c: 42:         else if ( b1_bordaSubida() )
  3484                           	
  3485                           l266:	
  3486  02EA                     	
  3487                           l2012:	
  3488  02EA                     	fcall	_b1_bordaSubida
  3489  02EA  120A  118A  2641  120A  118A  	xorlw	0
  3490  02EF  3A00               	skipnz
  3491  02F0  1903               	goto	u1441
  3492  02F1  2AF3               	goto	u1440
  3493  02F2  2AF4               u1441:
  3494  02F3                     	goto	l265
  3495  02F3  2AFC               u1440:
  3496  02F4                     	line	44
  3497                           	
  3498                           l2014:	
  3499  02F4                     ;teclado.c: 43:         {;teclado.c: 44:             aux = 'D';
  3500                           	movlw	low(044h)
  3501  02F4  3044               	bcf	status, 5	;RP0=0, select bank0
  3502  02F5  1283               	bcf	status, 6	;RP1=0, select bank0
  3503  02F6  1303               	movwf	(??_teclado+0)+0
  3504  02F7  00A3               	movf	(??_teclado+0)+0,w
  3505  02F8  0823               	movwf	(teclado@aux)
  3506  02F9  00AA               	goto	l265
  3507  02FA  2AFC               	line	45
  3508                           ;teclado.c: 45:         }
  3509                           	
  3510                           l268:	
  3511  02FB                     	goto	l265
  3512  02FB  2AFC               	
  3513                           l267:	
  3514  02FC                     	line	46
  3515                           ;teclado.c: 46:     }
  3516                           	
  3517                           l265:	
  3518  02FC                     	line	47
  3519                           ;teclado.c: 47:     return( aux );
  3520                           	bcf	status, 5	;RP0=0, select bank0
  3521  02FC  1283               	bcf	status, 6	;RP1=0, select bank0
  3522  02FD  1303               	movf	(teclado@aux),w
  3523  02FE  082A               	goto	l269
  3524  02FF  2B00               	
  3525                           l2016:	
  3526  0300                     	line	48
  3527                           	
  3528                           l269:	
  3529  0300                     	return
  3530  0300  0008               	opt stack 0
  3531                           GLOBAL	__end_of_teclado
  3532                           	__end_of_teclado:
  3533  0301                     	signat	_teclado,89
  3534                           	global	_b1_bordaSubida
  3535                           
  3536 ;; *************** function _b1_bordaSubida *****************
  3537 ;; Defined at:
  3538 ;;		line 53 in file "Botoes.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;		None
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;  aux             1    1[BANK0 ] unsigned char 
  3543 ;; Return value:  Size  Location     Type
  3544 ;;                  1    wreg      unsigned char 
  3545 ;; Registers used:
  3546 ;;		wreg, status,2, status,0
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3552 ;;      Params:         0       0       0       0       0
  3553 ;;      Locals:         0       2       0       0       0
  3554 ;;      Temps:          0       1       0       0       0
  3555 ;;      Totals:         0       3       0       0       0
  3556 ;;Total ram usage:        3 bytes
  3557 ;; Hardware stack levels used:    1
  3558 ;; Hardware stack levels required when called:    3
  3559 ;; This function calls:
  3560 ;;		Nothing
  3561 ;; This function is called by:
  3562 ;;		_teclado
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3566                           	file	"Botoes.c"
  3567                           	line	53
  3568                           global __ptext3
  3569                           __ptext3:	;psect for function _b1_bordaSubida
  3570  0641                     psect	text3
  3571                           	file	"Botoes.c"
  3572                           	line	53
  3573                           	global	__size_of_b1_bordaSubida
  3574                           	__size_of_b1_bordaSubida	equ	__end_of_b1_bordaSubida-_b1_bordaSubida
  3575  001A                     	
  3576                           _b1_bordaSubida:	
  3577  0641                     ;incstack = 0
  3578                           	opt	stack 3
  3579                           ; Regs used in _b1_bordaSubida: [wreg+status,2+status,0]
  3580                           	line	56
  3581                           	
  3582                           l1732:	
  3583  0641                     ;Botoes.c: 55:     char aux;;Botoes.c: 56:     aux = PORTDbits.RD7 && !b1Anterior;
  3584                           	bcf	status, 5	;RP0=0, select bank0
  3585  0641  1283               	bcf	status, 6	;RP1=0, select bank0
  3586  0642  1303               	clrf	(_b1_bordaSubida$95)
  3587  0643  01A2               	
  3588                           l1734:	
  3589  0644                     	btfss	(8),7	;volatile
  3590  0644  1F88               	goto	u941
  3591  0645  2E47               	goto	u940
  3592  0646  2E48               u941:
  3593  0647                     	goto	l1740
  3594  0647  2E50               u940:
  3595  0648                     	
  3596                           l1736:	
  3597  0648                     	movf	((_b1Anterior)),w
  3598  0648  0846               	btfss	status,2
  3599  0649  1D03               	goto	u951
  3600  064A  2E4C               	goto	u950
  3601  064B  2E4D               u951:
  3602  064C                     	goto	l1740
  3603  064C  2E50               u950:
  3604  064D                     	
  3605                           l1738:	
  3606  064D                     	clrf	(_b1_bordaSubida$95)
  3607  064D  01A2               	incf	(_b1_bordaSubida$95),f
  3608  064E  0AA2               	goto	l1740
  3609  064F  2E50               	
  3610                           l33:	
  3611  0650                     	
  3612                           l1740:	
  3613  0650                     	movf	(_b1_bordaSubida$95),w
  3614  0650  0822               	movwf	(??_b1_bordaSubida+0)+0
  3615  0651  00A0               	movf	(??_b1_bordaSubida+0)+0,w
  3616  0652  0820               	movwf	(b1_bordaSubida@aux)
  3617  0653  00A1               	line	57
  3618                           	
  3619                           l1742:	
  3620  0654                     ;Botoes.c: 57:     b1Anterior = PORTDbits.RD7;
  3621                           	movlw	0
  3622  0654  3000               	btfsc	(8),7	;volatile
  3623  0655  1B88               	movlw	1
  3624  0656  3001               	movwf	(_b1Anterior)
  3625  0657  00C6               	line	58
  3626                           	
  3627                           l1744:	
  3628  0658                     ;Botoes.c: 58:     return( aux );
  3629                           	movf	(b1_bordaSubida@aux),w
  3630  0658  0821               	goto	l34
  3631  0659  2E5A               	
  3632                           l1746:	
  3633  065A                     	line	59
  3634                           	
  3635                           l34:	
  3636  065A                     	return
  3637  065A  0008               	opt stack 0
  3638                           GLOBAL	__end_of_b1_bordaSubida
  3639                           	__end_of_b1_bordaSubida:
  3640  065B                     	signat	_b1_bordaSubida,89
  3641                           	global	_b0_bordaSubida
  3642                           
  3643 ;; *************** function _b0_bordaSubida *****************
  3644 ;; Defined at:
  3645 ;;		line 26 in file "Botoes.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;		None
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  aux             1    1[BANK0 ] unsigned char 
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      unsigned char 
  3652 ;; Registers used:
  3653 ;;		wreg, status,2, status,0
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3659 ;;      Params:         0       0       0       0       0
  3660 ;;      Locals:         0       2       0       0       0
  3661 ;;      Temps:          0       1       0       0       0
  3662 ;;      Totals:         0       3       0       0       0
  3663 ;;Total ram usage:        3 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:    3
  3666 ;; This function calls:
  3667 ;;		Nothing
  3668 ;; This function is called by:
  3669 ;;		_teclado
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  3673                           	line	26
  3674                           global __ptext4
  3675                           __ptext4:	;psect for function _b0_bordaSubida
  3676  065B                     psect	text4
  3677                           	file	"Botoes.c"
  3678                           	line	26
  3679                           	global	__size_of_b0_bordaSubida
  3680                           	__size_of_b0_bordaSubida	equ	__end_of_b0_bordaSubida-_b0_bordaSubida
  3681  001A                     	
  3682                           _b0_bordaSubida:	
  3683  065B                     ;incstack = 0
  3684                           	opt	stack 3
  3685                           ; Regs used in _b0_bordaSubida: [wreg+status,2+status,0]
  3686                           	line	29
  3687                           	
  3688                           l1716:	
  3689  065B                     ;Botoes.c: 28:     char aux;;Botoes.c: 29:     aux = PORTDbits.RD6 && !b0Anterior;
  3690                           	bcf	status, 5	;RP0=0, select bank0
  3691  065B  1283               	bcf	status, 6	;RP1=0, select bank0
  3692  065C  1303               	clrf	(_b0_bordaSubida$84)
  3693  065D  01A2               	
  3694                           l1718:	
  3695  065E                     	btfss	(8),6	;volatile
  3696  065E  1F08               	goto	u921
  3697  065F  2E61               	goto	u920
  3698  0660  2E62               u921:
  3699  0661                     	goto	l1724
  3700  0661  2E6A               u920:
  3701  0662                     	
  3702                           l1720:	
  3703  0662                     	movf	((_b0Anterior)),w
  3704  0662  0847               	btfss	status,2
  3705  0663  1D03               	goto	u931
  3706  0664  2E66               	goto	u930
  3707  0665  2E67               u931:
  3708  0666                     	goto	l1724
  3709  0666  2E6A               u930:
  3710  0667                     	
  3711                           l1722:	
  3712  0667                     	clrf	(_b0_bordaSubida$84)
  3713  0667  01A2               	incf	(_b0_bordaSubida$84),f
  3714  0668  0AA2               	goto	l1724
  3715  0669  2E6A               	
  3716                           l13:	
  3717  066A                     	
  3718                           l1724:	
  3719  066A                     	movf	(_b0_bordaSubida$84),w
  3720  066A  0822               	movwf	(??_b0_bordaSubida+0)+0
  3721  066B  00A0               	movf	(??_b0_bordaSubida+0)+0,w
  3722  066C  0820               	movwf	(b0_bordaSubida@aux)
  3723  066D  00A1               	line	30
  3724                           	
  3725                           l1726:	
  3726  066E                     ;Botoes.c: 30:     b0Anterior = PORTDbits.RD6;
  3727                           	movlw	0
  3728  066E  3000               	btfsc	(8),6	;volatile
  3729  066F  1B08               	movlw	1
  3730  0670  3001               	movwf	(_b0Anterior)
  3731  0671  00C7               	line	31
  3732                           	
  3733                           l1728:	
  3734  0672                     ;Botoes.c: 31:     return( aux );
  3735                           	movf	(b0_bordaSubida@aux),w
  3736  0672  0821               	goto	l14
  3737  0673  2E74               	
  3738                           l1730:	
  3739  0674                     	line	32
  3740                           	
  3741                           l14:	
  3742  0674                     	return
  3743  0674  0008               	opt stack 0
  3744                           GLOBAL	__end_of_b0_bordaSubida
  3745                           	__end_of_b0_bordaSubida:
  3746  0675                     	signat	_b0_bordaSubida,89
  3747                           	global	_motorDC_init
  3748                           
  3749 ;; *************** function _motorDC_init *****************
  3750 ;; Defined at:
  3751 ;;		line 7 in file "motorDC.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;		None
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;		None
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      void 
  3758 ;; Registers used:
  3759 ;;		wreg, status,2, status,0, pclath, cstack
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3765 ;;      Params:         0       0       0       0       0
  3766 ;;      Locals:         0       0       0       0       0
  3767 ;;      Temps:          0       0       0       0       0
  3768 ;;      Totals:         0       0       0       0       0
  3769 ;;Total ram usage:        0 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:    4
  3772 ;; This function calls:
  3773 ;;		_T2_init
  3774 ;;		_T2_start
  3775 ;; This function is called by:
  3776 ;;		_main
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  3780                           	file	"motorDC.c"
  3781                           	line	7
  3782                           global __ptext5
  3783                           __ptext5:	;psect for function _motorDC_init
  3784  068B                     psect	text5
  3785                           	file	"motorDC.c"
  3786                           	line	7
  3787                           	global	__size_of_motorDC_init
  3788                           	__size_of_motorDC_init	equ	__end_of_motorDC_init-_motorDC_init
  3789  0015                     	
  3790                           _motorDC_init:	
  3791  068B                     ;incstack = 0
  3792                           	opt	stack 3
  3793                           ; Regs used in _motorDC_init: [wreg+status,2+status,0+pclath+cstack]
  3794                           	line	9
  3795                           	
  3796                           l1974:	
  3797  068B                     ;motorDC.c: 9:     TRISCbits.TRISC1 = 0;
  3798                           	bsf	status, 5	;RP0=1, select bank1
  3799  068B  1683               	bcf	status, 6	;RP1=0, select bank1
  3800  068C  1303               	bcf	(135)^080h,1	;volatile
  3801  068D  1087               	line	10
  3802                           ;motorDC.c: 10:     TRISCbits.TRISC0 = 0;
  3803                           	bcf	(135)^080h,0	;volatile
  3804  068E  1007               	line	12
  3805                           	
  3806                           l1976:	
  3807  068F                     ;motorDC.c: 12:     T2_init();
  3808                           	fcall	_T2_init
  3809  068F  120A  118A  2675  120A  118A  	line	13
  3810                           ;motorDC.c: 13:     T2_start( 100 );
  3811                           	movlw	064h
  3812  0694  3064               	bcf	status, 5	;RP0=0, select bank0
  3813  0695  1283               	bcf	status, 6	;RP1=0, select bank0
  3814  0696  1303               	movwf	(T2_start@c)
  3815  0697  00A0               	movlw	0
  3816  0698  3000               	movwf	((T2_start@c))+1
  3817  0699  00A1               	fcall	_T2_start
  3818  069A  120A  118A  26DA  120A  118A  	line	14
  3819                           	
  3820                           l195:	
  3821  069F                     	return
  3822  069F  0008               	opt stack 0
  3823                           GLOBAL	__end_of_motorDC_init
  3824                           	__end_of_motorDC_init:
  3825  06A0                     	signat	_motorDC_init,89
  3826                           	global	_T2_start
  3827                           
  3828 ;; *************** function _T2_start *****************
  3829 ;; Defined at:
  3830 ;;		line 132 in file "Timers.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  c               2    0[BANK0 ] unsigned int 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      void 
  3837 ;; Registers used:
  3838 ;;		wreg
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3844 ;;      Params:         0       2       0       0       0
  3845 ;;      Locals:         0       0       0       0       0
  3846 ;;      Temps:          0       0       0       0       0
  3847 ;;      Totals:         0       2       0       0       0
  3848 ;;Total ram usage:        2 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:    3
  3851 ;; This function calls:
  3852 ;;		Nothing
  3853 ;; This function is called by:
  3854 ;;		_motorDC_init
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3858                           	file	"Timers.c"
  3859                           	line	132
  3860                           global __ptext6
  3861                           __ptext6:	;psect for function _T2_start
  3862  06DA                     psect	text6
  3863                           	file	"Timers.c"
  3864                           	line	132
  3865                           	global	__size_of_T2_start
  3866                           	__size_of_T2_start	equ	__end_of_T2_start-_T2_start
  3867  0008                     	
  3868                           _T2_start:	
  3869  06DA                     ;incstack = 0
  3870                           	opt	stack 3
  3871                           ; Regs used in _T2_start: [wreg]
  3872                           	line	134
  3873                           	
  3874                           l1790:	
  3875  06DA                     ;Timers.c: 132: void T2_start( unsigned int c );Timers.c: 133: {;Timers.c: 134:     T2co
                                 unt = c;
  3876                           	bcf	status, 5	;RP0=0, select bank0
  3877  06DA  1283               	bcf	status, 6	;RP1=0, select bank0
  3878  06DB  1303               	movf	(T2_start@c+1),w
  3879  06DC  0821               	movwf	(_T2count+1)
  3880  06DD  00BC               	movf	(T2_start@c),w
  3881  06DE  0820               	movwf	(_T2count)
  3882  06DF  00BB               	line	135
  3883                           	
  3884                           l1792:	
  3885  06E0                     ;Timers.c: 135:     T2CONbits.TMR2ON = 1;
  3886                           	bsf	(18),2	;volatile
  3887  06E0  1512               	line	136
  3888                           	
  3889                           l346:	
  3890  06E1                     	return
  3891  06E1  0008               	opt stack 0
  3892                           GLOBAL	__end_of_T2_start
  3893                           	__end_of_T2_start:
  3894  06E2                     	signat	_T2_start,4217
  3895                           	global	_T2_init
  3896                           
  3897 ;; *************** function _T2_init *****************
  3898 ;; Defined at:
  3899 ;;		line 111 in file "Timers.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;		None
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;		None
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  1    wreg      void 
  3906 ;; Registers used:
  3907 ;;		wreg, status,2, status,0
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3913 ;;      Params:         0       0       0       0       0
  3914 ;;      Locals:         0       0       0       0       0
  3915 ;;      Temps:          0       0       0       0       0
  3916 ;;      Totals:         0       0       0       0       0
  3917 ;;Total ram usage:        0 bytes
  3918 ;; Hardware stack levels used:    1
  3919 ;; Hardware stack levels required when called:    3
  3920 ;; This function calls:
  3921 ;;		Nothing
  3922 ;; This function is called by:
  3923 ;;		_motorDC_init
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3927                           	line	111
  3928                           global __ptext7
  3929                           __ptext7:	;psect for function _T2_init
  3930  0675                     psect	text7
  3931                           	file	"Timers.c"
  3932                           	line	111
  3933                           	global	__size_of_T2_init
  3934                           	__size_of_T2_init	equ	__end_of_T2_init-_T2_init
  3935  0016                     	
  3936                           _T2_init:	
  3937  0675                     ;incstack = 0
  3938                           	opt	stack 3
  3939                           ; Regs used in _T2_init: [wreg+status,2+status,0]
  3940                           	line	113
  3941                           	
  3942                           l1774:	
  3943  0675                     ;Timers.c: 113:     INTCONbits.GIE = 0;
  3944                           	bcf	(11),7	;volatile
  3945  0675  138B               	line	114
  3946                           	
  3947                           l1776:	
  3948  0676                     ;Timers.c: 114:     PR2 = (100);
  3949                           	movlw	low(064h)
  3950  0676  3064               	bsf	status, 5	;RP0=1, select bank1
  3951  0677  1683               	bcf	status, 6	;RP1=0, select bank1
  3952  0678  1303               	movwf	(146)^080h	;volatile
  3953  0679  0092               	line	115
  3954                           	
  3955                           l1778:	
  3956  067A                     ;Timers.c: 115:     TMR2 = 0;
  3957                           	bcf	status, 5	;RP0=0, select bank0
  3958  067A  1283               	bcf	status, 6	;RP1=0, select bank0
  3959  067B  1303               	clrf	(17)	;volatile
  3960  067C  0191               	line	116
  3961                           	
  3962                           l1780:	
  3963  067D                     ;Timers.c: 116:     T2CONbits.T2CKPS = 0x1;
  3964                           	movf	(18),w	;volatile
  3965  067D  0812               	andlw	not (((1<<2)-1)<<0)
  3966  067E  39FC               	iorlw	(01h & ((1<<2)-1))<<0
  3967  067F  3801               	movwf	(18)	;volatile
  3968  0680  0092               	line	117
  3969                           	
  3970                           l1782:	
  3971  0681                     ;Timers.c: 117:     T2CONbits.TOUTPS = 0x1;
  3972                           	movf	(18),w	;volatile
  3973  0681  0812               	andlw	not (((1<<4)-1)<<3)
  3974  0682  3987               	iorlw	(01h & ((1<<4)-1))<<3
  3975  0683  3808               	movwf	(18)	;volatile
  3976  0684  0092               	line	118
  3977                           	
  3978                           l1784:	
  3979  0685                     ;Timers.c: 118:     INTCONbits.PEIE = 1;
  3980                           	bsf	(11),6	;volatile
  3981  0685  170B               	line	119
  3982                           	
  3983                           l1786:	
  3984  0686                     ;Timers.c: 119:     PIE1bits.TMR2IE = 1;
  3985                           	bsf	status, 5	;RP0=1, select bank1
  3986  0686  1683               	bcf	status, 6	;RP1=0, select bank1
  3987  0687  1303               	bsf	(140)^080h,1	;volatile
  3988  0688  148C               	line	120
  3989                           	
  3990                           l1788:	
  3991  0689                     ;Timers.c: 120:     INTCONbits.GIE = 1;
  3992                           	bsf	(11),7	;volatile
  3993  0689  178B               	line	121
  3994                           	
  3995                           l340:	
  3996  068A                     	return
  3997  068A  0008               	opt stack 0
  3998                           GLOBAL	__end_of_T2_init
  3999                           	__end_of_T2_init:
  4000  068B                     	signat	_T2_init,89
  4001                           	global	_motorDC_inc
  4002                           
  4003 ;; *************** function _motorDC_inc *****************
  4004 ;; Defined at:
  4005 ;;		line 28 in file "motorDC.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;		None
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;		None
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  1    wreg      void 
  4012 ;; Registers used:
  4013 ;;		wreg, status,2, status,0, pclath, cstack
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4019 ;;      Params:         0       0       0       0       0
  4020 ;;      Locals:         0       2       0       0       0
  4021 ;;      Temps:          0       1       0       0       0
  4022 ;;      Totals:         0       3       0       0       0
  4023 ;;Total ram usage:        3 bytes
  4024 ;; Hardware stack levels used:    1
  4025 ;; Hardware stack levels required when called:    4
  4026 ;; This function calls:
  4027 ;;		_delay
  4028 ;; This function is called by:
  4029 ;;		_main
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  4033                           	file	"motorDC.c"
  4034                           	line	28
  4035                           global __ptext8
  4036                           __ptext8:	;psect for function _motorDC_inc
  4037  05E8                     psect	text8
  4038                           	file	"motorDC.c"
  4039                           	line	28
  4040                           	global	__size_of_motorDC_inc
  4041                           	__size_of_motorDC_inc	equ	__end_of_motorDC_inc-_motorDC_inc
  4042  0020                     	
  4043                           _motorDC_inc:	
  4044  05E8                     ;incstack = 0
  4045                           	opt	stack 3
  4046                           ; Regs used in _motorDC_inc: [wreg+status,2+status,0+pclath+cstack]
  4047                           	line	30
  4048                           	
  4049                           l2018:	
  4050  05E8                     ;motorDC.c: 30:     delay(150);
  4051                           	movlw	096h
  4052  05E8  3096               	bcf	status, 5	;RP0=0, select bank0
  4053  05E9  1283               	bcf	status, 6	;RP1=0, select bank0
  4054  05EA  1303               	movwf	(delay@t)
  4055  05EB  00A0               	movlw	0
  4056  05EC  3000               	movwf	((delay@t))+1
  4057  05ED  00A1               	fcall	_delay
  4058  05EE  120A  118A  2625  120A  118A  	line	31
  4059                           	
  4060                           l2020:	
  4061  05F3                     ;motorDC.c: 31:     motorDC_dc += (motorDC_dc < 100) ? 5 : 0;
  4062                           	movlw	low(064h)
  4063  05F3  3064               	bcf	status, 5	;RP0=0, select bank0
  4064  05F4  1283               	bcf	status, 6	;RP1=0, select bank0
  4065  05F5  1303               	subwf	(_motorDC_dc),w
  4066  05F6  0243               	skipc
  4067  05F7  1C03               	goto	u1451
  4068  05F8  2DFA               	goto	u1450
  4069  05F9  2DFB               u1451:
  4070  05FA                     	goto	l2024
  4071  05FA  2DFE               u1450:
  4072  05FB                     	
  4073                           l2022:	
  4074  05FB                     	clrf	(_motorDC_inc$309)
  4075  05FB  01A4               	clrf	(_motorDC_inc$309+1)
  4076  05FC  01A5               	goto	l2026
  4077  05FD  2E03               	
  4078                           l205:	
  4079  05FE                     	
  4080                           l2024:	
  4081  05FE                     	movlw	05h
  4082  05FE  3005               	movwf	(_motorDC_inc$309)
  4083  05FF  00A4               	movlw	0
  4084  0600  3000               	movwf	((_motorDC_inc$309))+1
  4085  0601  00A5               	goto	l2026
  4086  0602  2E03               	
  4087                           l207:	
  4088  0603                     	
  4089                           l2026:	
  4090  0603                     	movf	(_motorDC_inc$309),w
  4091  0603  0824               	movwf	(??_motorDC_inc+0)+0
  4092  0604  00A3               	movf	(??_motorDC_inc+0)+0,w
  4093  0605  0823               	addwf	(_motorDC_dc),f
  4094  0606  07C3               	line	32
  4095                           	
  4096                           l208:	
  4097  0607                     	return
  4098  0607  0008               	opt stack 0
  4099                           GLOBAL	__end_of_motorDC_inc
  4100                           	__end_of_motorDC_inc:
  4101  0608                     	signat	_motorDC_inc,89
  4102                           	global	_motorDC_dutycycle
  4103                           
  4104 ;; *************** function _motorDC_dutycycle *****************
  4105 ;; Defined at:
  4106 ;;		line 23 in file "motorDC.c"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;		None
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;		None
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  1    wreg      unsigned char 
  4113 ;; Registers used:
  4114 ;;		wreg
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4120 ;;      Params:         0       0       0       0       0
  4121 ;;      Locals:         0       0       0       0       0
  4122 ;;      Temps:          0       0       0       0       0
  4123 ;;      Totals:         0       0       0       0       0
  4124 ;;Total ram usage:        0 bytes
  4125 ;; Hardware stack levels used:    1
  4126 ;; Hardware stack levels required when called:    3
  4127 ;; This function calls:
  4128 ;;		Nothing
  4129 ;; This function is called by:
  4130 ;;		_main
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4134                           	line	23
  4135                           global __ptext9
  4136                           __ptext9:	;psect for function _motorDC_dutycycle
  4137  06EA                     psect	text9
  4138                           	file	"motorDC.c"
  4139                           	line	23
  4140                           	global	__size_of_motorDC_dutycycle
  4141                           	__size_of_motorDC_dutycycle	equ	__end_of_motorDC_dutycycle-_motorDC_dutycycle
  4142  0005                     	
  4143                           _motorDC_dutycycle:	
  4144  06EA                     ;incstack = 0
  4145                           	opt	stack 4
  4146                           ; Regs used in _motorDC_dutycycle: [wreg]
  4147                           	line	25
  4148                           	
  4149                           l2038:	
  4150  06EA                     ;motorDC.c: 25:     return(motorDC_dc);
  4151                           	bcf	status, 5	;RP0=0, select bank0
  4152  06EA  1283               	bcf	status, 6	;RP1=0, select bank0
  4153  06EB  1303               	movf	(_motorDC_dc),w
  4154  06EC  0843               	goto	l201
  4155  06ED  2EEE               	
  4156                           l2040:	
  4157  06EE                     	line	26
  4158                           	
  4159                           l201:	
  4160  06EE                     	return
  4161  06EE  0008               	opt stack 0
  4162                           GLOBAL	__end_of_motorDC_dutycycle
  4163                           	__end_of_motorDC_dutycycle:
  4164  06EF                     	signat	_motorDC_dutycycle,89
  4165                           	global	_motorDC_dec
  4166                           
  4167 ;; *************** function _motorDC_dec *****************
  4168 ;; Defined at:
  4169 ;;		line 34 in file "motorDC.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;		None
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;		None
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      void 
  4176 ;; Registers used:
  4177 ;;		wreg, status,2, status,0, pclath, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4183 ;;      Params:         0       0       0       0       0
  4184 ;;      Locals:         0       2       0       0       0
  4185 ;;      Temps:          0       0       0       0       0
  4186 ;;      Totals:         0       2       0       0       0
  4187 ;;Total ram usage:        2 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:    4
  4190 ;; This function calls:
  4191 ;;		_delay
  4192 ;; This function is called by:
  4193 ;;		_main
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  4197                           	line	34
  4198                           global __ptext10
  4199                           __ptext10:	;psect for function _motorDC_dec
  4200  0608                     psect	text10
  4201                           	file	"motorDC.c"
  4202                           	line	34
  4203                           	global	__size_of_motorDC_dec
  4204                           	__size_of_motorDC_dec	equ	__end_of_motorDC_dec-_motorDC_dec
  4205  001D                     	
  4206                           _motorDC_dec:	
  4207  0608                     ;incstack = 0
  4208                           	opt	stack 3
  4209                           ; Regs used in _motorDC_dec: [wreg+status,2+status,0+pclath+cstack]
  4210                           	line	36
  4211                           	
  4212                           l2028:	
  4213  0608                     ;motorDC.c: 36:     delay(150);
  4214                           	movlw	096h
  4215  0608  3096               	bcf	status, 5	;RP0=0, select bank0
  4216  0609  1283               	bcf	status, 6	;RP1=0, select bank0
  4217  060A  1303               	movwf	(delay@t)
  4218  060B  00A0               	movlw	0
  4219  060C  3000               	movwf	((delay@t))+1
  4220  060D  00A1               	fcall	_delay
  4221  060E  120A  118A  2625  120A  118A  	line	37
  4222                           	
  4223                           l2030:	
  4224  0613                     ;motorDC.c: 37:     motorDC_dc -= (motorDC_dc > 0) ? 5 : 0;
  4225                           	bcf	status, 5	;RP0=0, select bank0
  4226  0613  1283               	bcf	status, 6	;RP1=0, select bank0
  4227  0614  1303               	movf	((_motorDC_dc)),w
  4228  0615  0843               	btfss	status,2
  4229  0616  1D03               	goto	u1461
  4230  0617  2E19               	goto	u1460
  4231  0618  2E1A               u1461:
  4232  0619                     	goto	l2034
  4233  0619  2E1D               u1460:
  4234  061A                     	
  4235                           l2032:	
  4236  061A                     	clrf	(_motorDC_dec$311)
  4237  061A  01A3               	clrf	(_motorDC_dec$311+1)
  4238  061B  01A4               	goto	l2036
  4239  061C  2E22               	
  4240                           l212:	
  4241  061D                     	
  4242                           l2034:	
  4243  061D                     	movlw	05h
  4244  061D  3005               	movwf	(_motorDC_dec$311)
  4245  061E  00A3               	movlw	0
  4246  061F  3000               	movwf	((_motorDC_dec$311))+1
  4247  0620  00A4               	goto	l2036
  4248  0621  2E22               	
  4249                           l214:	
  4250  0622                     	
  4251                           l2036:	
  4252  0622                     	movf	(_motorDC_dec$311),w
  4253  0622  0823               	subwf	(_motorDC_dc),f
  4254  0623  02C3               	line	38
  4255                           	
  4256                           l215:	
  4257  0624                     	return
  4258  0624  0008               	opt stack 0
  4259                           GLOBAL	__end_of_motorDC_dec
  4260                           	__end_of_motorDC_dec:
  4261  0625                     	signat	_motorDC_dec,89
  4262                           	global	_motorDC
  4263                           
  4264 ;; *************** function _motorDC *****************
  4265 ;; Defined at:
  4266 ;;		line 16 in file "motorDC.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;  c               1    wreg     unsigned char 
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;  c               1    1[BANK0 ] unsigned char 
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  1    wreg      void 
  4273 ;; Registers used:
  4274 ;;		wreg
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4280 ;;      Params:         0       0       0       0       0
  4281 ;;      Locals:         0       1       0       0       0
  4282 ;;      Temps:          0       1       0       0       0
  4283 ;;      Totals:         0       2       0       0       0
  4284 ;;Total ram usage:        2 bytes
  4285 ;; Hardware stack levels used:    1
  4286 ;; Hardware stack levels required when called:    3
  4287 ;; This function calls:
  4288 ;;		Nothing
  4289 ;; This function is called by:
  4290 ;;		_main
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  4294                           	line	16
  4295                           global __ptext11
  4296                           __ptext11:	;psect for function _motorDC
  4297  06E2                     psect	text11
  4298                           	file	"motorDC.c"
  4299                           	line	16
  4300                           	global	__size_of_motorDC
  4301                           	__size_of_motorDC	equ	__end_of_motorDC-_motorDC
  4302  0008                     	
  4303                           _motorDC:	
  4304  06E2                     ;incstack = 0
  4305                           	opt	stack 4
  4306                           ; Regs used in _motorDC: [wreg]
  4307                           ;motorDC@c stored from wreg
  4308                           	bcf	status, 5	;RP0=0, select bank0
  4309  06E2  1283               	bcf	status, 6	;RP1=0, select bank0
  4310  06E3  1303               	movwf	(motorDC@c)
  4311  06E4  00A1               	line	20
  4312                           	
  4313                           l1978:	
  4314  06E5                     ;motorDC.c: 16: void motorDC( unsigned char c );motorDC.c: 17: {;motorDC.c: 20:     moto
                                 rDC_dc = c;
  4315                           	movf	(motorDC@c),w
  4316  06E5  0821               	movwf	(??_motorDC+0)+0
  4317  06E6  00A0               	movf	(??_motorDC+0)+0,w
  4318  06E7  0820               	movwf	(_motorDC_dc)
  4319  06E8  00C3               	line	21
  4320                           	
  4321                           l198:	
  4322  06E9                     	return
  4323  06E9  0008               	opt stack 0
  4324                           GLOBAL	__end_of_motorDC
  4325                           	__end_of_motorDC:
  4326  06EA                     	signat	_motorDC,4217
  4327                           	global	_lcd_print
  4328                           
  4329 ;; *************** function _lcd_print *****************
  4330 ;; Defined at:
  4331 ;;		line 179 in file "lcd.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  lin             1    wreg     unsigned char 
  4334 ;;  col             1    6[BANK0 ] unsigned char 
  4335 ;;  str             1    7[BANK0 ] PTR const unsigned char 
  4336 ;;		 -> STR_6(3), STR_5(3), STR_4(17), STR_3(17), 
  4337 ;;		 -> STR_2(17), STR_1(17), 
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;  lin             1   10[BANK0 ] unsigned char 
  4340 ;;  pos             1    9[BANK0 ] unsigned char 
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      void 
  4343 ;; Registers used:
  4344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4350 ;;      Params:         0       2       0       0       0
  4351 ;;      Locals:         0       2       0       0       0
  4352 ;;      Temps:          0       1       0       0       0
  4353 ;;      Totals:         0       5       0       0       0
  4354 ;;Total ram usage:        5 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    5
  4357 ;; This function calls:
  4358 ;;		_lcd_dataReg
  4359 ;;		_lcd_lincol
  4360 ;; This function is called by:
  4361 ;;		_main
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  4365                           	file	"lcd.c"
  4366                           	line	179
  4367                           global __ptext12
  4368                           __ptext12:	;psect for function _lcd_print
  4369  0546                     psect	text12
  4370                           	file	"lcd.c"
  4371                           	line	179
  4372                           	global	__size_of_lcd_print
  4373                           	__size_of_lcd_print	equ	__end_of_lcd_print-_lcd_print
  4374  003B                     	
  4375                           _lcd_print:	
  4376  0546                     ;incstack = 0
  4377                           	opt	stack 2
  4378                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4379                           ;lcd_print@lin stored from wreg
  4380                           	bcf	status, 5	;RP0=0, select bank0
  4381  0546  1283               	bcf	status, 6	;RP1=0, select bank0
  4382  0547  1303               	movwf	(lcd_print@lin)
  4383  0548  00AA               	line	181
  4384                           	
  4385                           l1918:	
  4386  0549                     ;lcd.c: 179: void lcd_print( unsigned char lin, unsigned char col, const char * str );lc
                                 d.c: 180: {;lcd.c: 181:     char pos = col;
  4387                           	movf	(lcd_print@col),w
  4388  0549  0826               	movwf	(??_lcd_print+0)+0
  4389  054A  00A8               	movf	(??_lcd_print+0)+0,w
  4390  054B  0828               	movwf	(lcd_print@pos)
  4391  054C  00A9               	line	182
  4392                           	
  4393                           l1920:	
  4394  054D                     ;lcd.c: 182:     lcd_lincol( lin, col );
  4395                           	movf	(lcd_print@col),w
  4396  054D  0826               	movwf	(??_lcd_print+0)+0
  4397  054E  00A8               	movf	(??_lcd_print+0)+0,w
  4398  054F  0828               	movwf	(lcd_lincol@col)
  4399  0550  00A3               	movf	(lcd_print@lin),w
  4400  0551  082A               	fcall	_lcd_lincol
  4401  0552  120A  118A  26A0  120A  118A  	line	184
  4402                           ;lcd.c: 184:     while( *str )
  4403                           	goto	l1928
  4404  0557  2D71               	
  4405                           l93:	
  4406  0558                     	line	186
  4407                           	
  4408                           l1922:	
  4409  0558                     ;lcd.c: 185:     {;lcd.c: 186:         lcd_dataReg( *str );
  4410                           	bcf	status, 5	;RP0=0, select bank0
  4411  0558  1283               	bcf	status, 6	;RP1=0, select bank0
  4412  0559  1303               	movf	(lcd_print@str),w
  4413  055A  0827               	movwf	fsr0
  4414  055B  0084               	fcall	stringdir
  4415  055C  120A  118A  2460  120A  118A  	fcall	_lcd_dataReg
  4416  0561  120A  118A  25B6  120A  118A  	line	187
  4417                           	
  4418                           l1924:	
  4419  0566                     ;lcd.c: 187:         ++str;
  4420                           	movlw	low(01h)
  4421  0566  3001               	bcf	status, 5	;RP0=0, select bank0
  4422  0567  1283               	bcf	status, 6	;RP1=0, select bank0
  4423  0568  1303               	movwf	(??_lcd_print+0)+0
  4424  0569  00A8               	movf	(??_lcd_print+0)+0,w
  4425  056A  0828               	addwf	(lcd_print@str),f
  4426  056B  07A7               	line	188
  4427                           	
  4428                           l1926:	
  4429  056C                     ;lcd.c: 188:         ++pos;
  4430                           	movlw	low(01h)
  4431  056C  3001               	movwf	(??_lcd_print+0)+0
  4432  056D  00A8               	movf	(??_lcd_print+0)+0,w
  4433  056E  0828               	addwf	(lcd_print@pos),f
  4434  056F  07A9               	goto	l1928
  4435  0570  2D71               	line	189
  4436                           ;lcd.c: 189:     }
  4437                           	
  4438                           l92:	
  4439  0571                     	line	184
  4440                           	
  4441                           l1928:	
  4442  0571                     ;lcd.c: 184:     while( *str )
  4443                           	bcf	status, 5	;RP0=0, select bank0
  4444  0571  1283               	bcf	status, 6	;RP1=0, select bank0
  4445  0572  1303               	movf	(lcd_print@str),w
  4446  0573  0827               	movwf	fsr0
  4447  0574  0084               	fcall	stringdir
  4448  0575  120A  118A  2460  120A  118A  	xorlw	0
  4449  057A  3A00               	skipz
  4450  057B  1D03               	goto	u1241
  4451  057C  2D7E               	goto	u1240
  4452  057D  2D7F               u1241:
  4453  057E                     	goto	l1922
  4454  057E  2D58               u1240:
  4455  057F                     	goto	l95
  4456  057F  2D80               	
  4457                           l94:	
  4458  0580                     	line	190
  4459                           	
  4460                           l95:	
  4461  0580                     	return
  4462  0580  0008               	opt stack 0
  4463                           GLOBAL	__end_of_lcd_print
  4464                           	__end_of_lcd_print:
  4465  0581                     	signat	_lcd_print,12409
  4466                           	global	_lcd_num
  4467                           
  4468 ;; *************** function _lcd_num *****************
  4469 ;; Defined at:
  4470 ;;		line 201 in file "lcd.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;  lin             1    wreg     unsigned char 
  4473 ;;  col             1    9[BANK0 ] unsigned char 
  4474 ;;  num             2   10[BANK0 ] int 
  4475 ;;  tam             1   12[BANK0 ] unsigned char 
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;  lin             1   16[BANK0 ] unsigned char 
  4478 ;;  div             2   19[BANK0 ] int 
  4479 ;;  sinal           1   18[BANK0 ] unsigned char 
  4480 ;;  size            1   17[BANK0 ] unsigned char 
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4490 ;;      Params:         0       4       0       0       0
  4491 ;;      Locals:         0       5       0       0       0
  4492 ;;      Temps:          0       3       0       0       0
  4493 ;;      Totals:         0      12       0       0       0
  4494 ;;Total ram usage:       12 bytes
  4495 ;; Hardware stack levels used:    1
  4496 ;; Hardware stack levels required when called:    5
  4497 ;; This function calls:
  4498 ;;		___awdiv
  4499 ;;		___awmod
  4500 ;;		_lcd_dataReg
  4501 ;;		_lcd_lincol
  4502 ;; This function is called by:
  4503 ;;		_main
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4507                           	line	201
  4508                           global __ptext13
  4509                           __ptext13:	;psect for function _lcd_num
  4510  017A                     psect	text13
  4511                           	file	"lcd.c"
  4512                           	line	201
  4513                           	global	__size_of_lcd_num
  4514                           	__size_of_lcd_num	equ	__end_of_lcd_num-_lcd_num
  4515  00F0                     	
  4516                           _lcd_num:	
  4517  017A                     ;incstack = 0
  4518                           	opt	stack 2
  4519                           ; Regs used in _lcd_num: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4520                           ;lcd_num@lin stored from wreg
  4521                           	bcf	status, 5	;RP0=0, select bank0
  4522  017A  1283               	bcf	status, 6	;RP1=0, select bank0
  4523  017B  1303               	movwf	(lcd_num@lin)
  4524  017C  00B0               	line	208
  4525                           	
  4526                           l1930:	
  4527  017D                     ;lcd.c: 201: void lcd_num( unsigned char lin, unsigned char col,;lcd.c: 202:            
                                          int num, unsigned char tam );lcd.c: 203: {;lcd.c: 204:     int div;;lcd.c: 205:
                                      unsigned char size;;lcd.c: 206:     char sinal;;lcd.c: 208:     sinal = num < 0;
  4528                           	btfsc	(lcd_num@num+1),7
  4529  017D  1BAB               	goto	u1251
  4530  017E  2980               	goto	u1250
  4531  017F  2982               u1251:
  4532  0180                     	movlw	1
  4533  0180  3001               	goto	u1260
  4534  0181  2983               u1250:
  4535  0182                     	movlw	0
  4536  0182  3000               u1260:
  4537  0183                     	movwf	(??_lcd_num+0)+0
  4538  0183  00AD               	movf	(??_lcd_num+0)+0,w
  4539  0184  082D               	movwf	(lcd_num@sinal)
  4540  0185  00B2               	line	209
  4541                           	
  4542                           l1932:	
  4543  0186                     ;lcd.c: 209:     if( sinal )
  4544                           	movf	((lcd_num@sinal)),w
  4545  0186  0832               	btfsc	status,2
  4546  0187  1903               	goto	u1271
  4547  0188  298A               	goto	u1270
  4548  0189  298B               u1271:
  4549  018A                     	goto	l1936
  4550  018A  2991               u1270:
  4551  018B                     	line	210
  4552                           	
  4553                           l1934:	
  4554  018B                     ;lcd.c: 210:         num = (~num) + 1;
  4555                           	comf	(lcd_num@num),f
  4556  018B  09AA               	comf	(lcd_num@num+1),f
  4557  018C  09AB               	incf	(lcd_num@num),f
  4558  018D  0AAA               	skipnz
  4559  018E  1903               	incf	(lcd_num@num+1),f
  4560  018F  0AAB               	goto	l1936
  4561  0190  2991               	
  4562                           l98:	
  4563  0191                     	line	212
  4564                           	
  4565                           l1936:	
  4566  0191                     ;lcd.c: 212:     lcd_lincol(lin, col);
  4567                           	movf	(lcd_num@col),w
  4568  0191  0829               	movwf	(??_lcd_num+0)+0
  4569  0192  00AD               	movf	(??_lcd_num+0)+0,w
  4570  0193  082D               	movwf	(lcd_lincol@col)
  4571  0194  00A3               	movf	(lcd_num@lin),w
  4572  0195  0830               	fcall	_lcd_lincol
  4573  0196  120A  118A  26A0  120A  118A  	line	214
  4574                           	
  4575                           l1938:	
  4576  019B                     ;lcd.c: 214:     div=10000;
  4577                           	movlw	010h
  4578  019B  3010               	bcf	status, 5	;RP0=0, select bank0
  4579  019C  1283               	bcf	status, 6	;RP1=0, select bank0
  4580  019D  1303               	movwf	(lcd_num@div)
  4581  019E  00B3               	movlw	027h
  4582  019F  3027               	movwf	((lcd_num@div))+1
  4583  01A0  00B4               	line	215
  4584                           	
  4585                           l1940:	
  4586  01A1                     ;lcd.c: 215:     size = 5;
  4587                           	movlw	low(05h)
  4588  01A1  3005               	movwf	(??_lcd_num+0)+0
  4589  01A2  00AD               	movf	(??_lcd_num+0)+0,w
  4590  01A3  082D               	movwf	(lcd_num@size)
  4591  01A4  00B1               	line	216
  4592                           ;lcd.c: 216:     while( div >= 1 )
  4593                           	goto	l1948
  4594  01A5  29D5               	
  4595                           l100:	
  4596  01A6                     	line	218
  4597                           	
  4598                           l1942:	
  4599  01A6                     ;lcd.c: 217:     {;lcd.c: 218:         if( num/div == 0 )
  4600                           	bcf	status, 5	;RP0=0, select bank0
  4601  01A6  1283               	bcf	status, 6	;RP1=0, select bank0
  4602  01A7  1303               	movf	(lcd_num@div+1),w
  4603  01A8  0834               	movwf	(___awdiv@divisor+1)
  4604  01A9  00A1               	movf	(lcd_num@div),w
  4605  01AA  0833               	movwf	(___awdiv@divisor)
  4606  01AB  00A0               	movf	(lcd_num@num+1),w
  4607  01AC  082B               	movwf	(___awdiv@dividend+1)
  4608  01AD  00A3               	movf	(lcd_num@num),w
  4609  01AE  082A               	movwf	(___awdiv@dividend)
  4610  01AF  00A2               	fcall	___awdiv
  4611  01B0  120A  118A  2388  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  4612  01B5  1283               	bcf	status, 6	;RP1=0, select bank0
  4613  01B6  1303               	movf	((0+(?___awdiv))),w
  4614  01B7  0820               iorwf	((1+(?___awdiv))),w
  4615  01B8  0421               	btfss	status,2
  4616  01B9  1D03               	goto	u1281
  4617  01BA  29BC               	goto	u1280
  4618  01BB  29BD               u1281:
  4619  01BC                     	goto	l1954
  4620  01BC  29EF               u1280:
  4621  01BD                     	line	219
  4622                           	
  4623                           l1944:	
  4624  01BD                     ;lcd.c: 219:             --size;
  4625                           	movlw	01h
  4626  01BD  3001               	subwf	(lcd_num@size),f
  4627  01BE  02B1               	goto	l1946
  4628  01BF  29C1               	line	220
  4629                           ;lcd.c: 220:         else
  4630                           	
  4631                           l101:	
  4632  01C0                     	line	221
  4633                           ;lcd.c: 221:             break;
  4634                           	goto	l1954
  4635  01C0  29EF               	
  4636                           l102:	
  4637  01C1                     	line	222
  4638                           	
  4639                           l1946:	
  4640  01C1                     ;lcd.c: 222:         div/=10;
  4641                           	movlw	0Ah
  4642  01C1  300A               	movwf	(___awdiv@divisor)
  4643  01C2  00A0               	movlw	0
  4644  01C3  3000               	movwf	((___awdiv@divisor))+1
  4645  01C4  00A1               	movf	(lcd_num@div+1),w
  4646  01C5  0834               	movwf	(___awdiv@dividend+1)
  4647  01C6  00A3               	movf	(lcd_num@div),w
  4648  01C7  0833               	movwf	(___awdiv@dividend)
  4649  01C8  00A2               	fcall	___awdiv
  4650  01C9  120A  118A  2388  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  4651  01CE  1283               	bcf	status, 6	;RP1=0, select bank0
  4652  01CF  1303               	movf	(1+(?___awdiv)),w
  4653  01D0  0821               	movwf	(lcd_num@div+1)
  4654  01D1  00B4               	movf	(0+(?___awdiv)),w
  4655  01D2  0820               	movwf	(lcd_num@div)
  4656  01D3  00B3               	goto	l1948
  4657  01D4  29D5               	line	223
  4658                           ;lcd.c: 223:     }
  4659                           	
  4660                           l99:	
  4661  01D5                     	line	216
  4662                           	
  4663                           l1948:	
  4664  01D5                     ;lcd.c: 216:     while( div >= 1 )
  4665                           	movf	(lcd_num@div+1),w
  4666  01D5  0834               	xorlw	80h
  4667  01D6  3A80               	movwf	btemp+1
  4668  01D7  00FF               	movlw	(0)^80h
  4669  01D8  3080               	subwf	btemp+1,w
  4670  01D9  027F               	skipz
  4671  01DA  1D03               	goto	u1295
  4672  01DB  29DE               	movlw	01h
  4673  01DC  3001               	subwf	(lcd_num@div),w
  4674  01DD  0233               u1295:
  4675  01DE                     
  4676                           	skipnc
  4677  01DE  1803               	goto	u1291
  4678  01DF  29E1               	goto	u1290
  4679  01E0  29E2               u1291:
  4680  01E1                     	goto	l1942
  4681  01E1  29A6               u1290:
  4682  01E2                     	goto	l1954
  4683  01E2  29EF               	
  4684                           l103:	
  4685  01E3                     	line	225
  4686                           ;lcd.c: 225:     while( tam > (size+sinal) && tam > 1 )
  4687                           	goto	l1954
  4688  01E3  29EF               	
  4689                           l105:	
  4690  01E4                     	line	227
  4691                           	
  4692                           l1950:	
  4693  01E4                     ;lcd.c: 226:     {;lcd.c: 227:         lcd_dataReg(' ');
  4694                           	movlw	low(020h)
  4695  01E4  3020               	fcall	_lcd_dataReg
  4696  01E5  120A  118A  25B6  120A  118A  	line	228
  4697                           	
  4698                           l1952:	
  4699  01EA                     ;lcd.c: 228:         --tam;
  4700                           	movlw	01h
  4701  01EA  3001               	bcf	status, 5	;RP0=0, select bank0
  4702  01EB  1283               	bcf	status, 6	;RP1=0, select bank0
  4703  01EC  1303               	subwf	(lcd_num@tam),f
  4704  01ED  02AC               	goto	l1954
  4705  01EE  29EF               	line	229
  4706                           ;lcd.c: 229:     }
  4707                           	
  4708                           l104:	
  4709  01EF                     	line	225
  4710                           	
  4711                           l1954:	
  4712  01EF                     ;lcd.c: 225:     while( tam > (size+sinal) && tam > 1 )
  4713                           	bcf	status, 5	;RP0=0, select bank0
  4714  01EF  1283               	bcf	status, 6	;RP1=0, select bank0
  4715  01F0  1303               	movf	(lcd_num@size),w
  4716  01F1  0831               	addwf	(lcd_num@sinal),w
  4717  01F2  0732               	movwf	(??_lcd_num+0)+0
  4718  01F3  00AD               	clrf	(??_lcd_num+0)+0+1
  4719  01F4  01AE               	rlf	1+(??_lcd_num+0)+0,f
  4720  01F5  0DAE               	
  4721                           	movf	1+(??_lcd_num+0)+0,w
  4722  01F6  082E               	xorlw	80h
  4723  01F7  3A80               	movwf	(??_lcd_num+2)+0
  4724  01F8  00AF               	movlw	80h
  4725  01F9  3080               	subwf	(??_lcd_num+2)+0,w
  4726  01FA  022F               	skipz
  4727  01FB  1D03               	goto	u1305
  4728  01FC  29FF               	movf	(lcd_num@tam),w
  4729  01FD  082C               	subwf	0+(??_lcd_num+0)+0,w
  4730  01FE  022D               u1305:
  4731  01FF                     
  4732                           	skipnc
  4733  01FF  1803               	goto	u1301
  4734  0200  2A02               	goto	u1300
  4735  0201  2A03               u1301:
  4736  0202                     	goto	l1958
  4737  0202  2A0D               u1300:
  4738  0203                     	
  4739                           l1956:	
  4740  0203                     	movlw	low(02h)
  4741  0203  3002               	bcf	status, 5	;RP0=0, select bank0
  4742  0204  1283               	bcf	status, 6	;RP1=0, select bank0
  4743  0205  1303               	subwf	(lcd_num@tam),w
  4744  0206  022C               	skipnc
  4745  0207  1803               	goto	u1311
  4746  0208  2A0A               	goto	u1310
  4747  0209  2A0B               u1311:
  4748  020A                     	goto	l1950
  4749  020A  29E4               u1310:
  4750  020B                     	goto	l1958
  4751  020B  2A0D               	
  4752                           l107:	
  4753  020C                     	goto	l1958
  4754  020C  2A0D               	
  4755                           l108:	
  4756  020D                     	line	231
  4757                           	
  4758                           l1958:	
  4759  020D                     ;lcd.c: 231:     if( sinal )
  4760                           	bcf	status, 5	;RP0=0, select bank0
  4761  020D  1283               	bcf	status, 6	;RP1=0, select bank0
  4762  020E  1303               	movf	((lcd_num@sinal)),w
  4763  020F  0832               	btfsc	status,2
  4764  0210  1903               	goto	u1321
  4765  0211  2A13               	goto	u1320
  4766  0212  2A14               u1321:
  4767  0213                     	goto	l110
  4768  0213  2A1B               u1320:
  4769  0214                     	line	232
  4770                           	
  4771                           l1960:	
  4772  0214                     ;lcd.c: 232:         lcd_dataReg('-');
  4773                           	movlw	low(02Dh)
  4774  0214  302D               	fcall	_lcd_dataReg
  4775  0215  120A  118A  25B6  120A  118A  	goto	l110
  4776  021A  2A1B               	
  4777                           l109:	
  4778  021B                     	line	234
  4779                           ;lcd.c: 234:     do
  4780                           	
  4781                           l110:	
  4782  021B                     	line	236
  4783                           ;lcd.c: 235:     {;lcd.c: 236:         lcd_dataReg( (unsigned char)(num / div) + '0' );

  4784                           	bcf	status, 5	;RP0=0, select bank0
  4785  021B  1283               	bcf	status, 6	;RP1=0, select bank0
  4786  021C  1303               	movf	(lcd_num@div+1),w
  4787  021D  0834               	movwf	(___awdiv@divisor+1)
  4788  021E  00A1               	movf	(lcd_num@div),w
  4789  021F  0833               	movwf	(___awdiv@divisor)
  4790  0220  00A0               	movf	(lcd_num@num+1),w
  4791  0221  082B               	movwf	(___awdiv@dividend+1)
  4792  0222  00A3               	movf	(lcd_num@num),w
  4793  0223  082A               	movwf	(___awdiv@dividend)
  4794  0224  00A2               	fcall	___awdiv
  4795  0225  120A  118A  2388  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  4796  022A  1283               	bcf	status, 6	;RP1=0, select bank0
  4797  022B  1303               	movf	(0+(?___awdiv)),w
  4798  022C  0820               	addlw	030h
  4799  022D  3E30               	fcall	_lcd_dataReg
  4800  022E  120A  118A  25B6  120A  118A  	line	237
  4801                           ;lcd.c: 237:         num = num % div;
  4802                           	bcf	status, 5	;RP0=0, select bank0
  4803  0233  1283               	bcf	status, 6	;RP1=0, select bank0
  4804  0234  1303               	movf	(lcd_num@div+1),w
  4805  0235  0834               	movwf	(___awmod@divisor+1)
  4806  0236  00A1               	movf	(lcd_num@div),w
  4807  0237  0833               	movwf	(___awmod@divisor)
  4808  0238  00A0               	movf	(lcd_num@num+1),w
  4809  0239  082B               	movwf	(___awmod@dividend+1)
  4810  023A  00A3               	movf	(lcd_num@num),w
  4811  023B  082A               	movwf	(___awmod@dividend)
  4812  023C  00A2               	fcall	___awmod
  4813  023D  120A  118A  23FB  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  4814  0242  1283               	bcf	status, 6	;RP1=0, select bank0
  4815  0243  1303               	movf	(1+(?___awmod)),w
  4816  0244  0821               	movwf	(lcd_num@num+1)
  4817  0245  00AB               	movf	(0+(?___awmod)),w
  4818  0246  0820               	movwf	(lcd_num@num)
  4819  0247  00AA               	line	238
  4820                           ;lcd.c: 238:         div/=10;
  4821                           	movlw	0Ah
  4822  0248  300A               	movwf	(___awdiv@divisor)
  4823  0249  00A0               	movlw	0
  4824  024A  3000               	movwf	((___awdiv@divisor))+1
  4825  024B  00A1               	movf	(lcd_num@div+1),w
  4826  024C  0834               	movwf	(___awdiv@dividend+1)
  4827  024D  00A3               	movf	(lcd_num@div),w
  4828  024E  0833               	movwf	(___awdiv@dividend)
  4829  024F  00A2               	fcall	___awdiv
  4830  0250  120A  118A  2388  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  4831  0255  1283               	bcf	status, 6	;RP1=0, select bank0
  4832  0256  1303               	movf	(1+(?___awdiv)),w
  4833  0257  0821               	movwf	(lcd_num@div+1)
  4834  0258  00B4               	movf	(0+(?___awdiv)),w
  4835  0259  0820               	movwf	(lcd_num@div)
  4836  025A  00B3               	line	239
  4837                           	
  4838                           l1962:	
  4839  025B                     ;lcd.c: 239:     }
  4840                           	movf	(lcd_num@div+1),w
  4841  025B  0834               	xorlw	80h
  4842  025C  3A80               	movwf	btemp+1
  4843  025D  00FF               	movlw	(0)^80h
  4844  025E  3080               	subwf	btemp+1,w
  4845  025F  027F               	skipz
  4846  0260  1D03               	goto	u1335
  4847  0261  2A64               	movlw	01h
  4848  0262  3001               	subwf	(lcd_num@div),w
  4849  0263  0233               u1335:
  4850  0264                     
  4851                           	skipnc
  4852  0264  1803               	goto	u1331
  4853  0265  2A67               	goto	u1330
  4854  0266  2A68               u1331:
  4855  0267                     	goto	l110
  4856  0267  2A1B               u1330:
  4857  0268                     	goto	l112
  4858  0268  2A69               	
  4859                           l111:	
  4860  0269                     	line	241
  4861                           	
  4862                           l112:	
  4863  0269                     	return
  4864  0269  0008               	opt stack 0
  4865                           GLOBAL	__end_of_lcd_num
  4866                           	__end_of_lcd_num:
  4867  026A                     	signat	_lcd_num,16505
  4868                           	global	_lcd_lincol
  4869                           
  4870 ;; *************** function _lcd_lincol *****************
  4871 ;; Defined at:
  4872 ;;		line 120 in file "lcd.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;  lin             1    wreg     unsigned char 
  4875 ;;  col             1    3[BANK0 ] unsigned char 
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;  lin             1    5[BANK0 ] unsigned char 
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  1    wreg      void 
  4880 ;; Registers used:
  4881 ;;		wreg, status,2, status,0, pclath, cstack
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4887 ;;      Params:         0       1       0       0       0
  4888 ;;      Locals:         0       1       0       0       0
  4889 ;;      Temps:          0       1       0       0       0
  4890 ;;      Totals:         0       3       0       0       0
  4891 ;;Total ram usage:        3 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; Hardware stack levels required when called:    4
  4894 ;; This function calls:
  4895 ;;		_lcd_instReg
  4896 ;; This function is called by:
  4897 ;;		_lcd_print
  4898 ;;		_lcd_num
  4899 ;; This function uses a non-reentrant model
  4900 ;;
  4901                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4902                           	line	120
  4903                           global __ptext14
  4904                           __ptext14:	;psect for function _lcd_lincol
  4905  06A0                     psect	text14
  4906                           	file	"lcd.c"
  4907                           	line	120
  4908                           	global	__size_of_lcd_lincol
  4909                           	__size_of_lcd_lincol	equ	__end_of_lcd_lincol-_lcd_lincol
  4910  0015                     	
  4911                           _lcd_lincol:	
  4912  06A0                     ;incstack = 0
  4913                           	opt	stack 2
  4914                           ; Regs used in _lcd_lincol: [wreg+status,2+status,0+pclath+cstack]
  4915                           ;lcd_lincol@lin stored from wreg
  4916                           	bcf	status, 5	;RP0=0, select bank0
  4917  06A0  1283               	bcf	status, 6	;RP1=0, select bank0
  4918  06A1  1303               	movwf	(lcd_lincol@lin)
  4919  06A2  00A5               	line	122
  4920                           	
  4921                           l1772:	
  4922  06A3                     ;lcd.c: 120: void lcd_lincol( unsigned char lin, unsigned char col);lcd.c: 121: {;lcd.c:
                                  122:     lcd_instReg( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  4923                           	movf	(lcd_lincol@lin),w
  4924  06A3  0825               	movwf	(??_lcd_lincol+0)+0
  4925  06A4  00A4               	movlw	06h
  4926  06A5  3006               u985:
  4927  06A6                     	clrc
  4928  06A6  1003               	rlf	(??_lcd_lincol+0)+0,f
  4929  06A7  0DA4               	addlw	-1
  4930  06A8  3EFF               	skipz
  4931  06A9  1D03               	goto	u985
  4932  06AA  2EA6               	movf	(lcd_lincol@col),w
  4933  06AB  0823               	addwf	0+(??_lcd_lincol+0)+0,w
  4934  06AC  0724               	andlw	07Fh
  4935  06AD  397F               	addlw	080h
  4936  06AE  3E80               	fcall	_lcd_instReg
  4937  06AF  120A  118A  2301  120A  118A  	line	123
  4938                           	
  4939                           l83:	
  4940  06B4                     	return
  4941  06B4  0008               	opt stack 0
  4942                           GLOBAL	__end_of_lcd_lincol
  4943                           	__end_of_lcd_lincol:
  4944  06B5                     	signat	_lcd_lincol,8313
  4945                           	global	_lcd_dataReg
  4946                           
  4947 ;; *************** function _lcd_dataReg *****************
  4948 ;; Defined at:
  4949 ;;		line 102 in file "lcd.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;  d               1    wreg     unsigned char 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  d               1    2[BANK0 ] unsigned char 
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      void 
  4956 ;; Registers used:
  4957 ;;		wreg, status,2, status,0
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4963 ;;      Params:         0       0       0       0       0
  4964 ;;      Locals:         0       1       0       0       0
  4965 ;;      Temps:          0       2       0       0       0
  4966 ;;      Totals:         0       3       0       0       0
  4967 ;;Total ram usage:        3 bytes
  4968 ;; Hardware stack levels used:    1
  4969 ;; Hardware stack levels required when called:    3
  4970 ;; This function calls:
  4971 ;;		Nothing
  4972 ;; This function is called by:
  4973 ;;		_lcd_print
  4974 ;;		_lcd_num
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  4978                           	line	102
  4979                           global __ptext15
  4980                           __ptext15:	;psect for function _lcd_dataReg
  4981  05B6                     psect	text15
  4982                           	file	"lcd.c"
  4983                           	line	102
  4984                           	global	__size_of_lcd_dataReg
  4985                           	__size_of_lcd_dataReg	equ	__end_of_lcd_dataReg-_lcd_dataReg
  4986  0032                     	
  4987                           _lcd_dataReg:	
  4988  05B6                     ;incstack = 0
  4989                           	opt	stack 3
  4990                           ; Regs used in _lcd_dataReg: [wreg+status,2+status,0]
  4991                           ;lcd_dataReg@d stored from wreg
  4992                           	bcf	status, 5	;RP0=0, select bank0
  4993  05B6  1283               	bcf	status, 6	;RP1=0, select bank0
  4994  05B7  1303               	movwf	(lcd_dataReg@d)
  4995  05B8  00A2               	line	104
  4996                           	
  4997                           l1754:	
  4998  05B9                     ;lcd.c: 102: void lcd_dataReg( unsigned char d );lcd.c: 103: {;lcd.c: 104:     PORTDbits
                                 .RD4 = 1;
  4999                           	bsf	(8),4	;volatile
  5000  05B9  1608               	line	105
  5001                           	
  5002                           l1756:	
  5003  05BA                     ;lcd.c: 105:     PORTD = ((PORTD & 0xF0)|(d >> 4&0x0F));
  5004                           	movf	(lcd_dataReg@d),w
  5005  05BA  0822               	movwf	(??_lcd_dataReg+0)+0
  5006  05BB  00A0               	movlw	04h
  5007  05BC  3004               u975:
  5008  05BD                     	clrc
  5009  05BD  1003               	rrf	(??_lcd_dataReg+0)+0,f
  5010  05BE  0CA0               	addlw	-1
  5011  05BF  3EFF               	skipz
  5012  05C0  1D03               	goto	u975
  5013  05C1  2DBD               	movlw	low(0Fh)
  5014  05C2  300F               	andwf	0+(??_lcd_dataReg+0)+0,w
  5015  05C3  0520               	movwf	(??_lcd_dataReg+1)+0
  5016  05C4  00A1               	movf	(8),w	;volatile
  5017  05C5  0808               	andlw	0F0h
  5018  05C6  39F0               	iorwf	0+(??_lcd_dataReg+1)+0,w
  5019  05C7  0421               	movwf	(8)	;volatile
  5020  05C8  0088               	line	106
  5021                           	
  5022                           l1758:	
  5023  05C9                     ;lcd.c: 106:     PORTDbits.RD5 = 0;
  5024                           	bcf	(8),5	;volatile
  5025  05C9  1288               	line	107
  5026                           	
  5027                           l1760:	
  5028  05CA                     ;lcd.c: 107:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5029                           	opt asmopt_push
  5030                           opt asmopt_off
  5031                           	movlw	12
  5032  05CA  300C               	bcf	status, 5	;RP0=0, select bank0
  5033  05CB  1283               	bcf	status, 6	;RP1=0, select bank0
  5034  05CC  1303               movwf	((??_lcd_dataReg+0)+0),f
  5035  05CD  00A0               	u1697:
  5036  05CE                     decfsz	(??_lcd_dataReg+0)+0,f
  5037  05CE  0BA0               	goto	u1697
  5038  05CF  2DCE               	nop
  5039  05D0  0000               opt asmopt_pop
  5040                           
  5041                           	line	108
  5042                           	
  5043                           l1762:	
  5044  05D1                     ;lcd.c: 108:     PORTDbits.RD5 = 1;
  5045                           	bcf	status, 5	;RP0=0, select bank0
  5046  05D1  1283               	bcf	status, 6	;RP1=0, select bank0
  5047  05D2  1303               	bsf	(8),5	;volatile
  5048  05D3  1688               	line	110
  5049                           	
  5050                           l1764:	
  5051  05D4                     ;lcd.c: 110:     PORTDbits.RD4 = 1;
  5052                           	bsf	(8),4	;volatile
  5053  05D4  1608               	line	111
  5054                           	
  5055                           l1766:	
  5056  05D5                     ;lcd.c: 111:     PORTD = ((PORTD & 0xF0)|(d&0x0F));
  5057                           	movlw	low(0Fh)
  5058  05D5  300F               	andwf	(lcd_dataReg@d),w
  5059  05D6  0522               	movwf	(??_lcd_dataReg+0)+0
  5060  05D7  00A0               	movf	(8),w	;volatile
  5061  05D8  0808               	andlw	0F0h
  5062  05D9  39F0               	iorwf	0+(??_lcd_dataReg+0)+0,w
  5063  05DA  0420               	movwf	(8)	;volatile
  5064  05DB  0088               	line	112
  5065                           	
  5066                           l1768:	
  5067  05DC                     ;lcd.c: 112:     PORTDbits.RD5 = 0;
  5068                           	bcf	(8),5	;volatile
  5069  05DC  1288               	line	113
  5070                           ;lcd.c: 113:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5071                           	opt asmopt_push
  5072                           opt asmopt_off
  5073                           	movlw	12
  5074  05DD  300C               	bcf	status, 5	;RP0=0, select bank0
  5075  05DE  1283               	bcf	status, 6	;RP1=0, select bank0
  5076  05DF  1303               movwf	((??_lcd_dataReg+0)+0),f
  5077  05E0  00A0               	u1707:
  5078  05E1                     decfsz	(??_lcd_dataReg+0)+0,f
  5079  05E1  0BA0               	goto	u1707
  5080  05E2  2DE1               	nop
  5081  05E3  0000               opt asmopt_pop
  5082                           
  5083                           	line	114
  5084                           	
  5085                           l1770:	
  5086  05E4                     ;lcd.c: 114:     PORTDbits.RD5 = 1;
  5087                           	bcf	status, 5	;RP0=0, select bank0
  5088  05E4  1283               	bcf	status, 6	;RP1=0, select bank0
  5089  05E5  1303               	bsf	(8),5	;volatile
  5090  05E6  1688               	line	115
  5091                           	
  5092                           l80:	
  5093  05E7                     	return
  5094  05E7  0008               	opt stack 0
  5095                           GLOBAL	__end_of_lcd_dataReg
  5096                           	__end_of_lcd_dataReg:
  5097  05E8                     	signat	_lcd_dataReg,4217
  5098                           	global	___awmod
  5099                           
  5100 ;; *************** function ___awmod *****************
  5101 ;; Defined at:
  5102 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  5103 ;; Parameters:    Size  Location     Type
  5104 ;;  divisor         2    0[BANK0 ] int 
  5105 ;;  dividend        2    2[BANK0 ] int 
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;  sign            1    6[BANK0 ] unsigned char 
  5108 ;;  counter         1    5[BANK0 ] unsigned char 
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  2    0[BANK0 ] int 
  5111 ;; Registers used:
  5112 ;;		wreg, status,2, status,0
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5118 ;;      Params:         0       4       0       0       0
  5119 ;;      Locals:         0       2       0       0       0
  5120 ;;      Temps:          0       1       0       0       0
  5121 ;;      Totals:         0       7       0       0       0
  5122 ;;Total ram usage:        7 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; Hardware stack levels required when called:    3
  5125 ;; This function calls:
  5126 ;;		Nothing
  5127 ;; This function is called by:
  5128 ;;		_lcd_num
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           psect	text16,local,class=CODE,delta=2,merge=1,group=1
  5132                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  5133                           	line	5
  5134                           global __ptext16
  5135                           __ptext16:	;psect for function ___awmod
  5136  03FB                     psect	text16
  5137                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  5138                           	line	5
  5139                           	global	__size_of___awmod
  5140                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  5141  0065                     	
  5142                           ___awmod:	
  5143  03FB                     ;incstack = 0
  5144                           	opt	stack 3
  5145                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5146                           	line	12
  5147                           	
  5148                           l1838:	
  5149  03FB                     	bcf	status, 5	;RP0=0, select bank0
  5150  03FB  1283               	bcf	status, 6	;RP1=0, select bank0
  5151  03FC  1303               	clrf	(___awmod@sign)
  5152  03FD  01A6               	line	13
  5153                           	
  5154                           l1840:	
  5155  03FE                     	btfss	(___awmod@dividend+1),7
  5156  03FE  1FA3               	goto	u1091
  5157  03FF  2C01               	goto	u1090
  5158  0400  2C02               u1091:
  5159  0401                     	goto	l1846
  5160  0401  2C0A               u1090:
  5161  0402                     	line	14
  5162                           	
  5163                           l1842:	
  5164  0402                     	comf	(___awmod@dividend),f
  5165  0402  09A2               	comf	(___awmod@dividend+1),f
  5166  0403  09A3               	incf	(___awmod@dividend),f
  5167  0404  0AA2               	skipnz
  5168  0405  1903               	incf	(___awmod@dividend+1),f
  5169  0406  0AA3               	line	15
  5170                           	
  5171                           l1844:	
  5172  0407                     	clrf	(___awmod@sign)
  5173  0407  01A6               	incf	(___awmod@sign),f
  5174  0408  0AA6               	goto	l1846
  5175  0409  2C0A               	line	16
  5176                           	
  5177                           l633:	
  5178  040A                     	line	17
  5179                           	
  5180                           l1846:	
  5181  040A                     	btfss	(___awmod@divisor+1),7
  5182  040A  1FA1               	goto	u1101
  5183  040B  2C0D               	goto	u1100
  5184  040C  2C0E               u1101:
  5185  040D                     	goto	l1850
  5186  040D  2C14               u1100:
  5187  040E                     	line	18
  5188                           	
  5189                           l1848:	
  5190  040E                     	comf	(___awmod@divisor),f
  5191  040E  09A0               	comf	(___awmod@divisor+1),f
  5192  040F  09A1               	incf	(___awmod@divisor),f
  5193  0410  0AA0               	skipnz
  5194  0411  1903               	incf	(___awmod@divisor+1),f
  5195  0412  0AA1               	goto	l1850
  5196  0413  2C14               	
  5197                           l634:	
  5198  0414                     	line	19
  5199                           	
  5200                           l1850:	
  5201  0414                     	movf	((___awmod@divisor)),w
  5202  0414  0820               iorwf	((___awmod@divisor+1)),w
  5203  0415  0421               	btfsc	status,2
  5204  0416  1903               	goto	u1111
  5205  0417  2C19               	goto	u1110
  5206  0418  2C1A               u1111:
  5207  0419                     	goto	l1868
  5208  0419  2C4F               u1110:
  5209  041A                     	line	20
  5210                           	
  5211                           l1852:	
  5212  041A                     	clrf	(___awmod@counter)
  5213  041A  01A5               	incf	(___awmod@counter),f
  5214  041B  0AA5               	line	21
  5215                           	goto	l1858
  5216  041C  2C29               	
  5217                           l637:	
  5218  041D                     	line	22
  5219                           	
  5220                           l1854:	
  5221  041D                     	movlw	01h
  5222  041D  3001               	
  5223                           u1125:
  5224  041E                     	clrc
  5225  041E  1003               	rlf	(___awmod@divisor),f
  5226  041F  0DA0               	rlf	(___awmod@divisor+1),f
  5227  0420  0DA1               	addlw	-1
  5228  0421  3EFF               	skipz
  5229  0422  1D03               	goto	u1125
  5230  0423  2C1E               	line	23
  5231                           	
  5232                           l1856:	
  5233  0424                     	movlw	low(01h)
  5234  0424  3001               	movwf	(??___awmod+0)+0
  5235  0425  00A4               	movf	(??___awmod+0)+0,w
  5236  0426  0824               	addwf	(___awmod@counter),f
  5237  0427  07A5               	goto	l1858
  5238  0428  2C29               	line	24
  5239                           	
  5240                           l636:	
  5241  0429                     	line	21
  5242                           	
  5243                           l1858:	
  5244  0429                     	btfss	(___awmod@divisor+1),(15)&7
  5245  0429  1FA1               	goto	u1131
  5246  042A  2C2C               	goto	u1130
  5247  042B  2C2D               u1131:
  5248  042C                     	goto	l1854
  5249  042C  2C1D               u1130:
  5250  042D                     	goto	l1860
  5251  042D  2C2F               	
  5252                           l638:	
  5253  042E                     	goto	l1860
  5254  042E  2C2F               	line	25
  5255                           	
  5256                           l639:	
  5257  042F                     	line	26
  5258                           	
  5259                           l1860:	
  5260  042F                     	movf	(___awmod@divisor+1),w
  5261  042F  0821               	subwf	(___awmod@dividend+1),w
  5262  0430  0223               	skipz
  5263  0431  1D03               	goto	u1145
  5264  0432  2C35               	movf	(___awmod@divisor),w
  5265  0433  0820               	subwf	(___awmod@dividend),w
  5266  0434  0222               u1145:
  5267  0435                     	skipc
  5268  0435  1C03               	goto	u1141
  5269  0436  2C38               	goto	u1140
  5270  0437  2C39               u1141:
  5271  0438                     	goto	l1864
  5272  0438  2C40               u1140:
  5273  0439                     	line	27
  5274                           	
  5275                           l1862:	
  5276  0439                     	movf	(___awmod@divisor),w
  5277  0439  0820               	subwf	(___awmod@dividend),f
  5278  043A  02A2               	movf	(___awmod@divisor+1),w
  5279  043B  0821               	skipc
  5280  043C  1C03               	decf	(___awmod@dividend+1),f
  5281  043D  03A3               	subwf	(___awmod@dividend+1),f
  5282  043E  02A3               	goto	l1864
  5283  043F  2C40               	
  5284                           l640:	
  5285  0440                     	line	28
  5286                           	
  5287                           l1864:	
  5288  0440                     	movlw	01h
  5289  0440  3001               	
  5290                           u1155:
  5291  0441                     	clrc
  5292  0441  1003               	rrf	(___awmod@divisor+1),f
  5293  0442  0CA1               	rrf	(___awmod@divisor),f
  5294  0443  0CA0               	addlw	-1
  5295  0444  3EFF               	skipz
  5296  0445  1D03               	goto	u1155
  5297  0446  2C41               	line	29
  5298                           	
  5299                           l1866:	
  5300  0447                     	movlw	01h
  5301  0447  3001               	subwf	(___awmod@counter),f
  5302  0448  02A5               	btfss	status,2
  5303  0449  1D03               	goto	u1161
  5304  044A  2C4C               	goto	u1160
  5305  044B  2C4D               u1161:
  5306  044C                     	goto	l1860
  5307  044C  2C2F               u1160:
  5308  044D                     	goto	l1868
  5309  044D  2C4F               	
  5310                           l641:	
  5311  044E                     	goto	l1868
  5312  044E  2C4F               	line	30
  5313                           	
  5314                           l635:	
  5315  044F                     	line	31
  5316                           	
  5317                           l1868:	
  5318  044F                     	movf	((___awmod@sign)),w
  5319  044F  0826               	btfsc	status,2
  5320  0450  1903               	goto	u1171
  5321  0451  2C53               	goto	u1170
  5322  0452  2C54               u1171:
  5323  0453                     	goto	l1872
  5324  0453  2C5A               u1170:
  5325  0454                     	line	32
  5326                           	
  5327                           l1870:	
  5328  0454                     	comf	(___awmod@dividend),f
  5329  0454  09A2               	comf	(___awmod@dividend+1),f
  5330  0455  09A3               	incf	(___awmod@dividend),f
  5331  0456  0AA2               	skipnz
  5332  0457  1903               	incf	(___awmod@dividend+1),f
  5333  0458  0AA3               	goto	l1872
  5334  0459  2C5A               	
  5335                           l642:	
  5336  045A                     	line	33
  5337                           	
  5338                           l1872:	
  5339  045A                     	movf	(___awmod@dividend+1),w
  5340  045A  0823               	movwf	(?___awmod+1)
  5341  045B  00A1               	movf	(___awmod@dividend),w
  5342  045C  0822               	movwf	(?___awmod)
  5343  045D  00A0               	goto	l643
  5344  045E  2C5F               	
  5345                           l1874:	
  5346  045F                     	line	34
  5347                           	
  5348                           l643:	
  5349  045F                     	return
  5350  045F  0008               	opt stack 0
  5351                           GLOBAL	__end_of___awmod
  5352                           	__end_of___awmod:
  5353  0460                     	signat	___awmod,8314
  5354                           	global	___awdiv
  5355                           
  5356 ;; *************** function ___awdiv *****************
  5357 ;; Defined at:
  5358 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;  divisor         2    0[BANK0 ] int 
  5361 ;;  dividend        2    2[BANK0 ] int 
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;  quotient        2    7[BANK0 ] int 
  5364 ;;  sign            1    6[BANK0 ] unsigned char 
  5365 ;;  counter         1    5[BANK0 ] unsigned char 
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  2    0[BANK0 ] int 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5375 ;;      Params:         0       4       0       0       0
  5376 ;;      Locals:         0       4       0       0       0
  5377 ;;      Temps:          0       1       0       0       0
  5378 ;;      Totals:         0       9       0       0       0
  5379 ;;Total ram usage:        9 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; Hardware stack levels required when called:    3
  5382 ;; This function calls:
  5383 ;;		Nothing
  5384 ;; This function is called by:
  5385 ;;		_lcd_num
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           psect	text17,local,class=CODE,delta=2,merge=1,group=1
  5389                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  5390                           	line	5
  5391                           global __ptext17
  5392                           __ptext17:	;psect for function ___awdiv
  5393  0388                     psect	text17
  5394                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  5395                           	line	5
  5396                           	global	__size_of___awdiv
  5397                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  5398  0073                     	
  5399                           ___awdiv:	
  5400  0388                     ;incstack = 0
  5401                           	opt	stack 3
  5402                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5403                           	line	13
  5404                           	
  5405                           l1794:	
  5406  0388                     	bcf	status, 5	;RP0=0, select bank0
  5407  0388  1283               	bcf	status, 6	;RP1=0, select bank0
  5408  0389  1303               	clrf	(___awdiv@sign)
  5409  038A  01A6               	line	14
  5410                           	
  5411                           l1796:	
  5412  038B                     	btfss	(___awdiv@divisor+1),7
  5413  038B  1FA1               	goto	u991
  5414  038C  2B8E               	goto	u990
  5415  038D  2B8F               u991:
  5416  038E                     	goto	l1802
  5417  038E  2B97               u990:
  5418  038F                     	line	15
  5419                           	
  5420                           l1798:	
  5421  038F                     	comf	(___awdiv@divisor),f
  5422  038F  09A0               	comf	(___awdiv@divisor+1),f
  5423  0390  09A1               	incf	(___awdiv@divisor),f
  5424  0391  0AA0               	skipnz
  5425  0392  1903               	incf	(___awdiv@divisor+1),f
  5426  0393  0AA1               	line	16
  5427                           	
  5428                           l1800:	
  5429  0394                     	clrf	(___awdiv@sign)
  5430  0394  01A6               	incf	(___awdiv@sign),f
  5431  0395  0AA6               	goto	l1802
  5432  0396  2B97               	line	17
  5433                           	
  5434                           l620:	
  5435  0397                     	line	18
  5436                           	
  5437                           l1802:	
  5438  0397                     	btfss	(___awdiv@dividend+1),7
  5439  0397  1FA3               	goto	u1001
  5440  0398  2B9A               	goto	u1000
  5441  0399  2B9B               u1001:
  5442  039A                     	goto	l1808
  5443  039A  2BA5               u1000:
  5444  039B                     	line	19
  5445                           	
  5446                           l1804:	
  5447  039B                     	comf	(___awdiv@dividend),f
  5448  039B  09A2               	comf	(___awdiv@dividend+1),f
  5449  039C  09A3               	incf	(___awdiv@dividend),f
  5450  039D  0AA2               	skipnz
  5451  039E  1903               	incf	(___awdiv@dividend+1),f
  5452  039F  0AA3               	line	20
  5453                           	
  5454                           l1806:	
  5455  03A0                     	movlw	low(01h)
  5456  03A0  3001               	movwf	(??___awdiv+0)+0
  5457  03A1  00A4               	movf	(??___awdiv+0)+0,w
  5458  03A2  0824               	xorwf	(___awdiv@sign),f
  5459  03A3  06A6               	goto	l1808
  5460  03A4  2BA5               	line	21
  5461                           	
  5462                           l621:	
  5463  03A5                     	line	22
  5464                           	
  5465                           l1808:	
  5466  03A5                     	clrf	(___awdiv@quotient)
  5467  03A5  01A7               	clrf	(___awdiv@quotient+1)
  5468  03A6  01A8               	line	23
  5469                           	
  5470                           l1810:	
  5471  03A7                     	movf	((___awdiv@divisor)),w
  5472  03A7  0820               iorwf	((___awdiv@divisor+1)),w
  5473  03A8  0421               	btfsc	status,2
  5474  03A9  1903               	goto	u1011
  5475  03AA  2BAC               	goto	u1010
  5476  03AB  2BAD               u1011:
  5477  03AC                     	goto	l1830
  5478  03AC  2BEA               u1010:
  5479  03AD                     	line	24
  5480                           	
  5481                           l1812:	
  5482  03AD                     	clrf	(___awdiv@counter)
  5483  03AD  01A5               	incf	(___awdiv@counter),f
  5484  03AE  0AA5               	line	25
  5485                           	goto	l1818
  5486  03AF  2BBC               	
  5487                           l624:	
  5488  03B0                     	line	26
  5489                           	
  5490                           l1814:	
  5491  03B0                     	movlw	01h
  5492  03B0  3001               	
  5493                           u1025:
  5494  03B1                     	clrc
  5495  03B1  1003               	rlf	(___awdiv@divisor),f
  5496  03B2  0DA0               	rlf	(___awdiv@divisor+1),f
  5497  03B3  0DA1               	addlw	-1
  5498  03B4  3EFF               	skipz
  5499  03B5  1D03               	goto	u1025
  5500  03B6  2BB1               	line	27
  5501                           	
  5502                           l1816:	
  5503  03B7                     	movlw	low(01h)
  5504  03B7  3001               	movwf	(??___awdiv+0)+0
  5505  03B8  00A4               	movf	(??___awdiv+0)+0,w
  5506  03B9  0824               	addwf	(___awdiv@counter),f
  5507  03BA  07A5               	goto	l1818
  5508  03BB  2BBC               	line	28
  5509                           	
  5510                           l623:	
  5511  03BC                     	line	25
  5512                           	
  5513                           l1818:	
  5514  03BC                     	btfss	(___awdiv@divisor+1),(15)&7
  5515  03BC  1FA1               	goto	u1031
  5516  03BD  2BBF               	goto	u1030
  5517  03BE  2BC0               u1031:
  5518  03BF                     	goto	l1814
  5519  03BF  2BB0               u1030:
  5520  03C0                     	goto	l1820
  5521  03C0  2BC2               	
  5522                           l625:	
  5523  03C1                     	goto	l1820
  5524  03C1  2BC2               	line	29
  5525                           	
  5526                           l626:	
  5527  03C2                     	line	30
  5528                           	
  5529                           l1820:	
  5530  03C2                     	movlw	01h
  5531  03C2  3001               	
  5532                           u1045:
  5533  03C3                     	clrc
  5534  03C3  1003               	rlf	(___awdiv@quotient),f
  5535  03C4  0DA7               	rlf	(___awdiv@quotient+1),f
  5536  03C5  0DA8               	addlw	-1
  5537  03C6  3EFF               	skipz
  5538  03C7  1D03               	goto	u1045
  5539  03C8  2BC3               	line	31
  5540                           	movf	(___awdiv@divisor+1),w
  5541  03C9  0821               	subwf	(___awdiv@dividend+1),w
  5542  03CA  0223               	skipz
  5543  03CB  1D03               	goto	u1055
  5544  03CC  2BCF               	movf	(___awdiv@divisor),w
  5545  03CD  0820               	subwf	(___awdiv@dividend),w
  5546  03CE  0222               u1055:
  5547  03CF                     	skipc
  5548  03CF  1C03               	goto	u1051
  5549  03D0  2BD2               	goto	u1050
  5550  03D1  2BD3               u1051:
  5551  03D2                     	goto	l1826
  5552  03D2  2BDB               u1050:
  5553  03D3                     	line	32
  5554                           	
  5555                           l1822:	
  5556  03D3                     	movf	(___awdiv@divisor),w
  5557  03D3  0820               	subwf	(___awdiv@dividend),f
  5558  03D4  02A2               	movf	(___awdiv@divisor+1),w
  5559  03D5  0821               	skipc
  5560  03D6  1C03               	decf	(___awdiv@dividend+1),f
  5561  03D7  03A3               	subwf	(___awdiv@dividend+1),f
  5562  03D8  02A3               	line	33
  5563                           	
  5564                           l1824:	
  5565  03D9                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  5566  03D9  1427               	goto	l1826
  5567  03DA  2BDB               	line	34
  5568                           	
  5569                           l627:	
  5570  03DB                     	line	35
  5571                           	
  5572                           l1826:	
  5573  03DB                     	movlw	01h
  5574  03DB  3001               	
  5575                           u1065:
  5576  03DC                     	clrc
  5577  03DC  1003               	rrf	(___awdiv@divisor+1),f
  5578  03DD  0CA1               	rrf	(___awdiv@divisor),f
  5579  03DE  0CA0               	addlw	-1
  5580  03DF  3EFF               	skipz
  5581  03E0  1D03               	goto	u1065
  5582  03E1  2BDC               	line	36
  5583                           	
  5584                           l1828:	
  5585  03E2                     	movlw	01h
  5586  03E2  3001               	subwf	(___awdiv@counter),f
  5587  03E3  02A5               	btfss	status,2
  5588  03E4  1D03               	goto	u1071
  5589  03E5  2BE7               	goto	u1070
  5590  03E6  2BE8               u1071:
  5591  03E7                     	goto	l1820
  5592  03E7  2BC2               u1070:
  5593  03E8                     	goto	l1830
  5594  03E8  2BEA               	
  5595                           l628:	
  5596  03E9                     	goto	l1830
  5597  03E9  2BEA               	line	37
  5598                           	
  5599                           l622:	
  5600  03EA                     	line	38
  5601                           	
  5602                           l1830:	
  5603  03EA                     	movf	((___awdiv@sign)),w
  5604  03EA  0826               	btfsc	status,2
  5605  03EB  1903               	goto	u1081
  5606  03EC  2BEE               	goto	u1080
  5607  03ED  2BEF               u1081:
  5608  03EE                     	goto	l1834
  5609  03EE  2BF5               u1080:
  5610  03EF                     	line	39
  5611                           	
  5612                           l1832:	
  5613  03EF                     	comf	(___awdiv@quotient),f
  5614  03EF  09A7               	comf	(___awdiv@quotient+1),f
  5615  03F0  09A8               	incf	(___awdiv@quotient),f
  5616  03F1  0AA7               	skipnz
  5617  03F2  1903               	incf	(___awdiv@quotient+1),f
  5618  03F3  0AA8               	goto	l1834
  5619  03F4  2BF5               	
  5620                           l629:	
  5621  03F5                     	line	40
  5622                           	
  5623                           l1834:	
  5624  03F5                     	movf	(___awdiv@quotient+1),w
  5625  03F5  0828               	movwf	(?___awdiv+1)
  5626  03F6  00A1               	movf	(___awdiv@quotient),w
  5627  03F7  0827               	movwf	(?___awdiv)
  5628  03F8  00A0               	goto	l630
  5629  03F9  2BFA               	
  5630                           l1836:	
  5631  03FA                     	line	41
  5632                           	
  5633                           l630:	
  5634  03FA                     	return
  5635  03FA  0008               	opt stack 0
  5636                           GLOBAL	__end_of___awdiv
  5637                           	__end_of___awdiv:
  5638  03FB                     	signat	___awdiv,8314
  5639                           	global	_lcd_init
  5640                           
  5641 ;; *************** function _lcd_init *****************
  5642 ;; Defined at:
  5643 ;;		line 130 in file "lcd.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;		None
  5646 ;; Auto vars:     Size  Location     Type
  5647 ;;		None
  5648 ;; Return value:  Size  Location     Type
  5649 ;;                  1    wreg      void 
  5650 ;; Registers used:
  5651 ;;		wreg, status,2, status,0, pclath, cstack
  5652 ;; Tracked objects:
  5653 ;;		On entry : 0/0
  5654 ;;		On exit  : 0/0
  5655 ;;		Unchanged: 0/0
  5656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5657 ;;      Params:         0       0       0       0       0
  5658 ;;      Locals:         0       0       0       0       0
  5659 ;;      Temps:          0       0       0       0       0
  5660 ;;      Totals:         0       0       0       0       0
  5661 ;;Total ram usage:        0 bytes
  5662 ;; Hardware stack levels used:    1
  5663 ;; Hardware stack levels required when called:    4
  5664 ;; This function calls:
  5665 ;;		_delay
  5666 ;;		_lcd_instReg
  5667 ;; This function is called by:
  5668 ;;		_main
  5669 ;; This function uses a non-reentrant model
  5670 ;;
  5671                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5672                           	file	"lcd.c"
  5673                           	line	130
  5674                           global __ptext18
  5675                           __ptext18:	;psect for function _lcd_init
  5676  04C0                     psect	text18
  5677                           	file	"lcd.c"
  5678                           	line	130
  5679                           	global	__size_of_lcd_init
  5680                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  5681  0045                     	
  5682                           _lcd_init:	
  5683  04C0                     ;incstack = 0
  5684                           	opt	stack 3
  5685                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  5686                           	line	132
  5687                           	
  5688                           l1902:	
  5689  04C0                     ;lcd.c: 132:     delay(100);
  5690                           	movlw	064h
  5691  04C0  3064               	bcf	status, 5	;RP0=0, select bank0
  5692  04C1  1283               	bcf	status, 6	;RP1=0, select bank0
  5693  04C2  1303               	movwf	(delay@t)
  5694  04C3  00A0               	movlw	0
  5695  04C4  3000               	movwf	((delay@t))+1
  5696  04C5  00A1               	fcall	_delay
  5697  04C6  120A  118A  2625  120A  118A  	line	136
  5698                           	
  5699                           l1904:	
  5700  04CB                     ;lcd.c: 136:     TRISDbits.TRISD0 = 0;
  5701                           	bsf	status, 5	;RP0=1, select bank1
  5702  04CB  1683               	bcf	status, 6	;RP1=0, select bank1
  5703  04CC  1303               	bcf	(136)^080h,0	;volatile
  5704  04CD  1008               	line	137
  5705                           	
  5706                           l1906:	
  5707  04CE                     ;lcd.c: 137:     TRISDbits.TRISD1 = 0;
  5708                           	bcf	(136)^080h,1	;volatile
  5709  04CE  1088               	line	138
  5710                           	
  5711                           l1908:	
  5712  04CF                     ;lcd.c: 138:     TRISDbits.TRISD2 = 0;
  5713                           	bcf	(136)^080h,2	;volatile
  5714  04CF  1108               	line	139
  5715                           	
  5716                           l1910:	
  5717  04D0                     ;lcd.c: 139:     TRISDbits.TRISD3 = 0;
  5718                           	bcf	(136)^080h,3	;volatile
  5719  04D0  1188               	line	140
  5720                           	
  5721                           l1912:	
  5722  04D1                     ;lcd.c: 140:     TRISDbits.TRISD4 = 0;
  5723                           	bcf	(136)^080h,4	;volatile
  5724  04D1  1208               	line	141
  5725                           	
  5726                           l1914:	
  5727  04D2                     ;lcd.c: 141:     TRISDbits.TRISD5 = 0;
  5728                           	bcf	(136)^080h,5	;volatile
  5729  04D2  1288               	line	154
  5730                           ;lcd.c: 154:     delay(100);
  5731                           	movlw	064h
  5732  04D3  3064               	bcf	status, 5	;RP0=0, select bank0
  5733  04D4  1283               	bcf	status, 6	;RP1=0, select bank0
  5734  04D5  1303               	movwf	(delay@t)
  5735  04D6  00A0               	movlw	0
  5736  04D7  3000               	movwf	((delay@t))+1
  5737  04D8  00A1               	fcall	_delay
  5738  04D9  120A  118A  2625  120A  118A  	line	155
  5739                           	
  5740                           l1916:	
  5741  04DE                     ;lcd.c: 155:     PORTDbits.RD5 = 1;
  5742                           	bcf	status, 5	;RP0=0, select bank0
  5743  04DE  1283               	bcf	status, 6	;RP1=0, select bank0
  5744  04DF  1303               	bsf	(8),5	;volatile
  5745  04E0  1688               	line	156
  5746                           ;lcd.c: 156:     lcd_instReg( 0x20|0x00|0x08 );
  5747                           	movlw	low(028h)
  5748  04E1  3028               	fcall	_lcd_instReg
  5749  04E2  120A  118A  2301  120A  118A  	line	157
  5750                           ;lcd.c: 157:     lcd_instReg( 0x08|0x04|0x00|0x00 );
  5751                           	movlw	low(0Ch)
  5752  04E7  300C               	fcall	_lcd_instReg
  5753  04E8  120A  118A  2301  120A  118A  	line	158
  5754                           ;lcd.c: 158:     lcd_instReg( 0x01 );
  5755                           	movlw	low(01h)
  5756  04ED  3001               	fcall	_lcd_instReg
  5757  04EE  120A  118A  2301  120A  118A  	line	159
  5758                           ;lcd.c: 159:     lcd_instReg( 0x02 );
  5759                           	movlw	low(02h)
  5760  04F3  3002               	fcall	_lcd_instReg
  5761  04F4  120A  118A  2301  120A  118A  	line	160
  5762                           ;lcd.c: 160:     delay(100);
  5763                           	movlw	064h
  5764  04F9  3064               	bcf	status, 5	;RP0=0, select bank0
  5765  04FA  1283               	bcf	status, 6	;RP1=0, select bank0
  5766  04FB  1303               	movwf	(delay@t)
  5767  04FC  00A0               	movlw	0
  5768  04FD  3000               	movwf	((delay@t))+1
  5769  04FE  00A1               	fcall	_delay
  5770  04FF  120A  118A  2625  120A  118A  	line	161
  5771                           	
  5772                           l86:	
  5773  0504                     	return
  5774  0504  0008               	opt stack 0
  5775                           GLOBAL	__end_of_lcd_init
  5776                           	__end_of_lcd_init:
  5777  0505                     	signat	_lcd_init,89
  5778                           	global	_lcd_instReg
  5779                           
  5780 ;; *************** function _lcd_instReg *****************
  5781 ;; Defined at:
  5782 ;;		line 67 in file "lcd.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;  i               1    wreg     unsigned char 
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;  i               1    2[BANK0 ] unsigned char 
  5787 ;; Return value:  Size  Location     Type
  5788 ;;                  1    wreg      void 
  5789 ;; Registers used:
  5790 ;;		wreg, status,2, status,0
  5791 ;; Tracked objects:
  5792 ;;		On entry : 0/0
  5793 ;;		On exit  : 0/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5796 ;;      Params:         0       0       0       0       0
  5797 ;;      Locals:         0       1       0       0       0
  5798 ;;      Temps:          0       2       0       0       0
  5799 ;;      Totals:         0       3       0       0       0
  5800 ;;Total ram usage:        3 bytes
  5801 ;; Hardware stack levels used:    1
  5802 ;; Hardware stack levels required when called:    3
  5803 ;; This function calls:
  5804 ;;		Nothing
  5805 ;; This function is called by:
  5806 ;;		_lcd_lincol
  5807 ;;		_lcd_init
  5808 ;;		_lcd_clr
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  5812                           	line	67
  5813                           global __ptext19
  5814                           __ptext19:	;psect for function _lcd_instReg
  5815  0301                     psect	text19
  5816                           	file	"lcd.c"
  5817                           	line	67
  5818                           	global	__size_of_lcd_instReg
  5819                           	__size_of_lcd_instReg	equ	__end_of_lcd_instReg-_lcd_instReg
  5820  0087                     	
  5821                           _lcd_instReg:	
  5822  0301                     ;incstack = 0
  5823                           	opt	stack 2
  5824                           ; Regs used in _lcd_instReg: [wreg+status,2+status,0]
  5825                           ;lcd_instReg@i stored from wreg
  5826                           	bcf	status, 5	;RP0=0, select bank0
  5827  0301  1283               	bcf	status, 6	;RP1=0, select bank0
  5828  0302  1303               	movwf	(lcd_instReg@i)
  5829  0303  00A2               	line	69
  5830                           	
  5831                           l1674:	
  5832  0304                     ;lcd.c: 67: void lcd_instReg( unsigned char i );lcd.c: 68: {;lcd.c: 69:     PORTDbits.RD
                                 4 = 0;
  5833                           	bcf	(8),4	;volatile
  5834  0304  1208               	line	70
  5835                           	
  5836                           l1676:	
  5837  0305                     ;lcd.c: 70:     PORTD = ((PORTD & 0xF0)|(i>>4&0x0F));
  5838                           	movf	(lcd_instReg@i),w
  5839  0305  0822               	movwf	(??_lcd_instReg+0)+0
  5840  0306  00A0               	movlw	04h
  5841  0307  3004               u855:
  5842  0308                     	clrc
  5843  0308  1003               	rrf	(??_lcd_instReg+0)+0,f
  5844  0309  0CA0               	addlw	-1
  5845  030A  3EFF               	skipz
  5846  030B  1D03               	goto	u855
  5847  030C  2B08               	movlw	low(0Fh)
  5848  030D  300F               	andwf	0+(??_lcd_instReg+0)+0,w
  5849  030E  0520               	movwf	(??_lcd_instReg+1)+0
  5850  030F  00A1               	movf	(8),w	;volatile
  5851  0310  0808               	andlw	0F0h
  5852  0311  39F0               	iorwf	0+(??_lcd_instReg+1)+0,w
  5853  0312  0421               	movwf	(8)	;volatile
  5854  0313  0088               	line	72
  5855                           	
  5856                           l1678:	
  5857  0314                     ;lcd.c: 72:     PORTDbits.RD5 = 0;
  5858                           	bcf	(8),5	;volatile
  5859  0314  1288               	line	73
  5860                           ;lcd.c: 73:     if( i == 0x01 || i == 0x02 )
  5861                           		decf	((lcd_instReg@i)),w
  5862  0315  0322               	btfsc	status,2
  5863  0316  1903               	goto	u861
  5864  0317  2B19               	goto	u860
  5865  0318  2B1A               u861:
  5866  0319                     	goto	l1682
  5867  0319  2B21               u860:
  5868  031A                     	
  5869                           l1680:	
  5870  031A                     		movlw	2
  5871  031A  3002               	xorwf	((lcd_instReg@i)),w
  5872  031B  0622               	btfss	status,2
  5873  031C  1D03               	goto	u871
  5874  031D  2B1F               	goto	u870
  5875  031E  2B20               u871:
  5876  031F                     	goto	l1684
  5877  031F  2B2C               u870:
  5878  0320                     	goto	l1682
  5879  0320  2B21               	
  5880                           l70:	
  5881  0321                     	line	74
  5882                           	
  5883                           l1682:	
  5884  0321                     ;lcd.c: 74:         _delay((unsigned long)((2)*(4000000/4000.0)));
  5885                           	opt asmopt_push
  5886                           opt asmopt_off
  5887                           movlw	3
  5888  0321  3003               	bcf	status, 5	;RP0=0, select bank0
  5889  0322  1283               	bcf	status, 6	;RP1=0, select bank0
  5890  0323  1303               movwf	((??_lcd_instReg+0)+0+1),f
  5891  0324  00A1               	movlw	151
  5892  0325  3097               movwf	((??_lcd_instReg+0)+0),f
  5893  0326  00A0               	u1717:
  5894  0327                     decfsz	((??_lcd_instReg+0)+0),f
  5895  0327  0BA0               	goto	u1717
  5896  0328  2B27               	decfsz	((??_lcd_instReg+0)+0+1),f
  5897  0329  0BA1               	goto	u1717
  5898  032A  2B27               opt asmopt_pop
  5899                           
  5900                           	goto	l1686
  5901  032B  2B34               	line	75
  5902                           ;lcd.c: 75:     else
  5903                           	
  5904                           l68:	
  5905  032C                     	line	76
  5906                           	
  5907                           l1684:	
  5908  032C                     ;lcd.c: 76:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  5909                           	opt asmopt_push
  5910                           opt asmopt_off
  5911                           	movlw	12
  5912  032C  300C               	bcf	status, 5	;RP0=0, select bank0
  5913  032D  1283               	bcf	status, 6	;RP1=0, select bank0
  5914  032E  1303               movwf	((??_lcd_instReg+0)+0),f
  5915  032F  00A0               	u1727:
  5916  0330                     decfsz	(??_lcd_instReg+0)+0,f
  5917  0330  0BA0               	goto	u1727
  5918  0331  2B30               	nop
  5919  0332  0000               opt asmopt_pop
  5920                           
  5921                           	goto	l1686
  5922  0333  2B34               	
  5923                           l71:	
  5924  0334                     	line	77
  5925                           	
  5926                           l1686:	
  5927  0334                     ;lcd.c: 77:     PORTDbits.RD5 = 1;
  5928                           	bcf	status, 5	;RP0=0, select bank0
  5929  0334  1283               	bcf	status, 6	;RP1=0, select bank0
  5930  0335  1303               	bsf	(8),5	;volatile
  5931  0336  1688               	line	80
  5932                           	
  5933                           l1688:	
  5934  0337                     ;lcd.c: 80:     if( (i & 0xF0) == (0x20 | 0x00) )
  5935                           	movlw	low(0F0h)
  5936  0337  30F0               	andwf	(lcd_instReg@i),w
  5937  0338  0522               	movwf	(??_lcd_instReg+0)+0
  5938  0339  00A0               		movlw	32
  5939  033A  3020               	xorwf	((??_lcd_instReg+0)+0),w
  5940  033B  0620               	btfss	status,2
  5941  033C  1D03               	goto	u881
  5942  033D  2B3F               	goto	u880
  5943  033E  2B40               u881:
  5944  033F                     	goto	l1700
  5945  033F  2B5C               u880:
  5946  0340                     	line	82
  5947                           	
  5948                           l1690:	
  5949  0340                     ;lcd.c: 81:     {;lcd.c: 82:         PORTDbits.RD4 = 0;
  5950                           	bcf	(8),4	;volatile
  5951  0340  1208               	line	83
  5952                           	
  5953                           l1692:	
  5954  0341                     ;lcd.c: 83:         PORTD = ((PORTD & 0xF0)|(i>>4&0x0F));
  5955                           	movf	(lcd_instReg@i),w
  5956  0341  0822               	movwf	(??_lcd_instReg+0)+0
  5957  0342  00A0               	movlw	04h
  5958  0343  3004               u895:
  5959  0344                     	clrc
  5960  0344  1003               	rrf	(??_lcd_instReg+0)+0,f
  5961  0345  0CA0               	addlw	-1
  5962  0346  3EFF               	skipz
  5963  0347  1D03               	goto	u895
  5964  0348  2B44               	movlw	low(0Fh)
  5965  0349  300F               	andwf	0+(??_lcd_instReg+0)+0,w
  5966  034A  0520               	movwf	(??_lcd_instReg+1)+0
  5967  034B  00A1               	movf	(8),w	;volatile
  5968  034C  0808               	andlw	0F0h
  5969  034D  39F0               	iorwf	0+(??_lcd_instReg+1)+0,w
  5970  034E  0421               	movwf	(8)	;volatile
  5971  034F  0088               	line	84
  5972                           	
  5973                           l1694:	
  5974  0350                     ;lcd.c: 84:         PORTDbits.RD5 = 0;
  5975                           	bcf	(8),5	;volatile
  5976  0350  1288               	line	85
  5977                           	
  5978                           l1696:	
  5979  0351                     ;lcd.c: 85:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  5980                           	opt asmopt_push
  5981                           opt asmopt_off
  5982                           	movlw	12
  5983  0351  300C               	bcf	status, 5	;RP0=0, select bank0
  5984  0352  1283               	bcf	status, 6	;RP1=0, select bank0
  5985  0353  1303               movwf	((??_lcd_instReg+0)+0),f
  5986  0354  00A0               	u1737:
  5987  0355                     decfsz	(??_lcd_instReg+0)+0,f
  5988  0355  0BA0               	goto	u1737
  5989  0356  2B55               	nop
  5990  0357  0000               opt asmopt_pop
  5991                           
  5992                           	line	86
  5993                           	
  5994                           l1698:	
  5995  0358                     ;lcd.c: 86:         PORTDbits.RD5 = 1;
  5996                           	bcf	status, 5	;RP0=0, select bank0
  5997  0358  1283               	bcf	status, 6	;RP1=0, select bank0
  5998  0359  1303               	bsf	(8),5	;volatile
  5999  035A  1688               	goto	l1700
  6000  035B  2B5C               	line	87
  6001                           ;lcd.c: 87:     }
  6002                           	
  6003                           l72:	
  6004  035C                     	line	89
  6005                           	
  6006                           l1700:	
  6007  035C                     ;lcd.c: 89:     PORTDbits.RD4 = 0;
  6008                           	bcf	(8),4	;volatile
  6009  035C  1208               	line	90
  6010                           	
  6011                           l1702:	
  6012  035D                     ;lcd.c: 90:     PORTD = ((PORTD & 0xF0)|(i&0x0F));
  6013                           	movlw	low(0Fh)
  6014  035D  300F               	andwf	(lcd_instReg@i),w
  6015  035E  0522               	movwf	(??_lcd_instReg+0)+0
  6016  035F  00A0               	movf	(8),w	;volatile
  6017  0360  0808               	andlw	0F0h
  6018  0361  39F0               	iorwf	0+(??_lcd_instReg+0)+0,w
  6019  0362  0420               	movwf	(8)	;volatile
  6020  0363  0088               	line	91
  6021                           	
  6022                           l1704:	
  6023  0364                     ;lcd.c: 91:     PORTDbits.RD5 = 0;
  6024                           	bcf	(8),5	;volatile
  6025  0364  1288               	line	92
  6026                           	
  6027                           l1706:	
  6028  0365                     ;lcd.c: 92:     if( i == 0x01 || i == 0x02 )
  6029                           		decf	((lcd_instReg@i)),w
  6030  0365  0322               	btfsc	status,2
  6031  0366  1903               	goto	u901
  6032  0367  2B69               	goto	u900
  6033  0368  2B6A               u901:
  6034  0369                     	goto	l1710
  6035  0369  2B71               u900:
  6036  036A                     	
  6037                           l1708:	
  6038  036A                     		movlw	2
  6039  036A  3002               	xorwf	((lcd_instReg@i)),w
  6040  036B  0622               	btfss	status,2
  6041  036C  1D03               	goto	u911
  6042  036D  2B6F               	goto	u910
  6043  036E  2B70               u911:
  6044  036F                     	goto	l1712
  6045  036F  2B7C               u910:
  6046  0370                     	goto	l1710
  6047  0370  2B71               	
  6048                           l75:	
  6049  0371                     	line	93
  6050                           	
  6051                           l1710:	
  6052  0371                     ;lcd.c: 93:         _delay((unsigned long)((2)*(4000000/4000.0)));
  6053                           	opt asmopt_push
  6054                           opt asmopt_off
  6055                           movlw	3
  6056  0371  3003               	bcf	status, 5	;RP0=0, select bank0
  6057  0372  1283               	bcf	status, 6	;RP1=0, select bank0
  6058  0373  1303               movwf	((??_lcd_instReg+0)+0+1),f
  6059  0374  00A1               	movlw	151
  6060  0375  3097               movwf	((??_lcd_instReg+0)+0),f
  6061  0376  00A0               	u1747:
  6062  0377                     decfsz	((??_lcd_instReg+0)+0),f
  6063  0377  0BA0               	goto	u1747
  6064  0378  2B77               	decfsz	((??_lcd_instReg+0)+0+1),f
  6065  0379  0BA1               	goto	u1747
  6066  037A  2B77               opt asmopt_pop
  6067                           
  6068                           	goto	l1714
  6069  037B  2B84               	line	94
  6070                           ;lcd.c: 94:     else
  6071                           	
  6072                           l73:	
  6073  037C                     	line	95
  6074                           	
  6075                           l1712:	
  6076  037C                     ;lcd.c: 95:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  6077                           	opt asmopt_push
  6078                           opt asmopt_off
  6079                           	movlw	12
  6080  037C  300C               	bcf	status, 5	;RP0=0, select bank0
  6081  037D  1283               	bcf	status, 6	;RP1=0, select bank0
  6082  037E  1303               movwf	((??_lcd_instReg+0)+0),f
  6083  037F  00A0               	u1757:
  6084  0380                     decfsz	(??_lcd_instReg+0)+0,f
  6085  0380  0BA0               	goto	u1757
  6086  0381  2B80               	nop
  6087  0382  0000               opt asmopt_pop
  6088                           
  6089                           	goto	l1714
  6090  0383  2B84               	
  6091                           l76:	
  6092  0384                     	line	96
  6093                           	
  6094                           l1714:	
  6095  0384                     ;lcd.c: 96:     PORTDbits.RD5 = 1;
  6096                           	bcf	status, 5	;RP0=0, select bank0
  6097  0384  1283               	bcf	status, 6	;RP1=0, select bank0
  6098  0385  1303               	bsf	(8),5	;volatile
  6099  0386  1688               	line	97
  6100                           	
  6101                           l77:	
  6102  0387                     	return
  6103  0387  0008               	opt stack 0
  6104                           GLOBAL	__end_of_lcd_instReg
  6105                           	__end_of_lcd_instReg:
  6106  0388                     	signat	_lcd_instReg,4217
  6107                           	global	_delay
  6108                           
  6109 ;; *************** function _delay *****************
  6110 ;; Defined at:
  6111 ;;		line 12 in file "delay.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;  t               2    0[BANK0 ] unsigned int 
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;		None
  6116 ;; Return value:  Size  Location     Type
  6117 ;;                  1    wreg      void 
  6118 ;; Registers used:
  6119 ;;		wreg, status,2, status,0
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/0
  6122 ;;		On exit  : 0/0
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6125 ;;      Params:         0       2       0       0       0
  6126 ;;      Locals:         0       0       0       0       0
  6127 ;;      Temps:          0       1       0       0       0
  6128 ;;      Totals:         0       3       0       0       0
  6129 ;;Total ram usage:        3 bytes
  6130 ;; Hardware stack levels used:    1
  6131 ;; Hardware stack levels required when called:    3
  6132 ;; This function calls:
  6133 ;;		Nothing
  6134 ;; This function is called by:
  6135 ;;		_lcd_init
  6136 ;;		_main
  6137 ;;		_motorDC_inc
  6138 ;;		_motorDC_dec
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6142                           	file	"delay.c"
  6143                           	line	12
  6144                           global __ptext20
  6145                           __ptext20:	;psect for function _delay
  6146  0625                     psect	text20
  6147                           	file	"delay.c"
  6148                           	line	12
  6149                           	global	__size_of_delay
  6150                           	__size_of_delay	equ	__end_of_delay-_delay
  6151  001C                     	
  6152                           _delay:	
  6153  0625                     ;incstack = 0
  6154                           	opt	stack 3
  6155                           ; Regs used in _delay: [wreg+status,2+status,0]
  6156                           	line	14
  6157                           	
  6158                           l1748:	
  6159  0625                     ;delay.c: 12: void delay( unsigned int t );delay.c: 13: {;delay.c: 14:     while( t )
  6160                           	goto	l1752
  6161  0625  2E37               	
  6162                           l53:	
  6163  0626                     	line	16
  6164                           	
  6165                           l1750:	
  6166  0626                     ;delay.c: 15:     {;delay.c: 16:         _delay((unsigned long)((1)*(4000000/4000.0)));

  6167                           	opt asmopt_push
  6168                           opt asmopt_off
  6169                           	movlw	199
  6170  0626  30C7               	bcf	status, 5	;RP0=0, select bank0
  6171  0627  1283               	bcf	status, 6	;RP1=0, select bank0
  6172  0628  1303               movwf	((??_delay+0)+0),f
  6173  0629  00A2               	u1767:
  6174  062A                     	nop2
  6175  062A  2E2B               decfsz	(??_delay+0)+0,f
  6176  062B  0BA2               	goto	u1767
  6177  062C  2E2A               	nop2
  6178  062D  2E2E               opt asmopt_pop
  6179                           
  6180                           	line	17
  6181                           ;delay.c: 17:         --t;
  6182                           	movlw	01h
  6183  062E  3001               	bcf	status, 5	;RP0=0, select bank0
  6184  062F  1283               	bcf	status, 6	;RP1=0, select bank0
  6185  0630  1303               	subwf	(delay@t),f
  6186  0631  02A0               	movlw	0
  6187  0632  3000               	skipc
  6188  0633  1C03               	decf	(delay@t+1),f
  6189  0634  03A1               	subwf	(delay@t+1),f
  6190  0635  02A1               	goto	l1752
  6191  0636  2E37               	line	18
  6192                           ;delay.c: 18:     }
  6193                           	
  6194                           l52:	
  6195  0637                     	line	14
  6196                           	
  6197                           l1752:	
  6198  0637                     ;delay.c: 14:     while( t )
  6199                           	bcf	status, 5	;RP0=0, select bank0
  6200  0637  1283               	bcf	status, 6	;RP1=0, select bank0
  6201  0638  1303               	movf	((delay@t)),w
  6202  0639  0820               iorwf	((delay@t+1)),w
  6203  063A  0421               	btfss	status,2
  6204  063B  1D03               	goto	u961
  6205  063C  2E3E               	goto	u960
  6206  063D  2E3F               u961:
  6207  063E                     	goto	l1750
  6208  063E  2E26               u960:
  6209  063F                     	goto	l55
  6210  063F  2E40               	
  6211                           l54:	
  6212  0640                     	line	19
  6213                           	
  6214                           l55:	
  6215  0640                     	return
  6216  0640  0008               	opt stack 0
  6217                           GLOBAL	__end_of_delay
  6218                           	__end_of_delay:
  6219  0641                     	signat	_delay,4217
  6220                           	global	_isr
  6221                           
  6222 ;; *************** function _isr *****************
  6223 ;; Defined at:
  6224 ;;		line 13 in file "interrupt.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;		None
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;		None
  6229 ;; Return value:  Size  Location     Type
  6230 ;;                  1    wreg      void 
  6231 ;; Registers used:
  6232 ;;		wreg, status,2, status,0, pclath, cstack
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/0
  6235 ;;		On exit  : 0/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6238 ;;      Params:         0       0       0       0       0
  6239 ;;      Locals:         0       0       0       0       0
  6240 ;;      Temps:          2       0       0       0       0
  6241 ;;      Totals:         2       0       0       0       0
  6242 ;;Total ram usage:        2 bytes
  6243 ;; Hardware stack levels used:    1
  6244 ;; Hardware stack levels required when called:    2
  6245 ;; This function calls:
  6246 ;;		_T2_int
  6247 ;; This function is called by:
  6248 ;;		Interrupt level 1
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  6252                           	file	"interrupt.c"
  6253                           	line	13
  6254                           global __ptext21
  6255                           __ptext21:	;psect for function _isr
  6256  06B5                     psect	text21
  6257                           	file	"interrupt.c"
  6258                           	line	13
  6259                           	global	__size_of_isr
  6260                           	__size_of_isr	equ	__end_of_isr-_isr
  6261  0014                     	
  6262                           _isr:	
  6263  06B5                     ;incstack = 0
  6264                           	opt	stack 2
  6265                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  6266                           psect	intentry,class=CODE,delta=2
  6267                           global __pintentry
  6268                           __pintentry:
  6269  0004                     global interrupt_function
  6270                           interrupt_function:
  6271  0004                     	global saved_w
  6272                           	saved_w	set	btemp+0
  6273  007E                     	movwf	saved_w
  6274  0004  00FE               	swapf	status,w
  6275  0005  0E03               	movwf	(??_isr+0)
  6276  0006  00F8               	movf	pclath,w
  6277  0007  080A               	movwf	(??_isr+1)
  6278  0008  00F9               	ljmp	_isr
  6279  0009  120A  118A  2EB5   psect	text21
  6280                           	line	25
  6281                           	
  6282                           i1l2184:	
  6283  06B5                     ;interrupt.c: 25:     if( PIR1bits.TMR2IF )
  6284                           	bcf	status, 5	;RP0=0, select bank0
  6285  06B5  1283               	bcf	status, 6	;RP1=0, select bank0
  6286  06B6  1303               	btfss	(12),1	;volatile
  6287  06B7  1C8C               	goto	u166_21
  6288  06B8  2EBA               	goto	u166_20
  6289  06B9  2EBB               u166_21:
  6290  06BA                     	goto	i1l365
  6291  06BA  2EC2               u166_20:
  6292  06BB                     	line	27
  6293                           	
  6294                           i1l2186:	
  6295  06BB                     ;interrupt.c: 26:     {;interrupt.c: 27:         PIR1bits.TMR2IF = 0;
  6296                           	bcf	(12),1	;volatile
  6297  06BB  108C               	line	28
  6298                           	
  6299                           i1l2188:	
  6300  06BC                     ;interrupt.c: 28:         T2_int();
  6301                           	fcall	_T2_int
  6302  06BC  120A  118A  2581  120A  118A  	goto	i1l365
  6303  06C1  2EC2               	line	29
  6304                           ;interrupt.c: 29:     }
  6305                           	
  6306                           i1l364:	
  6307  06C2                     	line	30
  6308                           	
  6309                           i1l365:	
  6310  06C2                     	movf	(??_isr+1),w
  6311  06C2  0879               	movwf	pclath
  6312  06C3  008A               	swapf	(??_isr+0)^0FFFFFF80h,w
  6313  06C4  0E78               	movwf	status
  6314  06C5  0083               	swapf	saved_w,f
  6315  06C6  0EFE               	swapf	saved_w,w
  6316  06C7  0E7E               	retfie
  6317  06C8  0009               	opt stack 0
  6318                           GLOBAL	__end_of_isr
  6319                           	__end_of_isr:
  6320  06C9                     	signat	_isr,89
  6321                           	global	_T2_int
  6322                           
  6323 ;; *************** function _T2_int *****************
  6324 ;; Defined at:
  6325 ;;		line 125 in file "Timers.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;		None
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;		None
  6330 ;; Return value:  Size  Location     Type
  6331 ;;                  1    wreg      void 
  6332 ;; Registers used:
  6333 ;;		wreg, status,2, status,0, pclath, cstack
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6339 ;;      Params:         0       0       0       0       0
  6340 ;;      Locals:         0       0       0       0       0
  6341 ;;      Temps:          2       0       0       0       0
  6342 ;;      Totals:         2       0       0       0       0
  6343 ;;Total ram usage:        2 bytes
  6344 ;; Hardware stack levels used:    1
  6345 ;; Hardware stack levels required when called:    1
  6346 ;; This function calls:
  6347 ;;		___lwmod
  6348 ;;		i1_motorDC_dutycycle
  6349 ;; This function is called by:
  6350 ;;		_isr
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  6354                           	file	"Timers.c"
  6355                           	line	125
  6356                           global __ptext22
  6357                           __ptext22:	;psect for function _T2_int
  6358  0581                     psect	text22
  6359                           	file	"Timers.c"
  6360                           	line	125
  6361                           	global	__size_of_T2_int
  6362                           	__size_of_T2_int	equ	__end_of_T2_int-_T2_int
  6363  0035                     	
  6364                           _T2_int:	
  6365  0581                     ;incstack = 0
  6366                           	opt	stack 2
  6367                           ; Regs used in _T2_int: [wreg+status,2+status,0+pclath+cstack]
  6368                           	line	127
  6369                           	
  6370                           i1l2042:	
  6371  0581                     ;Timers.c: 127:     ++T2count;
  6372                           	movlw	01h
  6373  0581  3001               	bcf	status, 5	;RP0=0, select bank0
  6374  0582  1283               	bcf	status, 6	;RP1=0, select bank0
  6375  0583  1303               	addwf	(_T2count),f
  6376  0584  07BB               	skipnc
  6377  0585  1803               	incf	(_T2count+1),f
  6378  0586  0ABC               	movlw	0
  6379  0587  3000               	addwf	(_T2count+1),f
  6380  0588  07BC               	line	128
  6381                           	
  6382                           i1l2044:	
  6383  0589                     ;Timers.c: 128:     T2count %= 100;
  6384                           	movlw	064h
  6385  0589  3064               	movwf	(___lwmod@divisor)
  6386  058A  00F0               	movlw	0
  6387  058B  3000               	movwf	((___lwmod@divisor))+1
  6388  058C  00F1               	movf	(_T2count+1),w
  6389  058D  083C               	movwf	(___lwmod@dividend+1)
  6390  058E  00F3               	movf	(_T2count),w
  6391  058F  083B               	movwf	(___lwmod@dividend)
  6392  0590  00F2               	fcall	___lwmod
  6393  0591  120A  118A  2505  120A  118A  	movf	(1+(?___lwmod)),w
  6394  0596  0871               	bcf	status, 5	;RP0=0, select bank0
  6395  0597  1283               	bcf	status, 6	;RP1=0, select bank0
  6396  0598  1303               	movwf	(_T2count+1)
  6397  0599  00BC               	movf	(0+(?___lwmod)),w
  6398  059A  0870               	movwf	(_T2count)
  6399  059B  00BB               	line	129
  6400                           	
  6401                           i1l2046:	
  6402  059C                     ;Timers.c: 129:     PORTCbits.RC1 = (T2count < motorDC_dutycycle()) ? 1 : 0 ;
  6403                           	fcall	i1_motorDC_dutycycle
  6404  059C  120A  118A  26EF  120A  118A  	movwf	(??_T2_int+0)+0
  6405  05A1  00F6               	clrf	(??_T2_int+0)+0+1
  6406  05A2  01F7               	movf	1+(??_T2_int+0)+0,w
  6407  05A3  0877               	bcf	status, 5	;RP0=0, select bank0
  6408  05A4  1283               	bcf	status, 6	;RP1=0, select bank0
  6409  05A5  1303               	subwf	(_T2count+1),w
  6410  05A6  023C               	skipz
  6411  05A7  1D03               	goto	u147_25
  6412  05A8  2DAB               	movf	0+(??_T2_int+0)+0,w
  6413  05A9  0876               	subwf	(_T2count),w
  6414  05AA  023B               u147_25:
  6415  05AB                     	skipc
  6416  05AB  1C03               	goto	u147_21
  6417  05AC  2DAE               	goto	u147_20
  6418  05AD  2DB2               	
  6419                           u147_21:
  6420  05AE                     	bcf	status, 5	;RP0=0, select bank0
  6421  05AE  1283               	bcf	status, 6	;RP1=0, select bank0
  6422  05AF  1303               	bsf	(7),1	;volatile
  6423  05B0  1487               	goto	u148_24
  6424  05B1  2DB5               u147_20:
  6425  05B2                     	bcf	status, 5	;RP0=0, select bank0
  6426  05B2  1283               	bcf	status, 6	;RP1=0, select bank0
  6427  05B3  1303               	bcf	(7),1	;volatile
  6428  05B4  1087               u148_24:
  6429  05B5                     	line	130
  6430                           	
  6431                           i1l343:	
  6432  05B5                     	return
  6433  05B5  0008               	opt stack 0
  6434                           GLOBAL	__end_of_T2_int
  6435                           	__end_of_T2_int:
  6436  05B6                     	signat	_T2_int,89
  6437                           	global	i1_motorDC_dutycycle
  6438                           
  6439 ;; *************** function i1_motorDC_dutycycle *****************
  6440 ;; Defined at:
  6441 ;;		line 23 in file "motorDC.c"
  6442 ;; Parameters:    Size  Location     Type
  6443 ;;		None
  6444 ;; Auto vars:     Size  Location     Type
  6445 ;;		None
  6446 ;; Return value:  Size  Location     Type
  6447 ;;                  1    wreg      unsigned char 
  6448 ;; Registers used:
  6449 ;;		wreg
  6450 ;; Tracked objects:
  6451 ;;		On entry : 0/0
  6452 ;;		On exit  : 0/0
  6453 ;;		Unchanged: 0/0
  6454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6455 ;;      Params:         0       0       0       0       0
  6456 ;;      Locals:         0       0       0       0       0
  6457 ;;      Temps:          0       0       0       0       0
  6458 ;;      Totals:         0       0       0       0       0
  6459 ;;Total ram usage:        0 bytes
  6460 ;; Hardware stack levels used:    1
  6461 ;; This function calls:
  6462 ;;		Nothing
  6463 ;; This function is called by:
  6464 ;;		_T2_int
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  6468                           	file	"motorDC.c"
  6469                           	line	23
  6470                           global __ptext23
  6471                           __ptext23:	;psect for function i1_motorDC_dutycycle
  6472  06EF                     psect	text23
  6473                           	file	"motorDC.c"
  6474                           	line	23
  6475                           	global	__size_ofi1_motorDC_dutycycle
  6476                           	__size_ofi1_motorDC_dutycycle	equ	__end_ofi1_motorDC_dutycycle-i1_motorDC_dutycycle
  6477  0005                     	
  6478                           i1_motorDC_dutycycle:	
  6479  06EF                     ;incstack = 0
  6480                           	opt	stack 2
  6481                           ; Regs used in i1_motorDC_dutycycle: [wreg]
  6482                           	line	25
  6483                           	
  6484                           i1l1898:	
  6485  06EF                     ;motorDC.c: 25:     return(motorDC_dc);
  6486                           	bcf	status, 5	;RP0=0, select bank0
  6487  06EF  1283               	bcf	status, 6	;RP1=0, select bank0
  6488  06F0  1303               	movf	(_motorDC_dc),w
  6489  06F1  0843               	goto	i1l201
  6490  06F2  2EF3               	
  6491                           i1l1900:	
  6492  06F3                     	line	26
  6493                           	
  6494                           i1l201:	
  6495  06F3                     	return
  6496  06F3  0008               	opt stack 0
  6497                           GLOBAL	__end_ofi1_motorDC_dutycycle
  6498                           	__end_ofi1_motorDC_dutycycle:
  6499  06F4                     	signat	i1_motorDC_dutycycle,89
  6500                           	global	___lwmod
  6501                           
  6502 ;; *************** function ___lwmod *****************
  6503 ;; Defined at:
  6504 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;  divisor         2    0[COMMON] unsigned int 
  6507 ;;  dividend        2    2[COMMON] unsigned int 
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;  counter         1    5[COMMON] unsigned char 
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  2    0[COMMON] unsigned int 
  6512 ;; Registers used:
  6513 ;;		wreg, status,2, status,0
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6519 ;;      Params:         4       0       0       0       0
  6520 ;;      Locals:         1       0       0       0       0
  6521 ;;      Temps:          1       0       0       0       0
  6522 ;;      Totals:         6       0       0       0       0
  6523 ;;Total ram usage:        6 bytes
  6524 ;; Hardware stack levels used:    1
  6525 ;; This function calls:
  6526 ;;		Nothing
  6527 ;; This function is called by:
  6528 ;;		_T2_int
  6529 ;; This function uses a non-reentrant model
  6530 ;;
  6531                           psect	text24,local,class=CODE,delta=2,merge=1,group=1
  6532                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  6533                           	line	5
  6534                           global __ptext24
  6535                           __ptext24:	;psect for function ___lwmod
  6536  0505                     psect	text24
  6537                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  6538                           	line	5
  6539                           	global	__size_of___lwmod
  6540                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  6541  0041                     	
  6542                           ___lwmod:	
  6543  0505                     ;incstack = 0
  6544                           	opt	stack 2
  6545                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6546                           	line	12
  6547                           	
  6548                           i1l1876:	
  6549  0505                     	movf	((___lwmod@divisor)),w
  6550  0505  0870               iorwf	((___lwmod@divisor+1)),w
  6551  0506  0471               	btfsc	status,2
  6552  0507  1903               	goto	u118_21
  6553  0508  2D0A               	goto	u118_20
  6554  0509  2D0B               u118_21:
  6555  050A                     	goto	i1l1894
  6556  050A  2D40               u118_20:
  6557  050B                     	line	13
  6558                           	
  6559                           i1l1878:	
  6560  050B                     	clrf	(___lwmod@counter)
  6561  050B  01F5               	incf	(___lwmod@counter),f
  6562  050C  0AF5               	line	14
  6563                           	goto	i1l1884
  6564  050D  2D1A               	
  6565                           i1l754:	
  6566  050E                     	line	15
  6567                           	
  6568                           i1l1880:	
  6569  050E                     	movlw	01h
  6570  050E  3001               	
  6571                           u119_25:
  6572  050F                     	clrc
  6573  050F  1003               	rlf	(___lwmod@divisor),f
  6574  0510  0DF0               	rlf	(___lwmod@divisor+1),f
  6575  0511  0DF1               	addlw	-1
  6576  0512  3EFF               	skipz
  6577  0513  1D03               	goto	u119_25
  6578  0514  2D0F               	line	16
  6579                           	
  6580                           i1l1882:	
  6581  0515                     	movlw	low(01h)
  6582  0515  3001               	movwf	(??___lwmod+0)+0
  6583  0516  00F4               	movf	(??___lwmod+0)+0,w
  6584  0517  0874               	addwf	(___lwmod@counter),f
  6585  0518  07F5               	goto	i1l1884
  6586  0519  2D1A               	line	17
  6587                           	
  6588                           i1l753:	
  6589  051A                     	line	14
  6590                           	
  6591                           i1l1884:	
  6592  051A                     	btfss	(___lwmod@divisor+1),(15)&7
  6593  051A  1FF1               	goto	u120_21
  6594  051B  2D1D               	goto	u120_20
  6595  051C  2D1E               u120_21:
  6596  051D                     	goto	i1l1880
  6597  051D  2D0E               u120_20:
  6598  051E                     	goto	i1l1886
  6599  051E  2D20               	
  6600                           i1l755:	
  6601  051F                     	goto	i1l1886
  6602  051F  2D20               	line	18
  6603                           	
  6604                           i1l756:	
  6605  0520                     	line	19
  6606                           	
  6607                           i1l1886:	
  6608  0520                     	movf	(___lwmod@divisor+1),w
  6609  0520  0871               	subwf	(___lwmod@dividend+1),w
  6610  0521  0273               	skipz
  6611  0522  1D03               	goto	u121_25
  6612  0523  2D26               	movf	(___lwmod@divisor),w
  6613  0524  0870               	subwf	(___lwmod@dividend),w
  6614  0525  0272               u121_25:
  6615  0526                     	skipc
  6616  0526  1C03               	goto	u121_21
  6617  0527  2D29               	goto	u121_20
  6618  0528  2D2A               u121_21:
  6619  0529                     	goto	i1l1890
  6620  0529  2D31               u121_20:
  6621  052A                     	line	20
  6622                           	
  6623                           i1l1888:	
  6624  052A                     	movf	(___lwmod@divisor),w
  6625  052A  0870               	subwf	(___lwmod@dividend),f
  6626  052B  02F2               	movf	(___lwmod@divisor+1),w
  6627  052C  0871               	skipc
  6628  052D  1C03               	decf	(___lwmod@dividend+1),f
  6629  052E  03F3               	subwf	(___lwmod@dividend+1),f
  6630  052F  02F3               	goto	i1l1890
  6631  0530  2D31               	
  6632                           i1l757:	
  6633  0531                     	line	21
  6634                           	
  6635                           i1l1890:	
  6636  0531                     	movlw	01h
  6637  0531  3001               	
  6638                           u122_25:
  6639  0532                     	clrc
  6640  0532  1003               	rrf	(___lwmod@divisor+1),f
  6641  0533  0CF1               	rrf	(___lwmod@divisor),f
  6642  0534  0CF0               	addlw	-1
  6643  0535  3EFF               	skipz
  6644  0536  1D03               	goto	u122_25
  6645  0537  2D32               	line	22
  6646                           	
  6647                           i1l1892:	
  6648  0538                     	movlw	01h
  6649  0538  3001               	subwf	(___lwmod@counter),f
  6650  0539  02F5               	btfss	status,2
  6651  053A  1D03               	goto	u123_21
  6652  053B  2D3D               	goto	u123_20
  6653  053C  2D3E               u123_21:
  6654  053D                     	goto	i1l1886
  6655  053D  2D20               u123_20:
  6656  053E                     	goto	i1l1894
  6657  053E  2D40               	
  6658                           i1l758:	
  6659  053F                     	goto	i1l1894
  6660  053F  2D40               	line	23
  6661                           	
  6662                           i1l752:	
  6663  0540                     	line	24
  6664                           	
  6665                           i1l1894:	
  6666  0540                     	movf	(___lwmod@dividend+1),w
  6667  0540  0873               	movwf	(?___lwmod+1)
  6668  0541  00F1               	movf	(___lwmod@dividend),w
  6669  0542  0872               	movwf	(?___lwmod)
  6670  0543  00F0               	goto	i1l759
  6671  0544  2D45               	
  6672                           i1l1896:	
  6673  0545                     	line	25
  6674                           	
  6675                           i1l759:	
  6676  0545                     	return
  6677  0545  0008               	opt stack 0
  6678                           GLOBAL	__end_of___lwmod
  6679                           	__end_of___lwmod:
  6680  0546                     	signat	___lwmod,8314
  6681                           global	___latbits
  6682                           ___latbits	equ	2
  6683  0002                     	global	btemp
  6684                           	btemp set 07Eh
  6685  007E                     
  6686                           	DABS	1,126,2	;btemp
  6687                           	global	wtemp0
  6688                           	wtemp0 set btemp+0
  6689  007E                     	end


Data Sizes:
    Strings     74
    Constant    16
    Data        1
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      13
    BANK0            80     27      40
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_T2_int
    _T2_int->___lwmod

Critical Paths under _main in BANK0

    _main->_lcd_num
    _teclado->_b0_bordaSubida
    _teclado->_b1_bordaSubida
    _motorDC_init->_T2_start
    _motorDC_inc->_delay
    _motorDC_dec->_delay
    _lcd_print->_lcd_lincol
    _lcd_num->___awdiv
    _lcd_lincol->_lcd_instReg
    _lcd_init->_delay
    _lcd_init->_lcd_instReg

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    6974
                                             21 BANK0      6     6      0
                              _delay
                           _lcd_init
                            _lcd_num
                          _lcd_print
                            _motorDC
                        _motorDC_dec
                  _motorDC_dutycycle
                        _motorDC_inc
                       _motorDC_init
                            _teclado
                       _teclado_init
 ---------------------------------------------------------------------------------
 (1) _teclado_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _teclado                                             10    10      0     322
                                              3 BANK0     10    10      0
                     _b0_bordaSubida
                     _b1_bordaSubida
 ---------------------------------------------------------------------------------
 (2) _b1_bordaSubida                                       3     3      0      47
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _b0_bordaSubida                                       3     3      0      47
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _motorDC_init                                         0     0      0      98
                            _T2_init
                           _T2_start
 ---------------------------------------------------------------------------------
 (2) _T2_start                                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _T2_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorDC_inc                                          3     3      0     503
                                              3 BANK0      3     3      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _motorDC_dutycycle                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorDC_dec                                          2     2      0     503
                                              3 BANK0      2     2      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _motorDC                                              2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2    1441
                                              6 BANK0      5     3      2
                        _lcd_dataReg
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (1) _lcd_num                                             12     8      4    2905
                                              9 BANK0     12     8      4
                            ___awdiv
                            ___awmod
                        _lcd_dataReg
                         _lcd_lincol
                  _motorDC_dutycycle (ARG)
 ---------------------------------------------------------------------------------
 (2) _lcd_lincol                                           3     2      1     372
                                              3 BANK0      3     2      1
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (2) _lcd_dataReg                                          3     3      0      44
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     908
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     655
                              _delay
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (3) _lcd_instReg                                          3     3      0     176
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     479
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0     311
                                              8 COMMON     2     2      0
                             _T2_int
 ---------------------------------------------------------------------------------
 (5) _T2_int                                               2     2      0     311
                                              6 COMMON     2     2      0
                            ___lwmod
                i1_motorDC_dutycycle
 ---------------------------------------------------------------------------------
 (6) i1_motorDC_dutycycle                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay
   _lcd_init
     _delay
     _lcd_instReg
   _lcd_num
     ___awdiv
     ___awmod
     _lcd_dataReg
     _lcd_lincol
       _lcd_instReg
     _motorDC_dutycycle (ARG)
   _lcd_print
     _lcd_dataReg
     _lcd_lincol
       _lcd_instReg
   _motorDC
   _motorDC_dec
     _delay
   _motorDC_dutycycle
   _motorDC_inc
     _delay
   _motorDC_init
     _T2_init
     _T2_start
   _teclado
     _b0_bordaSubida
     _b1_bordaSubida
   _teclado_init

 _isr (ROOT)
   _T2_int
     ___lwmod
     i1_motorDC_dutycycle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1B      28       5       50.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      35      12        0.0%
ABS                  0      0      35       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Jun 01 07:55:23 2022

                           _T 007B                             pc 0002                   __CFG_CP$OFF 0000  
                lcd_dataReg@d 0022                            l13 066A                            l14 0674  
                          l33 0650                            l34 065A                            l52 0637  
                          l53 0626                            l54 0640                            l70 0321  
                          l55 0640                            l71 0334                            l72 035C  
                          l80 05E7                            l73 037C                            l75 0371  
                          l83 06B4                            l76 0384                            l68 032C  
                          l92 0571                            l77 0387                            l93 0558  
                          l86 0504                            l94 0580                            l95 0580  
                          l98 0191                            l99 01D5                    _b0Anterior 0047  
                ___awdiv@sign 0026                            fsr 0004                    _b1Anterior 0046  
                         l100 01A6                           l101 01C0                           l110 021B  
                         l102 01C1                           l111 0269                           l103 01E3  
                         l112 0269                           l104 01EF                           l105 01E4  
                         l201 06EE                           l107 020C                           l108 020D  
                         l212 061D                           l109 021B                           l205 05FE  
                         l214 0622                           l215 0624                           l207 0603  
                         l208 0607                           l160 009C                           l161 0064  
                         l162 00CD                           l170 0095                           l171 0097  
                         l163 006B                           l340 068A                           l260 0276  
                         l180 0176                           l172 0098                           l164 0072  
                         l261 02D4                           l181 0177                           l173 0099  
                         l165 0079                           l262 028B                           l182 0177  
                         l174 009A                           l166 0080                           l263 02C9  
                         l255 06D9                           l175 0175                           l167 0087  
                         l159 0059                           l264 02BE                           l176 00EC  
                         l168 008D                           l265 02FC                           l177 00F9  
                         l169 0093                           l346 06E1                           l266 02EA  
                         l178 0138                           l195 069F                           l267 02FC  
                         l179 0149                           l620 0397                           l268 02FB  
                         l621 03A5                           l269 0300                           l630 03FA  
                         l622 03EA                           l198 06E9                           l623 03BC  
                         l624 03B0                           l640 0440                           l625 03C1  
                         l641 044E                           l633 040A                           l626 03C2  
                         l642 045A                           l634 0414                           l627 03DB  
                         l643 045F                           l635 044F                           l628 03E9  
                         l636 0429                           l629 03F5                           l637 041D  
                         l638 042E                           l639 042F        __end_of_b0_bordaSubida 0675  
                         _PR2 0092                  __CFG_CPD$OFF 0000                           u900 036A  
                         u901 0369                           u910 0370                           u911 036F  
                         u920 0662                           u921 0661                           u930 0667  
                         u931 0666                           u860 031A                           u940 0648  
                         u861 0319                           u941 0647                           u870 0320  
                         u950 064D                           u871 031F                           u855 0308  
                         u951 064C                           u960 063F                           u880 0340  
                         u961 063E                           u881 033F                           u990 038F  
                         u895 0344                           u991 038E                           u975 05BD  
                         u985 06A6                           _dia 0041                           _hor 007A  
                         _min 0044                           _isr 06B5                           _seg 0045  
                         fsr0 0004                  ___awmod@sign 0026                _b1_bordaSubida 0641  
                __CFG_LVP$OFF 0000                   lcd_num@size 0031                          l2000 02C2  
                        l2010 02E3                          l2002 02C9                          l2020 05F3  
                        l2012 02EA                          l2004 02CD                          l2030 0613  
                        l2022 05FB                          l2014 02F4                          l2006 02D4  
                        l2110 003A                          l2102 0028                          l2032 061A  
                        l2040 06EE                          l2024 05FE                          l2016 0300  
                        l2008 02D9                          l2120 006B                          l2112 0047  
                        l2104 002B                          l2034 061D                          l2026 0603  
                        l2018 05E8                          l2130 008D                          l2122 0072  
                        l2114 0052                          l2106 0030                          l2036 0622  
                        l2028 0608                          l2140 00DE                          l2132 009B  
                        l2124 0079                          l2116 0059                          l2108 0035  
                        l2038 06EA                          l2150 0138                          l2142 00EC  
                        l2126 0080                          l2118 0064                          l2134 009C  
                        l2152 0149                          l2144 0106                          l2232 00A4  
                        l2128 0087                          l2136 00CD                          l2154 015D  
                        l2146 0123                          l2138 00D4                          l1700 035C  
                        l2148 0129                          l1710 0371                          l1702 035D  
                        l1712 037C                          l1704 0364                          l1800 0394  
                        l1720 0662                          l1714 0384                          l1706 0365  
                        l1810 03A7                          l1802 0397                          l1730 0674  
                        l1722 0667                          l1708 036A                          l1820 03C2  
                        l1812 03AD                          l1804 039B                          l1724 066A  
                        l1716 065B                          l1740 0650                          l1732 0641  
                        l1750 0626                          l1910 04D0                          l1902 04C0  
                        l1822 03D3                          l1814 03B0                          l1830 03EA  
                        l1806 03A0                          l1726 066E                          l1718 065E  
                        l1742 0654                          l1734 0644                          l1752 0637  
                        l1680 031A                          l1912 04D1                          l1904 04CB  
                        l1832 03EF                          l1824 03D9                          l1816 03B7  
                        l1808 03A5                          l1840 03FE                          l1760 05CA  
                        l1920 054D                          l1728 0672                          l1744 0658  
                        l1736 0648                          l1690 0340                          l1682 0321  
                        l1674 0304                          l1914 04D2                          l1906 04CE  
                        l1834 03F5                          l1826 03DB                          l1818 03BC  
                        l1850 0414                          l1842 0402                          l1770 05E4  
                        l1762 05D1                          l1754 05B9                          l1930 017D  
                        l1922 0558                          l1746 065A                          l1738 064D  
                        l1748 0625                          l1692 0341                          l1684 032C  
                        l1676 0305                          l1916 04DE                          l1908 04CF  
                        l1836 03FA                          l1828 03E2                          l1860 042F  
                        l1852 041A                          l1844 0407                          l1764 05D4  
                        l1756 05BA                          l1772 06A3                          l1940 01A1  
                        l1932 0186                          l1924 0566                          l1780 067D  
                        l1694 0350                          l1686 0334                          l1678 0314  
                        l1870 0454                          l1862 0439                          l1854 041D  
                        l1846 040A                          l1838 03FB                          l1766 05D5  
                        l1758 05C9                          l1950 01E4                          l1942 01A6  
                        l1934 018B                          l1926 056C                          l1918 0549  
                        l1782 0681                          l1774 0675                          l1790 06DA  
                        l1696 0351                          l1688 0337                          l1872 045A  
                        l1864 0440                          l1856 0424                          l1848 040E  
                        l1768 05DC                          l1960 0214                          l1952 01EA  
                        l1944 01BD                          l1936 0191                          l1928 0571  
                        l1784 0685                          l1776 0676                          l1792 06E0  
                        l1698 0358                          l1794 0388                          l1874 045F  
                        l1866 0447                          l1858 0429                          l1962 025B  
                        l1946 01C1                          l1954 01EF                          l1938 019B  
                        l1786 0686                          l1778 067A                          l1970 06D3  
                        l1796 038B                          l1868 044F                          l1956 0203  
                        l1948 01D5                          l1788 0689                          l1980 026A  
                        l1972 06D5                          l1964 06C9                          l1798 038F  
                        l1958 020D                          l1974 068B                          l1990 0283  
                        l1982 026E                          l1966 06CD                          l1976 068F  
                        l1992 028A                          l1984 0275                          l1968 06D0  
                        l1978 06E5                          l1994 028B                          l1986 0276  
                        l1996 02A7                          l1988 0282                          l1998 02BE  
                        ?_isr 0070                          STR_1 0498                          STR_2 0487  
                        STR_3 0476                          STR_4 04A9                          STR_5 04BD  
                        STR_6 04BA                          u1000 039B                          u1001 039A  
                        u1010 03AD                          u1011 03AC                          u1100 040E  
                        u1101 040D                          u1030 03C0                          u1110 041A  
                        u1031 03BF                          u1111 0419                          u1025 03B1  
                        u1050 03D3                          u1130 042D                          u1051 03D2  
                        u1131 042C                          u1140 0439                          u1300 0203  
                        u1045 03C3                          u1141 0438                          u1125 041E  
                        u1301 0202                          u1070 03E8                          u1310 020B  
                        u1071 03E7                          u1055 03CF                          u1311 020A  
                        u1080 03EF                          u1160 044D                          u1320 0214  
                        u1240 057F                          u1400 02C8                          u1081 03EE  
                        u1065 03DC                          u1161 044C                          u1145 0435  
                        u1321 0213                          u1305 01FF                          u1241 057E  
                        u1401 02C7                          u1170 0454                          u1090 0402  
                        u1330 0268                          u1250 0182                          u1410 02D3  
                        u1171 0453                          u1155 0441                          u1091 0401  
                        u1331 0267                          u1251 0180                          u1411 02D2  
                        u1260 0183                          u1420 02D9                          u1340 0274  
                        u1421 02D8                          u1341 0273                          u1270 018B  
                        u1430 02E3                          u1335 0264                          u1271 018A  
                        u1431 02E2                          u1280 01BD                          u1440 02F4  
                        u1360 0289                          u1281 01BC                          u1441 02F3  
                        u1361 0288                          u1290 01E2                          u1450 05FB  
                        u1354 027C                          u1610 00D4                          u1291 01E1  
                        u1451 05FA                          u1355 027A                          u1611 00D3  
                        u1460 061A                          u1380 02A7                          u1620 00DE  
                        u1461 0619                          u1381 02A6                          u1621 00DD  
                        u1374 0299                          u1630 0129                          u1295 01DE  
                        u1375 0296                          u1631 0128                          u1707 05E1  
                        u1395 02AA                          u1717 0327                          u1727 0330  
                        u1737 0355                          u1747 0377                          u1757 0380  
                        u1767 062A                          u1697 05CE                          _TMR0 0001  
                        _TMR2 0011                          _WPUB 0095                  __CFG_WRT$OFF 0000  
             __end_of_T2_init 068B                          _main 0028                          btemp 007E  
                        start 000C                 __CFG_IESO$OFF 0000                  lcd_instReg@i 0022  
                       ??_isr 0078                  lcd_num@sinal 0032                         ?_main 0070  
             __end_of___awdiv 03FB                 __CFG_WDTE$OFF 0000               __end_of___awmod 0460  
             ___awdiv@divisor 0020                         _T2CON 0012               ?_b0_bordaSubida 0070  
      __end_of_b1_bordaSubida 065B                         i1l201 06F3                         i1l343 05B5  
             __end_of___lwmod 0546                         i1l364 06C2                         i1l365 06C2  
                       i1l752 0540                         i1l753 051A                         i1l754 050E  
                       i1l755 051F                         i1l756 0520                         i1l757 0531  
                       i1l758 053F                         i1l759 0545               ___awdiv@counter 0025  
                       _TMR1H 000F                         _TMR1L 000E                         _PORTB 0006  
                       _PORTD 0008                         _TRISB 0086         __end_of_tecladoMatriz 0476  
                lcd_print@col 0026                  lcd_print@lin 002A                __CFG_FCMEN$OFF 0000  
                lcd_print@pos 0029                  lcd_print@str 0027                         _Valor 007C  
             __end_of_lcd_num 026A              __end_of_T2_start 06E2                         _delay 0625  
             __end_of_teclado 0301                __CFG_BOREN$OFF 0000               __end_of_motorDC 06EA  
                       pclath 000A                         status 0003                         wtemp0 007E  
               lcd_lincol@col 0023                 lcd_lincol@lin 0025                __CFG_MCLRE$OFF 0000  
             __initialization 000F                  __end_of_main 017A                        ??_main 0035  
 __end_ofi1_motorDC_dutycycle 06F4               ?_b1_bordaSubida 0070                     ??_T2_init 0020  
                      ?_delay 0020                        _CCPR1L 0015              ___awdiv@dividend 0022  
                      _ANSELH 0189                        i1l2042 0581                        i1l2044 0589  
                      i1l2046 059C                        u120_20 051E                        u120_21 051D  
                      u121_20 052A                        i1l2184 06B5                        u121_21 0529  
                      i1l2186 06BB                        i1l1900 06F3                        i1l2188 06BC  
                      u121_25 0526                        u122_25 0532                        u123_20 053E  
                      i1l1880 050E                        u123_21 053D                        i1l1890 0531  
                      i1l1882 0515                        i1l1892 0538                        i1l1884 051A  
                      i1l1876 0505                        i1l1886 0520                        i1l1878 050B  
                      i1l1894 0540                        i1l1896 0545                        i1l1888 052A  
                      i1l1898 06EF                        u118_20 050B                        u118_21 050A  
                      u119_25 050F                        u147_20 05B2                        u147_21 05AE  
                      u147_25 05AB                        u148_24 05B5                        u166_20 06BB  
                      u166_21 06BA                        _T2_int 0581                  ?_motorDC_dec 0070  
                ?_motorDC_inc 0070                __CFG_PWRTE$OFF 0000          __size_of_lcd_dataReg 0032  
               main@dutycycle 0039              __end_of_lcd_init 0505                     ??___awdiv 0024  
                   ??___awmod 0024          __size_of_lcd_instReg 0087                     ??___lwmod 0074  
                      delay@t 0020              ___awdiv@quotient 0027               ___awmod@divisor 0020  
             ___awmod@counter 0025                     ??_lcd_num 002D                  __pdataCOMMON 007C  
                   ??_teclado 0023                        saved_w 007E                     ??_motorDC 0020  
           _b1_bordaSubida$95 0022       __end_of__initialization 0024                __pcstackCOMMON 0070  
               __end_of_delay 0641                     ?_T2_start 0020                _OPTION_REGbits 0081  
                     ??_delay 0022            __size_of_lcd_print 003B                    __pbssBANK0 003B  
                     ?_T2_int 0070                 ?_teclado_init 0070                    __pmaintext 0028  
            ??_b0_bordaSubida 0020                    ??_T2_start 0022                    __pintentry 0004  
                     _CCP1CON 0017                     T2_start@c 0020                    _lcd_lincol 06A0  
                     _T2_init 0675                       _T0count 003F                       _T1count 003D  
                     _T2count 003B             _motorDC_dutycycle 06EA                     ?_lcd_init 0070  
                  __stringtab 0460                ??_teclado_init 0020            ?_motorDC_dutycycle 0070  
               ?_motorDC_init 0070               __size_of_T2_int 0035           ??_motorDC_dutycycle 0020  
        __size_of_motorDC_dec 001D          __size_of_motorDC_inc 0020             __end_of_lcd_print 0581  
                     ___awdiv 0388                       ___awmod 03FB              ??_b1_bordaSubida 0020  
                     ___lwmod 0505                       __ptext1 06C9                       __ptext2 026A  
                     __ptext3 0641                       __ptext4 065B                       __ptext5 068B  
                     __ptext6 06DA                       __ptext7 0675                       __ptext8 05E8  
                     __ptext9 06EA                       _lcd_num 017A                     _T1CONbits 0010  
                   _T2CONbits 0012                  __size_of_isr 0014              ___awmod@dividend 0022  
                     _teclado 026A                       _motorDC 06E2     __end_of_motorDC_dutycycle 06EF  
                  ??_lcd_init 0023          end_of_initialization 0024                ??_motorDC_init 0022  
                  _motorDC_dc 0043                     _PORTCbits 0007                     _PORTDbits 0008  
                   _TRISCbits 0087                   ?_lcd_lincol 0023                     _TRISDbits 0088  
__size_ofi1_motorDC_dutycycle 0005                 ??_lcd_dataReg 0020                    lcd_num@col 0029  
                  lcd_num@div 0033                    lcd_num@lin 0030                    lcd_num@tam 002C  
                 _CCP1CONbits 0017                    lcd_num@num 002A                __end_of_T2_int 05B6  
               ??_lcd_instReg 0020                 __pidataCOMMON 06F4             __size_of_T2_start 0008  
        __end_of_teclado_init 06DA           start_initialization 000F                 _tecladoMatriz 0466  
  __size_of_motorDC_dutycycle 0005                   __end_of_isr 06C9                      ??_T2_int 0076  
    __CFG_FOSC$INTRC_NOCLKOUT 0000           __end_of_lcd_dataReg 05E8           __size_of_lcd_lincol 0015  
         __end_of_lcd_instReg 0388          __end_of_motorDC_init 06A0                   __pbssCOMMON 007A  
                   ___latbits 0002                 __pcstackBANK0 0020                      ?_T2_init 0070  
           __size_of_lcd_init 0045                    teclado@aux 002A                      ?___awdiv 0020  
                    ?___awmod 0020                      ?___lwmod 0070                     __pstrings 0460  
                   _lcd_print 0546                      ?_lcd_num 0029                      ?_teclado 0070  
                    ?_motorDC 0070             _b0_bordaSubida$84 0022                __size_of_delay 001C  
           interrupt_function 0004                   _lcd_dataReg 05B6                 ??_motorDC_dec 0023  
               ??_motorDC_inc 0023                      _PIE1bits 008C                      _PIR1bits 000C  
                 _lcd_instReg 0301         __size_of_teclado_init 0011             b0_bordaSubida@aux 0021  
         i1_motorDC_dutycycle 06EF                      _T2_start 06DA                    ?_lcd_print 0026  
                 __stringbase 0465                     main@tecla 003A                  ??_lcd_lincol 0024  
     __size_of_b0_bordaSubida 001A          ?i1_motorDC_dutycycle 0070              __size_of_T2_init 0016  
                _teclado_init 06C9         __size_of_motorDC_init 0015            __end_of_lcd_lincol 06B5  
         __end_of_motorDC_dec 0625           __end_of_motorDC_inc 0608              __size_of___awdiv 0073  
            __size_of___awmod 0065               _motorDC_dec$311 0023              __size_of___lwmod 0041  
          __end_of__stringtab 0466             b1_bordaSubida@aux 0021               _motorDC_inc$309 0024  
            __size_of_lcd_num 00F0       __size_of_b1_bordaSubida 001A              __size_of_teclado 0097  
       ??i1_motorDC_dutycycle 0070                      __ptext10 0608                      __ptext11 06E2  
                    __ptext20 0625                      __ptext12 0546                      __ptext21 06B5  
                    __ptext13 017A                      __ptext22 0581                      __ptext14 06A0  
                    __ptext23 06EF                      __ptext15 05B6                      __ptext24 0505  
                    __ptext16 03FB                      __ptext17 0388                      __ptext18 04C0  
                    __ptext19 0301              __size_of_motorDC 0008             __CFG_BOR4V$BOR40V 0000  
                    _lcd_init 04C0                 __size_of_main 0152                  _motorDC_init 068B  
                 ??_lcd_print 0028                    _INTCONbits 000B                      intlevel1 0000  
                    teclado@c 002C                      teclado@l 002B              ___lwmod@dividend 0072  
                    motorDC@c 0021                   _motorDC_dec 0608                   _motorDC_inc 05E8  
                   stringcode 0460               ___lwmod@divisor 0070               ___lwmod@counter 0075  
              _b0_bordaSubida 065B                      stringdir 0460                      stringtab 0460  
                ?_lcd_dataReg 0070                  ?_lcd_instReg 0070  
